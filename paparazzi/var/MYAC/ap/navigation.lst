   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"navigation.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.stateGetPositionEnu_i,"ax",%progbits
  19              		.align	1
  20              		.thumb
  21              		.thumb_func
  23              	stateGetPositionEnu_i:
  24              	.LFB51:
  25              		.file 1 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: radians*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   int32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i* ltp_def) {
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 442:./state.h     ****   /* convert to float */
 443:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 444:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 445:./state.h     ****   RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 446:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 447:./state.h     **** 
 448:./state.h     ****   /* clear bits for all local frame representations */
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 451:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 453:./state.h     **** 
 454:./state.h     ****   state.ned_initialized_i = TRUE;
 455:./state.h     ****   state.ned_initialized_f = TRUE;
 456:./state.h     **** }
 457:./state.h     **** 
 458:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 459:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f* utm_def) {
 460:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 461:./state.h     ****   state.utm_initialized_f = TRUE;
 462:./state.h     **** 
 463:./state.h     ****   /* clear bits for all local frame representations */
 464:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 465:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 466:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 467:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 468:./state.h     **** }
 469:./state.h     **** /*******************************************************************************
 470:./state.h     ****  *                                                                             *
 471:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  ******************************************************************************/
 474:./state.h     **** 
 475:./state.h     **** /************* declaration of transformation functions ************/
 476:./state.h     **** extern void stateCalcPositionEcef_i(void);
 477:./state.h     **** extern void stateCalcPositionNed_i(void);
 478:./state.h     **** extern void stateCalcPositionEnu_i(void);
 479:./state.h     **** extern void stateCalcPositionLla_i(void);
 480:./state.h     **** extern void stateCalcPositionUtm_f(void);
 481:./state.h     **** extern void stateCalcPositionEcef_f(void);
 482:./state.h     **** extern void stateCalcPositionNed_f(void);
 483:./state.h     **** extern void stateCalcPositionEnu_f(void);
 484:./state.h     **** extern void stateCalcPositionLla_f(void);
 485:./state.h     **** 
 486:./state.h     **** /*********************** validity test functions ******************/
 487:./state.h     **** 
 488:./state.h     **** /// Test if local coordinates are valid.
 489:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void) {
 490:./state.h     ****   return ((state.ned_initialized_i || state.utm_initialized_f) && (state.pos_status & (POS_LOCAL_CO
 491:./state.h     **** }
 492:./state.h     **** 
 493:./state.h     **** /// Test if global coordinates are valid.
 494:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void) {
 495:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 496:./state.h     **** }
 497:./state.h     **** 
 498:./state.h     **** /************************ Set functions ****************************/
 499:./state.h     **** 
 500:./state.h     **** /// Set position from ECEF coordinates (int).
 501:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i* ecef_pos) {
 502:./state.h     ****   INT32_VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 503:./state.h     ****   /* clear bits for all position representations and only set the new one */
 504:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 505:./state.h     **** }
 506:./state.h     **** 
 507:./state.h     **** /// Set position from local NED coordinates (int).
 508:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i* ned_pos) {
 509:./state.h     ****   INT32_VECT3_COPY(state.ned_pos_i, *ned_pos);
 510:./state.h     ****   /* clear bits for all position representations and only set the new one */
 511:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 512:./state.h     **** }
 513:./state.h     **** 
 514:./state.h     **** /// Set position from local ENU coordinates (int).
 515:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i* enu_pos) {
 516:./state.h     ****   INT32_VECT3_COPY(state.enu_pos_i, *enu_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from LLA coordinates (int).
 522:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i* lla_pos) {
 523:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 524:./state.h     ****   /* clear bits for all position representations and only set the new one */
 525:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 526:./state.h     **** }
 527:./state.h     **** 
 528:./state.h     **** /// Set multiple position coordinates (int).
 529:./state.h     **** static inline void stateSetPosition_i(
 530:./state.h     ****     struct EcefCoor_i* ecef_pos,
 531:./state.h     ****     struct NedCoor_i* ned_pos,
 532:./state.h     ****     struct EnuCoor_i* enu_pos,
 533:./state.h     ****     struct LlaCoor_i* lla_pos) {
 534:./state.h     ****   /* clear all status bit */
 535:./state.h     ****   state.pos_status = 0;
 536:./state.h     ****   if (ecef_pos != NULL) {
 537:./state.h     ****     INT32_VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 538:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 539:./state.h     ****   }
 540:./state.h     ****   if (ned_pos != NULL) {
 541:./state.h     ****     INT32_VECT3_COPY(state.ned_pos_i, *ned_pos);
 542:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 543:./state.h     ****   }
 544:./state.h     ****   if (enu_pos != NULL) {
 545:./state.h     ****     INT32_VECT3_COPY(state.enu_pos_i, *enu_pos);
 546:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 547:./state.h     ****   }
 548:./state.h     ****   if (lla_pos != NULL) {
 549:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 550:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 551:./state.h     ****   }
 552:./state.h     **** }
 553:./state.h     **** 
 554:./state.h     **** /// Set position from UTM coordinates (float).
 555:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f* utm_pos) {
 556:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 557:./state.h     ****   /* clear bits for all position representations and only set the new one */
 558:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 559:./state.h     **** }
 560:./state.h     **** 
 561:./state.h     **** /// Set position from ECEF coordinates (float).
 562:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f* ecef_pos) {
 563:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 564:./state.h     ****   /* clear bits for all position representations and only set the new one */
 565:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 566:./state.h     **** }
 567:./state.h     **** 
 568:./state.h     **** /// Set position from local NED coordinates (float).
 569:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f* ned_pos) {
 570:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 571:./state.h     ****   /* clear bits for all position representations and only set the new one */
 572:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 573:./state.h     **** }
 574:./state.h     **** 
 575:./state.h     **** /// Set position from local ENU coordinates (float).
 576:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f* enu_pos) {
 577:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 578:./state.h     ****   /* clear bits for all position representations and only set the new one */
 579:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 580:./state.h     **** }
 581:./state.h     **** 
 582:./state.h     **** /// Set position from LLA coordinates (float).
 583:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f* lla_pos) {
 584:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 585:./state.h     ****   /* clear bits for all position representations and only set the new one */
 586:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 587:./state.h     **** }
 588:./state.h     **** 
 589:./state.h     **** /// Set multiple position coordinates (float).
 590:./state.h     **** static inline void stateSetPosition_f(
 591:./state.h     ****     struct EcefCoor_f* ecef_pos,
 592:./state.h     ****     struct NedCoor_f* ned_pos,
 593:./state.h     ****     struct EnuCoor_f* enu_pos,
 594:./state.h     ****     struct LlaCoor_f* lla_pos,
 595:./state.h     ****     struct UtmCoor_f* utm_pos) {
 596:./state.h     ****   /* clear all status bit */
 597:./state.h     ****   state.pos_status = 0;
 598:./state.h     ****   if (ecef_pos != NULL) {
 599:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 600:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 601:./state.h     ****   }
 602:./state.h     ****   if (ned_pos != NULL) {
 603:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 604:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 605:./state.h     ****   }
 606:./state.h     ****   if (enu_pos != NULL) {
 607:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 608:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 609:./state.h     ****   }
 610:./state.h     ****   if (lla_pos != NULL) {
 611:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 612:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 613:./state.h     ****   }
 614:./state.h     ****   if (utm_pos != NULL) {
 615:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 616:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 617:./state.h     ****   }
 618:./state.h     **** }
 619:./state.h     **** 
 620:./state.h     **** /************************ Get functions ****************************/
 621:./state.h     **** 
 622:./state.h     **** /// Get position in ECEF coordinates (int).
 623:./state.h     **** static inline struct EcefCoor_i* stateGetPositionEcef_i(void) {
 624:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I))
 625:./state.h     ****     stateCalcPositionEcef_i();
 626:./state.h     ****   return &state.ecef_pos_i;
 627:./state.h     **** }
 628:./state.h     **** 
 629:./state.h     **** /// Get position in local NED coordinates (int).
 630:./state.h     **** static inline struct NedCoor_i* stateGetPositionNed_i(void) {
 631:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I))
 632:./state.h     ****     stateCalcPositionNed_i();
 633:./state.h     ****   return &state.ned_pos_i;
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /// Get position in local ENU coordinates (int).
 637:./state.h     **** static inline struct EnuCoor_i* stateGetPositionEnu_i(void) {
  26              		.loc 1 637 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 638:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I))
  35              		.loc 1 638 0
  36 0002 044B     		ldr	r3, .L4
  37 0004 1888     		ldrh	r0, [r3, #0]
  38 0006 4307     		lsls	r3, r0, #29
  39 0008 01D4     		bmi	.L2
 639:./state.h     ****     stateCalcPositionEnu_i();
  40              		.loc 1 639 0
  41 000a FFF7FEFF 		bl	stateCalcPositionEnu_i
  42              	.LVL0:
  43              	.L2:
 640:./state.h     ****   return &state.enu_pos_i;
 641:./state.h     **** }
  44              		.loc 1 641 0
  45 000e 0248     		ldr	r0, .L4+4
  46 0010 08BD     		pop	{r3, pc}
  47              	.L5:
  48 0012 00BF     		.align	2
  49              	.L4:
  50 0014 00000000 		.word	state
  51 0018 6C000000 		.word	state+108
  52              		.cfi_endproc
  53              	.LFE51:
  55              		.global	__aeabi_fmul
  56              		.global	__aeabi_f2iz
  57              		.global	__aeabi_f2d
  58              		.global	__aeabi_dsub
  59              		.global	__aeabi_dmul
  60              		.global	__aeabi_d2iz
  61              		.section	.text.nav_init,"ax",%progbits
  62              		.align	1
  63              		.global	nav_init
  64              		.thumb
  65              		.thumb_func
  67              	nav_init:
  68              	.LFB122:
  69              		.file 2 "firmwares/rotorcraft/navigation.c"
   1:firmwares/rotorcraft/navigation.c **** /*
   2:firmwares/rotorcraft/navigation.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   3:firmwares/rotorcraft/navigation.c ****  *
   4:firmwares/rotorcraft/navigation.c ****  * This file is part of paparazzi.
   5:firmwares/rotorcraft/navigation.c ****  *
   6:firmwares/rotorcraft/navigation.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/navigation.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/navigation.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/navigation.c ****  * any later version.
  10:firmwares/rotorcraft/navigation.c ****  *
  11:firmwares/rotorcraft/navigation.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/navigation.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/navigation.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/navigation.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/navigation.c ****  *
  16:firmwares/rotorcraft/navigation.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/navigation.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/navigation.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/navigation.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/navigation.c ****  */
  21:firmwares/rotorcraft/navigation.c **** 
  22:firmwares/rotorcraft/navigation.c **** /**
  23:firmwares/rotorcraft/navigation.c ****  * @file firmwares/rotorcraft/navigation.c
  24:firmwares/rotorcraft/navigation.c ****  *
  25:firmwares/rotorcraft/navigation.c ****  * Rotorcraft navigation functions.
  26:firmwares/rotorcraft/navigation.c ****  */
  27:firmwares/rotorcraft/navigation.c **** 
  28:firmwares/rotorcraft/navigation.c **** 
  29:firmwares/rotorcraft/navigation.c **** #define NAV_C
  30:firmwares/rotorcraft/navigation.c **** 
  31:firmwares/rotorcraft/navigation.c **** #include "firmwares/rotorcraft/navigation.h"
  32:firmwares/rotorcraft/navigation.c **** 
  33:firmwares/rotorcraft/navigation.c **** #include "pprz_debug.h"
  34:firmwares/rotorcraft/navigation.c **** #include "subsystems/gps.h"
  35:firmwares/rotorcraft/navigation.c **** #include "subsystems/ins.h"
  36:firmwares/rotorcraft/navigation.c **** #include "state.h"
  37:firmwares/rotorcraft/navigation.c **** 
  38:firmwares/rotorcraft/navigation.c **** #include "firmwares/rotorcraft/autopilot.h"
  39:firmwares/rotorcraft/navigation.c **** #include "generated/modules.h"
  40:firmwares/rotorcraft/navigation.c **** #include "generated/flight_plan.h"
  41:firmwares/rotorcraft/navigation.c **** 
  42:firmwares/rotorcraft/navigation.c **** /* for default GUIDANCE_H_USE_REF */
  43:firmwares/rotorcraft/navigation.c **** #include "firmwares/rotorcraft/guidance/guidance_h.h"
  44:firmwares/rotorcraft/navigation.c **** 
  45:firmwares/rotorcraft/navigation.c **** #include "math/pprz_algebra_int.h"
  46:firmwares/rotorcraft/navigation.c **** 
  47:firmwares/rotorcraft/navigation.c **** const uint8_t nb_waypoint = NB_WAYPOINT;
  48:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i waypoints[NB_WAYPOINT];
  49:firmwares/rotorcraft/navigation.c **** 
  50:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i navigation_target;
  51:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i navigation_carrot;
  52:firmwares/rotorcraft/navigation.c **** 
  53:firmwares/rotorcraft/navigation.c **** struct EnuCoor_i nav_last_point;
  54:firmwares/rotorcraft/navigation.c **** 
  55:firmwares/rotorcraft/navigation.c **** uint8_t last_wp __attribute__ ((unused));
  56:firmwares/rotorcraft/navigation.c **** 
  57:firmwares/rotorcraft/navigation.c **** int32_t ground_alt;
  58:firmwares/rotorcraft/navigation.c **** 
  59:firmwares/rotorcraft/navigation.c **** uint8_t horizontal_mode;
  60:firmwares/rotorcraft/navigation.c **** uint8_t nav_segment_start, nav_segment_end;
  61:firmwares/rotorcraft/navigation.c **** uint8_t nav_circle_centre;
  62:firmwares/rotorcraft/navigation.c **** int32_t nav_circle_radius, nav_circle_qdr, nav_circle_radians;
  63:firmwares/rotorcraft/navigation.c **** 
  64:firmwares/rotorcraft/navigation.c **** int32_t nav_leg_progress;
  65:firmwares/rotorcraft/navigation.c **** int32_t nav_leg_length;
  66:firmwares/rotorcraft/navigation.c **** 
  67:firmwares/rotorcraft/navigation.c **** int32_t nav_roll, nav_pitch;
  68:firmwares/rotorcraft/navigation.c **** int32_t nav_heading, nav_course;
  69:firmwares/rotorcraft/navigation.c **** float nav_radius;
  70:firmwares/rotorcraft/navigation.c **** 
  71:firmwares/rotorcraft/navigation.c **** #ifndef DEFAULT_CIRCLE_RADIUS
  72:firmwares/rotorcraft/navigation.c **** #define DEFAULT_CIRCLE_RADIUS 0.
  73:firmwares/rotorcraft/navigation.c **** #endif
  74:firmwares/rotorcraft/navigation.c **** 
  75:firmwares/rotorcraft/navigation.c **** uint8_t vertical_mode;
  76:firmwares/rotorcraft/navigation.c **** uint32_t nav_throttle;
  77:firmwares/rotorcraft/navigation.c **** int32_t nav_climb, nav_altitude, nav_flight_altitude;
  78:firmwares/rotorcraft/navigation.c **** float flight_altitude;
  79:firmwares/rotorcraft/navigation.c **** 
  80:firmwares/rotorcraft/navigation.c **** static inline void nav_set_altitude( void );
  81:firmwares/rotorcraft/navigation.c **** 
  82:firmwares/rotorcraft/navigation.c **** #define CLOSE_TO_WAYPOINT (15 << 8)
  83:firmwares/rotorcraft/navigation.c **** #define ARRIVED_AT_WAYPOINT (3 << 8)
  84:firmwares/rotorcraft/navigation.c **** #define CARROT_DIST (12 << 8)
  85:firmwares/rotorcraft/navigation.c **** 
  86:firmwares/rotorcraft/navigation.c **** void nav_init(void) {
  70              		.loc 2 86 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 72
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 20
  77              		.cfi_offset 4, -20
  78              		.cfi_offset 5, -16
  79              		.cfi_offset 6, -12
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 93B0     		sub	sp, sp, #76
  83              	.LCFI2:
  84              		.cfi_def_cfa_offset 96
  87:firmwares/rotorcraft/navigation.c ****   // convert to
  88:firmwares/rotorcraft/navigation.c ****   const struct EnuCoor_f wp_tmp_float[NB_WAYPOINT] = WAYPOINTS;
  85              		.loc 2 88 0
  86 0004 6846     		mov	r0, sp
  87 0006 3449     		ldr	r1, .L9+8
  88 0008 4822     		movs	r2, #72
  89 000a FFF7FEFF 		bl	memcpy
  90              	.LVL1:
  91 000e 0024     		movs	r4, #0
  92              	.LVL2:
  93              	.L7:
  89:firmwares/rotorcraft/navigation.c ****   // init int32 waypoints
  90:firmwares/rotorcraft/navigation.c ****   uint8_t i = 0;
  91:firmwares/rotorcraft/navigation.c ****   for (i = 0; i < nb_waypoint; i++) {
  92:firmwares/rotorcraft/navigation.c ****     waypoints[i].x = POS_BFP_OF_REAL(wp_tmp_float[i].x);
  94              		.loc 2 92 0 discriminator 2
  95 0010 4FF08741 		mov	r1, #1132462080
  96 0014 5DF80400 		ldr	r0, [sp, r4]	@ float
  97 0018 FFF7FEFF 		bl	__aeabi_fmul
  98              	.LVL3:
  99 001c FFF7FEFF 		bl	__aeabi_f2iz
 100              	.LVL4:
 101 0020 2E4D     		ldr	r5, .L9+12
  86:firmwares/rotorcraft/navigation.c **** void nav_init(void) {
 102              		.loc 2 86 0 discriminator 2
 103 0022 00AB     		add	r3, sp, #0
 104 0024 1F19     		adds	r7, r3, r4
 105              		.loc 2 92 0 discriminator 2
 106 0026 2851     		str	r0, [r5, r4]
  93:firmwares/rotorcraft/navigation.c ****     waypoints[i].y = POS_BFP_OF_REAL(wp_tmp_float[i].y);
 107              		.loc 2 93 0 discriminator 2
 108 0028 4FF08741 		mov	r1, #1132462080
 109 002c 7868     		ldr	r0, [r7, #4]	@ float
 110 002e FFF7FEFF 		bl	__aeabi_fmul
 111              	.LVL5:
 112 0032 FFF7FEFF 		bl	__aeabi_f2iz
 113              	.LVL6:
  86:firmwares/rotorcraft/navigation.c **** void nav_init(void) {
 114              		.loc 2 86 0 discriminator 2
 115 0036 2E19     		adds	r6, r5, r4
 116              		.loc 2 93 0 discriminator 2
 117 0038 7060     		str	r0, [r6, #4]
  94:firmwares/rotorcraft/navigation.c ****     waypoints[i].z = POS_BFP_OF_REAL((wp_tmp_float[i].z - GROUND_ALT));
 118              		.loc 2 94 0 discriminator 2
 119 003a B868     		ldr	r0, [r7, #8]	@ float
 120 003c FFF7FEFF 		bl	__aeabi_f2d
 121              	.LVL7:
 122 0040 23A3     		adr	r3, .L9
 123 0042 D3E90023 		ldrd	r2, [r3]
 124 0046 FFF7FEFF 		bl	__aeabi_dsub
 125              	.LVL8:
 126 004a 0022     		movs	r2, #0
 127 004c 244B     		ldr	r3, .L9+16
 128 004e FFF7FEFF 		bl	__aeabi_dmul
 129              	.LVL9:
 130 0052 FFF7FEFF 		bl	__aeabi_d2iz
 131              	.LVL10:
 132 0056 0C34     		adds	r4, r4, #12
  91:firmwares/rotorcraft/navigation.c ****   for (i = 0; i < nb_waypoint; i++) {
 133              		.loc 2 91 0 discriminator 2
 134 0058 482C     		cmp	r4, #72
 135              		.loc 2 94 0 discriminator 2
 136 005a B060     		str	r0, [r6, #8]
  91:firmwares/rotorcraft/navigation.c ****   for (i = 0; i < nb_waypoint; i++) {
 137              		.loc 2 91 0 discriminator 2
 138 005c D8D1     		bne	.L7
  95:firmwares/rotorcraft/navigation.c ****   }
  96:firmwares/rotorcraft/navigation.c ****   nav_block = 0;
  97:firmwares/rotorcraft/navigation.c ****   nav_stage = 0;
 139              		.loc 2 97 0
 140 005e 2148     		ldr	r0, .L9+20
  98:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL(GROUND_ALT);
 141              		.loc 2 98 0
 142 0060 214C     		ldr	r4, .L9+24
  96:firmwares/rotorcraft/navigation.c ****   nav_block = 0;
 143              		.loc 2 96 0
 144 0062 0023     		movs	r3, #0
 145 0064 214A     		ldr	r2, .L9+28
 146              		.loc 2 98 0
 147 0066 4FF41341 		mov	r1, #37632
  97:firmwares/rotorcraft/navigation.c ****   nav_stage = 0;
 148              		.loc 2 97 0
 149 006a 0370     		strb	r3, [r0, #0]
 150              		.loc 2 98 0
 151 006c 2160     		str	r1, [r4, #0]
  99:firmwares/rotorcraft/navigation.c ****   nav_altitude = POS_BFP_OF_REAL(SECURITY_HEIGHT);
 152              		.loc 2 99 0
 153 006e 2048     		ldr	r0, .L9+32
 100:firmwares/rotorcraft/navigation.c ****   nav_flight_altitude = nav_altitude;
 154              		.loc 2 100 0
 155 0070 2049     		ldr	r1, .L9+36
  96:firmwares/rotorcraft/navigation.c ****   nav_block = 0;
 156              		.loc 2 96 0
 157 0072 1370     		strb	r3, [r2, #0]
  99:firmwares/rotorcraft/navigation.c ****   nav_altitude = POS_BFP_OF_REAL(SECURITY_HEIGHT);
 158              		.loc 2 99 0
 159 0074 4FF40072 		mov	r2, #512
 160 0078 0260     		str	r2, [r0, #0]
 161              		.loc 2 100 0
 162 007a 0A60     		str	r2, [r1, #0]
 101:firmwares/rotorcraft/navigation.c ****   flight_altitude = SECURITY_ALT;
 163              		.loc 2 101 0
 164 007c 1E4C     		ldr	r4, .L9+40
 165 007e 1F4A     		ldr	r2, .L9+44
 102:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY( navigation_target, waypoints[WP_HOME]);
 166              		.loc 2 102 0
 167 0080 2869     		ldr	r0, [r5, #16]
 101:firmwares/rotorcraft/navigation.c ****   flight_altitude = SECURITY_ALT;
 168              		.loc 2 101 0
 169 0082 1460     		str	r4, [r2, #0]	@ float
 170              		.loc 2 102 0
 171 0084 6969     		ldr	r1, [r5, #20]
 172 0086 1E4A     		ldr	r2, .L9+48
 173 0088 EC68     		ldr	r4, [r5, #12]
 174 008a 5060     		str	r0, [r2, #4]
 175 008c 1460     		str	r4, [r2, #0]
 176 008e 9160     		str	r1, [r2, #8]
 103:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY( navigation_carrot, waypoints[WP_HOME]);
 177              		.loc 2 103 0
 178 0090 1C4A     		ldr	r2, .L9+52
 179 0092 1460     		str	r4, [r2, #0]
 180 0094 5060     		str	r0, [r2, #4]
 181 0096 9160     		str	r1, [r2, #8]
 104:firmwares/rotorcraft/navigation.c **** 
 105:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT;
 182              		.loc 2 105 0
 183 0098 1B48     		ldr	r0, .L9+56
 106:firmwares/rotorcraft/navigation.c ****   vertical_mode = VERTICAL_MODE_ALT;
 184              		.loc 2 106 0
 185 009a 1C4A     		ldr	r2, .L9+60
 186 009c 0221     		movs	r1, #2
 105:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT;
 187              		.loc 2 105 0
 188 009e 0370     		strb	r3, [r0, #0]
 189              		.loc 2 106 0
 190 00a0 1170     		strb	r1, [r2, #0]
 107:firmwares/rotorcraft/navigation.c **** 
 108:firmwares/rotorcraft/navigation.c ****   nav_roll = 0;
 191              		.loc 2 108 0
 192 00a2 1B48     		ldr	r0, .L9+64
 109:firmwares/rotorcraft/navigation.c ****   nav_pitch = 0;
 110:firmwares/rotorcraft/navigation.c ****   nav_heading = 0;
 193              		.loc 2 110 0
 194 00a4 1B4A     		ldr	r2, .L9+68
 109:firmwares/rotorcraft/navigation.c ****   nav_pitch = 0;
 195              		.loc 2 109 0
 196 00a6 1C49     		ldr	r1, .L9+72
 108:firmwares/rotorcraft/navigation.c ****   nav_roll = 0;
 197              		.loc 2 108 0
 198 00a8 0360     		str	r3, [r0, #0]
 199              		.loc 2 110 0
 200 00aa 1360     		str	r3, [r2, #0]
 111:firmwares/rotorcraft/navigation.c ****   nav_course = 0;
 201              		.loc 2 111 0
 202 00ac 1B48     		ldr	r0, .L9+76
 112:firmwares/rotorcraft/navigation.c ****   nav_radius = DEFAULT_CIRCLE_RADIUS;
 203              		.loc 2 112 0
 204 00ae 1C4A     		ldr	r2, .L9+80
 109:firmwares/rotorcraft/navigation.c ****   nav_pitch = 0;
 205              		.loc 2 109 0
 206 00b0 0B60     		str	r3, [r1, #0]
 207              		.loc 2 112 0
 208 00b2 0021     		movs	r1, #0
 111:firmwares/rotorcraft/navigation.c ****   nav_course = 0;
 209              		.loc 2 111 0
 210 00b4 0360     		str	r3, [r0, #0]
 211              		.loc 2 112 0
 212 00b6 1160     		str	r1, [r2, #0]	@ float
 113:firmwares/rotorcraft/navigation.c ****   nav_throttle = 0;
 213              		.loc 2 113 0
 214 00b8 1A48     		ldr	r0, .L9+84
 114:firmwares/rotorcraft/navigation.c ****   nav_climb = 0;
 215              		.loc 2 114 0
 216 00ba 1B49     		ldr	r1, .L9+88
 115:firmwares/rotorcraft/navigation.c ****   nav_leg_progress = 0;
 217              		.loc 2 115 0
 218 00bc 1B4A     		ldr	r2, .L9+92
 113:firmwares/rotorcraft/navigation.c ****   nav_throttle = 0;
 219              		.loc 2 113 0
 220 00be 0360     		str	r3, [r0, #0]
 114:firmwares/rotorcraft/navigation.c ****   nav_climb = 0;
 221              		.loc 2 114 0
 222 00c0 0B60     		str	r3, [r1, #0]
 223              		.loc 2 115 0
 224 00c2 1360     		str	r3, [r2, #0]
 116:firmwares/rotorcraft/navigation.c ****   nav_leg_length = 1;
 225              		.loc 2 116 0
 226 00c4 1A4B     		ldr	r3, .L9+96
 227 00c6 0120     		movs	r0, #1
 228 00c8 1860     		str	r0, [r3, #0]
 117:firmwares/rotorcraft/navigation.c **** 
 118:firmwares/rotorcraft/navigation.c **** }
 229              		.loc 2 118 0
 230 00ca 13B0     		add	sp, sp, #76
 231 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 232              	.L10:
 233 00ce 00BF     		.align	3
 234              	.L9:
 235 00d0 00000000 		.word	0
 236 00d4 00606240 		.word	1080188928
 237 00d8 00000000 		.word	.LANCHOR0
 238 00dc 00000000 		.word	.LANCHOR1
 239 00e0 00007040 		.word	1081081856
 240 00e4 00000000 		.word	nav_stage
 241 00e8 00000000 		.word	.LANCHOR2
 242 00ec 00000000 		.word	nav_block
 243 00f0 00000000 		.word	.LANCHOR3
 244 00f4 00000000 		.word	.LANCHOR4
 245 00f8 00001543 		.word	1125449728
 246 00fc 00000000 		.word	.LANCHOR5
 247 0100 00000000 		.word	.LANCHOR6
 248 0104 00000000 		.word	.LANCHOR7
 249 0108 00000000 		.word	.LANCHOR8
 250 010c 00000000 		.word	.LANCHOR9
 251 0110 00000000 		.word	.LANCHOR10
 252 0114 00000000 		.word	.LANCHOR12
 253 0118 00000000 		.word	.LANCHOR11
 254 011c 00000000 		.word	.LANCHOR13
 255 0120 00000000 		.word	.LANCHOR14
 256 0124 00000000 		.word	.LANCHOR15
 257 0128 00000000 		.word	.LANCHOR16
 258 012c 00000000 		.word	.LANCHOR17
 259 0130 00000000 		.word	.LANCHOR18
 260              		.cfi_endproc
 261              	.LFE122:
 263              		.global	__aeabi_i2d
 264              		.global	__aeabi_dcmpgt
 265 0134 AFF30080 		.section	.text.nav_run,"ax",%progbits
 266              		.align	1
 267              		.global	nav_run
 268              		.thumb
 269              		.thumb_func
 271              	nav_run:
 272              	.LFB124:
 119:firmwares/rotorcraft/navigation.c **** 
 120:firmwares/rotorcraft/navigation.c **** static inline void nav_advance_carrot(void) {
 121:firmwares/rotorcraft/navigation.c ****   /* compute a vector to the waypoint */
 122:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 path_to_waypoint;
 123:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(path_to_waypoint, navigation_target, *stateGetPositionEnu_i());
 124:firmwares/rotorcraft/navigation.c **** 
 125:firmwares/rotorcraft/navigation.c ****   /* saturate it */
 126:firmwares/rotorcraft/navigation.c ****   VECT2_STRIM(path_to_waypoint, -(1<<15), (1<<15));
 127:firmwares/rotorcraft/navigation.c **** 
 128:firmwares/rotorcraft/navigation.c ****   int32_t dist_to_waypoint;
 129:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_waypoint, path_to_waypoint);
 130:firmwares/rotorcraft/navigation.c **** 
 131:firmwares/rotorcraft/navigation.c ****   if (dist_to_waypoint < CLOSE_TO_WAYPOINT) {
 132:firmwares/rotorcraft/navigation.c ****     VECT2_COPY(navigation_carrot, navigation_target);
 133:firmwares/rotorcraft/navigation.c ****   }
 134:firmwares/rotorcraft/navigation.c ****   else {
 135:firmwares/rotorcraft/navigation.c ****     struct Int32Vect2 path_to_carrot;
 136:firmwares/rotorcraft/navigation.c ****     VECT2_SMUL(path_to_carrot, path_to_waypoint, CARROT_DIST);
 137:firmwares/rotorcraft/navigation.c ****     VECT2_SDIV(path_to_carrot, path_to_carrot, dist_to_waypoint);
 138:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_carrot, path_to_carrot, *stateGetPositionEnu_i());
 139:firmwares/rotorcraft/navigation.c ****   }
 140:firmwares/rotorcraft/navigation.c **** }
 141:firmwares/rotorcraft/navigation.c **** 
 142:firmwares/rotorcraft/navigation.c **** void nav_run(void) {
 273              		.loc 2 142 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 143:firmwares/rotorcraft/navigation.c **** 
 144:firmwares/rotorcraft/navigation.c **** #if !GUIDANCE_H_USE_REF
 145:firmwares/rotorcraft/navigation.c ****   PRINT_CONFIG_MSG("NOT using horizontal guidance reference :-(")
 146:firmwares/rotorcraft/navigation.c ****   nav_advance_carrot();
 147:firmwares/rotorcraft/navigation.c **** #else
 148:firmwares/rotorcraft/navigation.c ****   PRINT_CONFIG_MSG("Using horizontal guidance reference :-)")
 149:firmwares/rotorcraft/navigation.c ****   // if H_REF is used, CARROT_DIST is not used
 150:firmwares/rotorcraft/navigation.c ****   VECT2_COPY(navigation_carrot, navigation_target);
 277              		.loc 2 150 0
 278 0000 0F4A     		ldr	r2, .L15+8
 142:firmwares/rotorcraft/navigation.c **** void nav_run(void) {
 279              		.loc 2 142 0
 280 0002 38B5     		push	{r3, r4, r5, lr}
 281              	.LCFI3:
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 3, -16
 284              		.cfi_offset 4, -12
 285              		.cfi_offset 5, -8
 286              		.cfi_offset 14, -4
 287              		.loc 2 150 0
 288 0004 1168     		ldr	r1, [r2, #0]
 289 0006 0F4B     		ldr	r3, .L15+12
 290 0008 5268     		ldr	r2, [r2, #4]
 291 000a 1960     		str	r1, [r3, #0]
 292 000c 5A60     		str	r2, [r3, #4]
 293              	.LBB13:
 294              	.LBB14:
 151:firmwares/rotorcraft/navigation.c **** #endif
 152:firmwares/rotorcraft/navigation.c **** 
 153:firmwares/rotorcraft/navigation.c ****   nav_set_altitude();
 154:firmwares/rotorcraft/navigation.c **** }
 155:firmwares/rotorcraft/navigation.c **** 
 156:firmwares/rotorcraft/navigation.c **** void nav_circle(uint8_t wp_center, int32_t radius) {
 157:firmwares/rotorcraft/navigation.c ****   if (radius == 0) {
 158:firmwares/rotorcraft/navigation.c ****     VECT2_COPY(navigation_target, waypoints[wp_center]);
 159:firmwares/rotorcraft/navigation.c ****   }
 160:firmwares/rotorcraft/navigation.c ****   else {
 161:firmwares/rotorcraft/navigation.c ****     struct Int32Vect2 pos_diff;
 162:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_center]);
 163:firmwares/rotorcraft/navigation.c ****     // go back to half metric precision or values are too large
 164:firmwares/rotorcraft/navigation.c ****     //INT32_VECT2_RSHIFT(pos_diff,pos_diff,INT32_POS_FRAC/2);
 165:firmwares/rotorcraft/navigation.c ****     // store last qdr
 166:firmwares/rotorcraft/navigation.c ****     int32_t last_qdr = nav_circle_qdr;
 167:firmwares/rotorcraft/navigation.c ****     // compute qdr
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 169:firmwares/rotorcraft/navigation.c ****     // increment circle radians
 170:firmwares/rotorcraft/navigation.c ****     if (nav_circle_radians != 0) {
 171:firmwares/rotorcraft/navigation.c ****       int32_t angle_diff = nav_circle_qdr - last_qdr;
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 173:firmwares/rotorcraft/navigation.c ****       nav_circle_radians += angle_diff;
 174:firmwares/rotorcraft/navigation.c ****     }
 175:firmwares/rotorcraft/navigation.c ****     else {
 176:firmwares/rotorcraft/navigation.c ****       // Smallest angle to increment at next step
 177:firmwares/rotorcraft/navigation.c ****       nav_circle_radians = 1;
 178:firmwares/rotorcraft/navigation.c ****     }
 179:firmwares/rotorcraft/navigation.c **** 
 180:firmwares/rotorcraft/navigation.c ****     // direction of rotation
 181:firmwares/rotorcraft/navigation.c ****     int8_t sign_radius = radius > 0 ? 1 : -1;
 182:firmwares/rotorcraft/navigation.c ****     // absolute radius
 183:firmwares/rotorcraft/navigation.c ****     int32_t abs_radius = abs(radius);
 184:firmwares/rotorcraft/navigation.c ****     // carrot_angle
 185:firmwares/rotorcraft/navigation.c ****     int32_t carrot_angle = ((CARROT_DIST<<INT32_ANGLE_FRAC) / abs_radius);
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 187:firmwares/rotorcraft/navigation.c ****     carrot_angle = nav_circle_qdr - sign_radius * carrot_angle;
 188:firmwares/rotorcraft/navigation.c ****     int32_t s_carrot, c_carrot;
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 191:firmwares/rotorcraft/navigation.c ****     // compute setpoint
 192:firmwares/rotorcraft/navigation.c ****     VECT2_ASSIGN(pos_diff, abs_radius * c_carrot, abs_radius * s_carrot);
 193:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(pos_diff, pos_diff, INT32_TRIG_FRAC);
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 195:firmwares/rotorcraft/navigation.c ****   }
 196:firmwares/rotorcraft/navigation.c ****   nav_circle_centre = wp_center;
 197:firmwares/rotorcraft/navigation.c ****   nav_circle_radius = radius;
 198:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 199:firmwares/rotorcraft/navigation.c **** }
 200:firmwares/rotorcraft/navigation.c **** 
 201:firmwares/rotorcraft/navigation.c **** 
 202:firmwares/rotorcraft/navigation.c **** //#include "stdio.h"
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 204:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 wp_diff,pos_diff;
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 207:firmwares/rotorcraft/navigation.c ****   // go back to metric precision or values are too large
 208:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(wp_diff,wp_diff,INT32_POS_FRAC);
 209:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(pos_diff,pos_diff,INT32_POS_FRAC);
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 212:firmwares/rotorcraft/navigation.c ****   nav_leg_progress = (pos_diff.x * wp_diff.x + pos_diff.y * wp_diff.y) / nav_leg_length;
 213:firmwares/rotorcraft/navigation.c ****   int32_t progress = Max((CARROT_DIST >> INT32_POS_FRAC), 0);
 214:firmwares/rotorcraft/navigation.c ****   nav_leg_progress += progress;
 215:firmwares/rotorcraft/navigation.c ****   int32_t prog_2 = nav_leg_length;// + progress / 2;
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 217:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 progress_pos;
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 219:firmwares/rotorcraft/navigation.c ****   VECT2_SDIV(progress_pos, progress_pos, nav_leg_length);
 220:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_LSHIFT(progress_pos,progress_pos,INT32_POS_FRAC);
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 222:firmwares/rotorcraft/navigation.c ****   //printf("target %d %d | p %d %d | s %d %d | l %d %d %d\n",
 223:firmwares/rotorcraft/navigation.c ****   //    navigation_target.x,
 224:firmwares/rotorcraft/navigation.c ****   //    navigation_target.y,
 225:firmwares/rotorcraft/navigation.c ****   //    progress_pos.x,
 226:firmwares/rotorcraft/navigation.c ****   //    progress_pos.y,
 227:firmwares/rotorcraft/navigation.c ****   //    waypoints[wp_start].x,
 228:firmwares/rotorcraft/navigation.c ****   //    waypoints[wp_start].y,
 229:firmwares/rotorcraft/navigation.c ****   //    leg_length, leg_length2, nav_leg_progress);
 230:firmwares/rotorcraft/navigation.c ****   //fflush(stdout);
 231:firmwares/rotorcraft/navigation.c **** 
 232:firmwares/rotorcraft/navigation.c ****   nav_segment_start = wp_start;
 233:firmwares/rotorcraft/navigation.c ****   nav_segment_end = wp_end;
 234:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 235:firmwares/rotorcraft/navigation.c **** }
 236:firmwares/rotorcraft/navigation.c **** 
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 238:firmwares/rotorcraft/navigation.c ****   int32_t dist_to_point;
 239:firmwares/rotorcraft/navigation.c ****   struct Int32Vect2 diff;
 240:firmwares/rotorcraft/navigation.c ****   static uint8_t time_at_wp = 0;
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 242:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(diff,diff,INT32_POS_FRAC);
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 244:firmwares/rotorcraft/navigation.c ****   //printf("dist %d | %d %d\n", dist_to_point,diff.x,diff.y);
 245:firmwares/rotorcraft/navigation.c ****   //fflush(stdout);
 246:firmwares/rotorcraft/navigation.c ****   //if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) return TRUE;
 247:firmwares/rotorcraft/navigation.c ****   if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) time_at_wp++;
 248:firmwares/rotorcraft/navigation.c ****   else time_at_wp = 0;
 249:firmwares/rotorcraft/navigation.c ****   if (time_at_wp > 20) return TRUE;
 250:firmwares/rotorcraft/navigation.c ****   if (from_idx > 0 && from_idx < NB_WAYPOINT) {
 251:firmwares/rotorcraft/navigation.c ****     struct Int32Vect2 from_diff;
 252:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(from_diff, waypoints[wp_idx],waypoints[from_idx]);
 253:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(from_diff,from_diff,INT32_POS_FRAC);
 254:firmwares/rotorcraft/navigation.c ****     return (diff.x * from_diff.x + diff.y * from_diff.y < 0);
 255:firmwares/rotorcraft/navigation.c ****   }
 256:firmwares/rotorcraft/navigation.c ****   else return FALSE;
 257:firmwares/rotorcraft/navigation.c **** }
 258:firmwares/rotorcraft/navigation.c **** 
 259:firmwares/rotorcraft/navigation.c **** static inline void nav_set_altitude( void ) {
 260:firmwares/rotorcraft/navigation.c ****   static int32_t last_nav_alt = 0;
 261:firmwares/rotorcraft/navigation.c ****   if (abs(nav_altitude - last_nav_alt) > (POS_BFP_OF_REAL(0.2))) {
 295              		.loc 2 261 0
 296 000e 0E4D     		ldr	r5, .L15+16
 297 0010 0E4B     		ldr	r3, .L15+20
 298 0012 2868     		ldr	r0, [r5, #0]
 299 0014 1C68     		ldr	r4, [r3, #0]
 300 0016 201A     		subs	r0, r4, r0
 301 0018 0028     		cmp	r0, #0
 302 001a B8BF     		it	lt
 303 001c 4042     		rsblt	r0, r0, #0
 304 001e FFF7FEFF 		bl	__aeabi_i2d
 305              	.LVL11:
 306 0022 05A3     		adr	r3, .L15
 307 0024 D3E90023 		ldrd	r2, [r3]
 308 0028 FFF7FEFF 		bl	__aeabi_dcmpgt
 309              	.LVL12:
 310 002c 10B1     		cbz	r0, .L11
 262:firmwares/rotorcraft/navigation.c ****     nav_flight_altitude = nav_altitude;
 311              		.loc 2 262 0
 312 002e 084B     		ldr	r3, .L15+24
 263:firmwares/rotorcraft/navigation.c ****     last_nav_alt = nav_altitude;
 313              		.loc 2 263 0
 314 0030 2C60     		str	r4, [r5, #0]
 262:firmwares/rotorcraft/navigation.c ****     nav_flight_altitude = nav_altitude;
 315              		.loc 2 262 0
 316 0032 1C60     		str	r4, [r3, #0]
 317              	.L11:
 318 0034 38BD     		pop	{r3, r4, r5, pc}
 319              	.L16:
 320 0036 00BF     		.align	3
 321              	.L15:
 322 0038 9A999999 		.word	2576980378
 323 003c 99994940 		.word	1078565273
 324 0040 00000000 		.word	.LANCHOR6
 325 0044 00000000 		.word	.LANCHOR7
 326 0048 00000000 		.word	.LANCHOR19
 327 004c 00000000 		.word	.LANCHOR3
 328 0050 00000000 		.word	.LANCHOR4
 329              	.LBE14:
 330              	.LBE13:
 331              		.cfi_endproc
 332              	.LFE124:
 334 0054 AFF30080 		.section	.text.nav_circle,"ax",%progbits
 335              		.align	1
 336              		.global	nav_circle
 337              		.thumb
 338              		.thumb_func
 340              	nav_circle:
 341              	.LFB125:
 156:firmwares/rotorcraft/navigation.c **** void nav_circle(uint8_t wp_center, int32_t radius) {
 342              		.loc 2 156 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL13:
 347 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 348              	.LCFI4:
 349              		.cfi_def_cfa_offset 24
 350              		.cfi_offset 4, -24
 351              		.cfi_offset 5, -20
 352              		.cfi_offset 6, -16
 353              		.cfi_offset 7, -12
 354              		.cfi_offset 8, -8
 355              		.cfi_offset 14, -4
 156:firmwares/rotorcraft/navigation.c **** void nav_circle(uint8_t wp_center, int32_t radius) {
 356              		.loc 2 156 0
 357 0004 0446     		mov	r4, r0
 157:firmwares/rotorcraft/navigation.c ****   if (radius == 0) {
 358              		.loc 2 157 0
 359 0006 0D46     		mov	r5, r1
 360 0008 764F     		ldr	r7, .L60
 361 000a 0C26     		movs	r6, #12
 362 000c 39B9     		cbnz	r1, .L18
 158:firmwares/rotorcraft/navigation.c ****     VECT2_COPY(navigation_target, waypoints[wp_center]);
 363              		.loc 2 158 0
 364 000e 4643     		muls	r6, r0, r6
 365 0010 B919     		adds	r1, r7, r6
 366              	.LVL14:
 367 0012 754B     		ldr	r3, .L60+4
 368 0014 BA59     		ldr	r2, [r7, r6]
 369 0016 4868     		ldr	r0, [r1, #4]
 370              	.LVL15:
 371 0018 1A60     		str	r2, [r3, #0]
 372 001a 5860     		str	r0, [r3, #4]
 373 001c D9E0     		b	.L19
 374              	.LVL16:
 375              	.L18:
 376              	.LBB15:
 162:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_center]);
 377              		.loc 2 162 0
 378 001e FFF7FEFF 		bl	stateGetPositionEnu_i
 379              	.LVL17:
 380 0022 06FB04F3 		mul	r3, r6, r4
 381 0026 0668     		ldr	r6, [r0, #0]
 382 0028 F858     		ldr	r0, [r7, r3]
 383 002a 07EB0308 		add	r8, r7, r3
 384 002e 361A     		subs	r6, r6, r0
 385              	.LVL18:
 386 0030 FFF7FEFF 		bl	stateGetPositionEnu_i
 387              	.LVL19:
 388 0034 D8F80470 		ldr	r7, [r8, #4]
 389 0038 4168     		ldr	r1, [r0, #4]
 166:firmwares/rotorcraft/navigation.c ****     int32_t last_qdr = nav_circle_qdr;
 390              		.loc 2 166 0
 391 003a 6C4A     		ldr	r2, .L60+8
 162:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_center]);
 392              		.loc 2 162 0
 393 003c C91B     		subs	r1, r1, r7
 394              	.LVL20:
 395              	.LBB16:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 396              		.loc 2 168 0
 397 003e 81EAE170 		eor	r0, r1, r1, asr #31
 398 0042 A0EBE170 		sub	r0, r0, r1, asr #31
 399 0046 0130     		adds	r0, r0, #1
 400 0048 002E     		cmp	r6, #0
 401              	.LBE16:
 166:firmwares/rotorcraft/navigation.c ****     int32_t last_qdr = nav_circle_qdr;
 402              		.loc 2 166 0
 403 004a 1368     		ldr	r3, [r2, #0]
 404              	.LVL21:
 405 004c 06EB000C 		add	ip, r6, r0
 406              	.LBB17:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 407              		.loc 2 168 0
 408 0050 0BDB     		blt	.L20
 409              	.LVL22:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 410              		.loc 2 168 0 is_stmt 0 discriminator 1
 411 0052 301A     		subs	r0, r6, r0
 412              	.LVL23:
 413 0054 8603     		lsls	r6, r0, #14
 414              	.LVL24:
 415 0056 96FBFCFC 		sdiv	ip, r6, ip
 416              	.LVL25:
 417 005a 4FF44960 		mov	r0, #3216
 418 005e 00FB0CF6 		mul	r6, r0, ip
 419 0062 B013     		asrs	r0, r6, #14
 420 0064 C0F54966 		rsb	r6, r0, #3216
 421 0068 0BE0     		b	.L55
 422              	.LVL26:
 423              	.L20:
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 424              		.loc 2 168 0 discriminator 2
 425 006a 861B     		subs	r6, r0, r6
 426              	.LVL27:
 427 006c 4FEA8C3E 		lsl	lr, ip, #14
 428 0070 9EFBF6F0 		sdiv	r0, lr, r6
 429              	.LVL28:
 430 0074 4FF44966 		mov	r6, #3216
 431 0078 7043     		muls	r0, r6, r0
 432 007a 8013     		asrs	r0, r0, #14
 433 007c C0F51656 		rsb	r6, r0, #9600
 434 0080 3036     		adds	r6, r6, #48
 435              	.L55:
 436 0082 0029     		cmp	r1, #0
 437 0084 1660     		str	r6, [r2, #0]
 438 0086 03DA     		bge	.L22
 168:firmwares/rotorcraft/navigation.c ****     INT32_ATAN2(nav_circle_qdr, pos_diff.y, pos_diff.x);
 439              		.loc 2 168 0 discriminator 4
 440 0088 584A     		ldr	r2, .L60+8
 441 008a 1168     		ldr	r1, [r2, #0]
 442              	.LVL29:
 443 008c 4E42     		negs	r6, r1
 444 008e 1660     		str	r6, [r2, #0]
 445              	.L22:
 446              	.LBE17:
 170:firmwares/rotorcraft/navigation.c ****     if (nav_circle_radians != 0) {
 447              		.loc 2 170 0 is_stmt 1
 448 0090 5748     		ldr	r0, .L60+12
 449 0092 0168     		ldr	r1, [r0, #0]
 450 0094 A1B1     		cbz	r1, .L23
 451              	.LBB18:
 171:firmwares/rotorcraft/navigation.c ****       int32_t angle_diff = nav_circle_qdr - last_qdr;
 452              		.loc 2 171 0
 453 0096 554A     		ldr	r2, .L60+8
 454 0098 1668     		ldr	r6, [r2, #0]
 455 009a F31A     		subs	r3, r6, r3
 456              	.LVL30:
 457              	.L24:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 458              		.loc 2 172 0 discriminator 1
 459 009c 43F24320 		movw	r0, #12867
 460 00a0 8342     		cmp	r3, r0
 461 00a2 03DD     		ble	.L52
 462              	.L25:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 463              		.loc 2 172 0 is_stmt 0 discriminator 2
 464 00a4 A3F5C940 		sub	r0, r3, #25728
 465 00a8 C31F     		subs	r3, r0, #7
 466              	.LVL31:
 467 00aa F7E7     		b	.L24
 468              	.LVL32:
 469              	.L52:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 470              		.loc 2 172 0 discriminator 4
 471 00ac 514A     		ldr	r2, .L60+16
 472 00ae 9342     		cmp	r3, r2
 473 00b0 03DA     		bge	.L57
 474              	.L27:
 172:firmwares/rotorcraft/navigation.c ****       INT32_ANGLE_NORMALIZE(angle_diff);
 475              		.loc 2 172 0 discriminator 5
 476 00b2 03F5C946 		add	r6, r3, #25728
 477 00b6 F31D     		adds	r3, r6, #7
 478              	.LVL33:
 479 00b8 F8E7     		b	.L52
 480              	.LVL34:
 481              	.L57:
 173:firmwares/rotorcraft/navigation.c ****       nav_circle_radians += angle_diff;
 482              		.loc 2 173 0 is_stmt 1
 483 00ba CB18     		adds	r3, r1, r3
 484              	.LVL35:
 485 00bc 4C48     		ldr	r0, .L60+12
 486 00be 00E0     		b	.L56
 487              	.LVL36:
 488              	.L23:
 489              	.LBE18:
 177:firmwares/rotorcraft/navigation.c ****       nav_circle_radians = 1;
 490              		.loc 2 177 0
 491 00c0 0123     		movs	r3, #1
 492              	.LVL37:
 493              	.L56:
 183:firmwares/rotorcraft/navigation.c ****     int32_t abs_radius = abs(radius);
 494              		.loc 2 183 0
 495 00c2 85EAE571 		eor	r1, r5, r5, asr #31
 496 00c6 A1EBE571 		sub	r1, r1, r5, asr #31
 185:firmwares/rotorcraft/navigation.c ****     int32_t carrot_angle = ((CARROT_DIST<<INT32_ANGLE_FRAC) / abs_radius);
 497              		.loc 2 185 0
 498 00ca 4FF44006 		mov	r6, #12582912
 499 00ce 96FBF1F2 		sdiv	r2, r6, r1
 177:firmwares/rotorcraft/navigation.c ****       nav_circle_radians = 1;
 500              		.loc 2 177 0
 501 00d2 0360     		str	r3, [r0, #0]
 181:firmwares/rotorcraft/navigation.c ****     int8_t sign_radius = radius > 0 ? 1 : -1;
 502              		.loc 2 181 0
 503 00d4 002D     		cmp	r5, #0
 504 00d6 D4BF     		ite	le
 505 00d8 FF23     		movle	r3, #255
 506 00da 0123     		movgt	r3, #1
 507              	.LVL38:
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 508              		.loc 2 186 0
 509 00dc B2F5496F 		cmp	r2, #3216
 510 00e0 05DC     		bgt	.L50
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 511              		.loc 2 186 0 is_stmt 0 discriminator 2
 512 00e2 B2F5497F 		cmp	r2, #804
 513 00e6 B8BF     		it	lt
 514 00e8 4FF44972 		movlt	r2, #804
 515              	.LVL39:
 516 00ec 01E0     		b	.L30
 517              	.LVL40:
 518              	.L50:
 186:firmwares/rotorcraft/navigation.c ****     Bound(carrot_angle, (INT32_ANGLE_PI / 16), INT32_ANGLE_PI_4);
 519              		.loc 2 186 0
 520 00ee 4FF44962 		mov	r2, #3216
 521              	.LVL41:
 522              	.L30:
 187:firmwares/rotorcraft/navigation.c ****     carrot_angle = nav_circle_qdr - sign_radius * carrot_angle;
 523              		.loc 2 187 0 is_stmt 1
 524 00f2 3E48     		ldr	r0, .L60+8
 525 00f4 5BB2     		sxtb	r3, r3
 526              	.LVL42:
 527 00f6 0668     		ldr	r6, [r0, #0]
 528 00f8 02FB1363 		mls	r3, r2, r3, r6
 529              	.LVL43:
 530              	.LBB19:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 531              		.loc 2 189 0
 532 00fc 1A46     		mov	r2, r3
 533              	.LVL44:
 534              	.L31:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 535              		.loc 2 189 0 is_stmt 0 discriminator 1
 536 00fe 43F24320 		movw	r0, #12867
 537 0102 8242     		cmp	r2, r0
 538 0104 03DD     		ble	.L53
 539              	.L32:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 540              		.loc 2 189 0 discriminator 2
 541 0106 A2F5C942 		sub	r2, r2, #25728
 542              	.LVL45:
 543 010a 073A     		subs	r2, r2, #7
 544              	.LVL46:
 545 010c F7E7     		b	.L31
 546              	.LVL47:
 547              	.L53:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 548              		.loc 2 189 0 discriminator 4
 549 010e 394E     		ldr	r6, .L60+16
 550 0110 B242     		cmp	r2, r6
 551 0112 03DA     		bge	.L58
 552              	.L34:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 553              		.loc 2 189 0 discriminator 5
 554 0114 02F5C940 		add	r0, r2, #25728
 555 0118 C21D     		adds	r2, r0, #7
 556              	.LVL48:
 557 011a F8E7     		b	.L53
 558              	.LVL49:
 559              	.L58:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 560              		.loc 2 189 0 discriminator 6
 561 011c 41F62110 		movw	r0, #6433
 562 0120 8242     		cmp	r2, r0
 563 0122 3548     		ldr	r0, .L60+20
 564 0124 03DD     		ble	.L35
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 565              		.loc 2 189 0 discriminator 7
 566 0126 C2F54952 		rsb	r2, r2, #12864
 567              	.LVL50:
 568 012a 0332     		adds	r2, r2, #3
 569              	.LVL51:
 570 012c 0CE0     		b	.L36
 571              	.L35:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 572              		.loc 2 189 0 discriminator 8
 573 012e 6FF4C956 		mvn	r6, #6432
 574 0132 B242     		cmp	r2, r6
 575 0134 06DA     		bge	.L37
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 576              		.loc 2 189 0 discriminator 9
 577 0136 C2F17F42 		rsb	r2, r2, #-16777216
 578              	.LVL52:
 579 013a 02F57F06 		add	r6, r2, #16711680
 580 013e 06F54D42 		add	r2, r6, #52480
 581 0142 BD32     		adds	r2, r2, #189
 582              	.LVL53:
 583              	.L37:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 584              		.loc 2 189 0 discriminator 10
 585 0144 002A     		cmp	r2, #0
 586 0146 02DB     		blt	.L38
 587              	.L36:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 588              		.loc 2 189 0 discriminator 11
 589 0148 30F91220 		ldrsh	r2, [r0, r2, lsl #1]
 590              	.LVL54:
 591 014c 03E0     		b	.L39
 592              	.LVL55:
 593              	.L38:
 189:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_SIN(s_carrot, carrot_angle);
 594              		.loc 2 189 0 discriminator 12
 595 014e 5642     		negs	r6, r2
 596 0150 30F91600 		ldrsh	r0, [r0, r6, lsl #1]
 597 0154 4242     		negs	r2, r0
 598              	.LVL56:
 599              	.L39:
 600              	.LBE19:
 601              	.LBB20:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 602              		.loc 2 190 0 is_stmt 1
 603 0156 03F5C953 		add	r3, r3, #6432
 604              	.LVL57:
 605 015a 0133     		adds	r3, r3, #1
 606              	.LVL58:
 607              	.L40:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 608              		.loc 2 190 0 is_stmt 0 discriminator 1
 609 015c 43F24326 		movw	r6, #12867
 610 0160 B342     		cmp	r3, r6
 611 0162 03DD     		ble	.L54
 612              	.L41:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 613              		.loc 2 190 0 discriminator 2
 614 0164 A3F5C946 		sub	r6, r3, #25728
 615 0168 F31F     		subs	r3, r6, #7
 616              	.LVL59:
 617 016a F7E7     		b	.L40
 618              	.LVL60:
 619              	.L54:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 620              		.loc 2 190 0 discriminator 4
 621 016c 2148     		ldr	r0, .L60+16
 622 016e 8342     		cmp	r3, r0
 623 0170 03DA     		bge	.L59
 624              	.L43:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 625              		.loc 2 190 0 discriminator 5
 626 0172 03F5C943 		add	r3, r3, #25728
 627              	.LVL61:
 628 0176 0733     		adds	r3, r3, #7
 629              	.LVL62:
 630 0178 F8E7     		b	.L54
 631              	.LVL63:
 632              	.L59:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 633              		.loc 2 190 0 discriminator 6
 634 017a 41F62116 		movw	r6, #6433
 635 017e B342     		cmp	r3, r6
 636 0180 1D48     		ldr	r0, .L60+20
 637 0182 03DD     		ble	.L44
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 638              		.loc 2 190 0 discriminator 7
 639 0184 C3F54953 		rsb	r3, r3, #12864
 640              	.LVL64:
 641 0188 0333     		adds	r3, r3, #3
 642              	.LVL65:
 643 018a 0CE0     		b	.L45
 644              	.L44:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 645              		.loc 2 190 0 discriminator 8
 646 018c 6FF4C956 		mvn	r6, #6432
 647 0190 B342     		cmp	r3, r6
 648 0192 06DA     		bge	.L46
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 649              		.loc 2 190 0 discriminator 9
 650 0194 C3F17F43 		rsb	r3, r3, #-16777216
 651              	.LVL66:
 652 0198 03F57F06 		add	r6, r3, #16711680
 653 019c 06F54D43 		add	r3, r6, #52480
 654 01a0 BD33     		adds	r3, r3, #189
 655              	.LVL67:
 656              	.L46:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 657              		.loc 2 190 0 discriminator 10
 658 01a2 002B     		cmp	r3, #0
 659 01a4 02DB     		blt	.L47
 660              	.L45:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 661              		.loc 2 190 0 discriminator 11
 662 01a6 30F91300 		ldrsh	r0, [r0, r3, lsl #1]
 663              	.LVL68:
 664 01aa 03E0     		b	.L48
 665              	.LVL69:
 666              	.L47:
 190:firmwares/rotorcraft/navigation.c ****     PPRZ_ITRIG_COS(c_carrot, carrot_angle);
 667              		.loc 2 190 0 discriminator 12
 668 01ac 5E42     		negs	r6, r3
 669 01ae 30F91600 		ldrsh	r0, [r0, r6, lsl #1]
 670 01b2 4042     		negs	r0, r0
 671              	.LVL70:
 672              	.L48:
 673              	.LBE20:
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 674              		.loc 2 194 0 is_stmt 1
 675 01b4 0C26     		movs	r6, #12
 676 01b6 6643     		muls	r6, r4, r6
 192:firmwares/rotorcraft/navigation.c ****     VECT2_ASSIGN(pos_diff, abs_radius * c_carrot, abs_radius * s_carrot);
 677              		.loc 2 192 0
 678 01b8 4843     		muls	r0, r1, r0
 679              	.LVL71:
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 680              		.loc 2 194 0
 681 01ba DFF828E0 		ldr	lr, .L60
 192:firmwares/rotorcraft/navigation.c ****     VECT2_ASSIGN(pos_diff, abs_radius * c_carrot, abs_radius * s_carrot);
 682              		.loc 2 192 0
 683 01be 5143     		muls	r1, r2, r1
 684              	.LVL72:
 194:firmwares/rotorcraft/navigation.c ****     VECT2_SUM(navigation_target, waypoints[wp_center], pos_diff);
 685              		.loc 2 194 0
 686 01c0 5EF80660 		ldr	r6, [lr, r6]
 687 01c4 084B     		ldr	r3, .L60+4
 688              	.LVL73:
 689 01c6 06EBA030 		add	r0, r6, r0, asr #14
 690 01ca 07EBA137 		add	r7, r7, r1, asr #14
 691 01ce 1860     		str	r0, [r3, #0]
 692 01d0 5F60     		str	r7, [r3, #4]
 693              	.LVL74:
 694              	.L19:
 695              	.LBE15:
 196:firmwares/rotorcraft/navigation.c ****   nav_circle_centre = wp_center;
 696              		.loc 2 196 0
 697 01d2 0A4B     		ldr	r3, .L60+24
 197:firmwares/rotorcraft/navigation.c ****   nav_circle_radius = radius;
 698              		.loc 2 197 0
 699 01d4 0A49     		ldr	r1, .L60+28
 198:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 700              		.loc 2 198 0
 701 01d6 0B48     		ldr	r0, .L60+32
 702 01d8 0222     		movs	r2, #2
 196:firmwares/rotorcraft/navigation.c ****   nav_circle_centre = wp_center;
 703              		.loc 2 196 0
 704 01da 1C70     		strb	r4, [r3, #0]
 197:firmwares/rotorcraft/navigation.c ****   nav_circle_radius = radius;
 705              		.loc 2 197 0
 706 01dc 0D60     		str	r5, [r1, #0]
 198:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 707              		.loc 2 198 0
 708 01de 0270     		strb	r2, [r0, #0]
 709 01e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 710              	.L61:
 711              		.align	2
 712              	.L60:
 713 01e4 00000000 		.word	.LANCHOR1
 714 01e8 00000000 		.word	.LANCHOR6
 715 01ec 00000000 		.word	.LANCHOR20
 716 01f0 00000000 		.word	.LANCHOR21
 717 01f4 BDCDFFFF 		.word	-12867
 718 01f8 00000000 		.word	pprz_trig_int
 719 01fc 00000000 		.word	.LANCHOR22
 720 0200 00000000 		.word	.LANCHOR23
 721 0204 00000000 		.word	.LANCHOR8
 722              		.cfi_endproc
 723              	.LFE125:
 725              		.section	.text.nav_route,"ax",%progbits
 726              		.align	1
 727              		.global	nav_route
 728              		.thumb
 729              		.thumb_func
 731              	nav_route:
 732              	.LFB126:
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 733              		.loc 2 203 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              	.LVL75:
 738 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 739              	.LCFI5:
 740              		.cfi_def_cfa_offset 40
 741              		.cfi_offset 3, -40
 742              		.cfi_offset 4, -36
 743              		.cfi_offset 5, -32
 744              		.cfi_offset 6, -28
 745              		.cfi_offset 7, -24
 746              		.cfi_offset 8, -20
 747              		.cfi_offset 9, -16
 748              		.cfi_offset 10, -12
 749              		.cfi_offset 11, -8
 750              		.cfi_offset 14, -4
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 751              		.loc 2 205 0
 752 0004 0C25     		movs	r5, #12
 753 0006 05FB01F3 		mul	r3, r5, r1
 754 000a 4543     		muls	r5, r0, r5
 755 000c 354C     		ldr	r4, .L73
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 756              		.loc 2 203 0
 757 000e 0646     		mov	r6, r0
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 758              		.loc 2 205 0
 759 0010 04EB0508 		add	r8, r4, r5
 760 0014 E218     		adds	r2, r4, r3
 761 0016 6059     		ldr	r0, [r4, r5]
 762              	.LVL76:
 763 0018 5268     		ldr	r2, [r2, #4]
 203:firmwares/rotorcraft/navigation.c **** void nav_route(uint8_t wp_start, uint8_t wp_end) {
 764              		.loc 2 203 0
 765 001a 0F46     		mov	r7, r1
 205:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(wp_diff, waypoints[wp_end],waypoints[wp_start]);
 766              		.loc 2 205 0
 767 001c E158     		ldr	r1, [r4, r3]
 768              	.LVL77:
 769 001e D8F80430 		ldr	r3, [r8, #4]
 770 0022 C0EB010B 		rsb	fp, r0, r1
 771              	.LVL78:
 772 0026 C3EB020A 		rsb	sl, r3, r2
 773              	.LVL79:
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 774              		.loc 2 206 0
 775 002a FFF7FEFF 		bl	stateGetPositionEnu_i
 776              	.LVL80:
 777 002e 6459     		ldr	r4, [r4, r5]
 778 0030 0168     		ldr	r1, [r0, #0]
 779 0032 C4EB0109 		rsb	r9, r4, r1
 780              	.LVL81:
 781 0036 FFF7FEFF 		bl	stateGetPositionEnu_i
 782              	.LVL82:
 208:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(wp_diff,wp_diff,INT32_POS_FRAC);
 783              		.loc 2 208 0
 784 003a 4FEA2A22 		asr	r2, sl, #8
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 785              		.loc 2 210 0
 786 003e 02FB02FC 		mul	ip, r2, r2
 208:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(wp_diff,wp_diff,INT32_POS_FRAC);
 787              		.loc 2 208 0
 788 0042 4FEA2B24 		asr	r4, fp, #8
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 789              		.loc 2 206 0
 790 0046 D8F80410 		ldr	r1, [r8, #4]
 791              	.LVL83:
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 792              		.loc 2 210 0
 793 004a 04FB04C8 		mla	r8, r4, r4, ip
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 794              		.loc 2 206 0
 795 004e 4568     		ldr	r5, [r0, #4]
 210:firmwares/rotorcraft/navigation.c ****   int32_t leg_length2 = Max((wp_diff.x * wp_diff.x + wp_diff.y * wp_diff.y),1);
 796              		.loc 2 210 0
 797 0050 B8F1010F 		cmp	r8, #1
 798 0054 B8BF     		it	lt
 799 0056 4FF00108 		movlt	r8, #1
 206:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(pos_diff, *stateGetPositionEnu_i(), waypoints[wp_start]);
 800              		.loc 2 206 0
 801 005a 681A     		subs	r0, r5, r1
 802              	.LVL84:
 209:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(pos_diff,pos_diff,INT32_POS_FRAC);
 803              		.loc 2 209 0
 804 005c 4FEA2929 		asr	r9, r9, #8
 805              	.LVL85:
 806 0060 0012     		asrs	r0, r0, #8
 807              	.LVL86:
 808              	.LBB21:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 809              		.loc 2 211 0
 810 0062 4546     		mov	r5, r8
 811 0064 4FF0280C 		mov	ip, #40
 812              	.LVL87:
 813              	.L66:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 814              		.loc 2 211 0 is_stmt 0 discriminator 3
 815 0068 B8FBF5F3 		udiv	r3, r8, r5
 816              	.LVL88:
 817 006c 5B19     		adds	r3, r3, r5
 818              	.LVL89:
 819 006e 5B08     		lsrs	r3, r3, #1
 820              	.LVL90:
 821 0070 ED1A     		subs	r5, r5, r3
 822              	.LVL91:
 823 0072 012D     		cmp	r5, #1
 824 0074 0CD8     		bhi	.L63
 825              	.L67:
 826              	.LBE21:
 212:firmwares/rotorcraft/navigation.c ****   nav_leg_progress = (pos_diff.x * wp_diff.x + pos_diff.y * wp_diff.y) / nav_leg_length;
 827              		.loc 2 212 0 is_stmt 1
 828 0076 5043     		muls	r0, r2, r0
 829              	.LVL92:
 830 0078 04FB0900 		mla	r0, r4, r9, r0
 831 007c 90FBF3F0 		sdiv	r0, r0, r3
 832              	.LBB22:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 833              		.loc 2 211 0
 834 0080 194D     		ldr	r5, .L73+4
 835              	.LBE22:
 214:firmwares/rotorcraft/navigation.c ****   nav_leg_progress += progress;
 836              		.loc 2 214 0
 837 0082 0C30     		adds	r0, r0, #12
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 838              		.loc 2 216 0
 839 0084 9842     		cmp	r0, r3
 840              	.LBB23:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 841              		.loc 2 211 0
 842 0086 2B60     		str	r3, [r5, #0]
 843              	.LVL93:
 844 0088 184D     		ldr	r5, .L73+8
 845              	.LBE23:
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 846              		.loc 2 216 0
 847 008a 08DD     		ble	.L71
 848              	.LVL94:
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 849              		.loc 2 216 0 is_stmt 0 discriminator 1
 850 008c 2B60     		str	r3, [r5, #0]
 851 008e 0AE0     		b	.L68
 852              	.LVL95:
 853              	.L63:
 854 0090 0CF1FF3E 		add	lr, ip, #-1
 855              	.LBB24:
 211:firmwares/rotorcraft/navigation.c ****   INT32_SQRT(nav_leg_length,leg_length2);
 856              		.loc 2 211 0 is_stmt 1 discriminator 4
 857 0094 1EF0FF0C 		ands	ip, lr, #255
 858              	.LBE24:
 859 0098 1D46     		mov	r5, r3
 860              	.LBB25:
 861 009a E5D1     		bne	.L66
 862 009c EBE7     		b	.L67
 863              	.LVL96:
 864              	.L71:
 865              	.LBE25:
 216:firmwares/rotorcraft/navigation.c ****   Bound(nav_leg_progress, 0, prog_2);
 866              		.loc 2 216 0 discriminator 2
 867 009e 0028     		cmp	r0, #0
 868 00a0 B8BF     		it	lt
 869 00a2 0020     		movlt	r0, #0
 870 00a4 2860     		str	r0, [r5, #0]
 871              	.L68:
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 872              		.loc 2 218 0
 873 00a6 2D68     		ldr	r5, [r5, #0]
 874              	.LVL97:
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 875              		.loc 2 221 0
 876 00a8 4FF00C08 		mov	r8, #12
 877              	.LVL98:
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 878              		.loc 2 218 0
 879 00ac 6C43     		muls	r4, r5, r4
 880              	.LVL99:
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 881              		.loc 2 221 0
 882 00ae 08FB06F8 		mul	r8, r8, r6
 218:firmwares/rotorcraft/navigation.c ****   VECT2_SMUL(progress_pos, wp_diff, nav_leg_progress);
 883              		.loc 2 218 0
 884 00b2 6A43     		muls	r2, r5, r2
 885              	.LVL100:
 219:firmwares/rotorcraft/navigation.c ****   VECT2_SDIV(progress_pos, progress_pos, nav_leg_length);
 886              		.loc 2 219 0
 887 00b4 94FBF3FE 		sdiv	lr, r4, r3
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 888              		.loc 2 221 0
 889 00b8 0A4C     		ldr	r4, .L73
 890 00ba 0D48     		ldr	r0, .L73+12
 891 00bc 54F80840 		ldr	r4, [r4, r8]
 219:firmwares/rotorcraft/navigation.c ****   VECT2_SDIV(progress_pos, progress_pos, nav_leg_length);
 892              		.loc 2 219 0
 893 00c0 92FBF3F2 		sdiv	r2, r2, r3
 221:firmwares/rotorcraft/navigation.c ****   VECT2_SUM(navigation_target,waypoints[wp_start],progress_pos);
 894              		.loc 2 221 0
 895 00c4 01EB0221 		add	r1, r1, r2, lsl #8
 896 00c8 04EB0E24 		add	r4, r4, lr, lsl #8
 897 00cc 0460     		str	r4, [r0, #0]
 898 00ce 4160     		str	r1, [r0, #4]
 232:firmwares/rotorcraft/navigation.c ****   nav_segment_start = wp_start;
 899              		.loc 2 232 0
 900 00d0 084B     		ldr	r3, .L73+16
 901              	.LVL101:
 233:firmwares/rotorcraft/navigation.c ****   nav_segment_end = wp_end;
 902              		.loc 2 233 0
 903 00d2 0948     		ldr	r0, .L73+20
 234:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 904              		.loc 2 234 0
 905 00d4 0949     		ldr	r1, .L73+24
 906 00d6 0122     		movs	r2, #1
 232:firmwares/rotorcraft/navigation.c ****   nav_segment_start = wp_start;
 907              		.loc 2 232 0
 908 00d8 1E70     		strb	r6, [r3, #0]
 233:firmwares/rotorcraft/navigation.c ****   nav_segment_end = wp_end;
 909              		.loc 2 233 0
 910 00da 0770     		strb	r7, [r0, #0]
 234:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 911              		.loc 2 234 0
 912 00dc 0A70     		strb	r2, [r1, #0]
 913 00de BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 914              	.L74:
 915 00e2 00BF     		.align	2
 916              	.L73:
 917 00e4 00000000 		.word	.LANCHOR1
 918 00e8 00000000 		.word	.LANCHOR18
 919 00ec 00000000 		.word	.LANCHOR17
 920 00f0 00000000 		.word	.LANCHOR6
 921 00f4 00000000 		.word	.LANCHOR24
 922 00f8 00000000 		.word	.LANCHOR25
 923 00fc 00000000 		.word	.LANCHOR8
 924              		.cfi_endproc
 925              	.LFE126:
 927              		.section	.text.nav_approaching_from,"ax",%progbits
 928              		.align	1
 929              		.global	nav_approaching_from
 930              		.thumb
 931              		.thumb_func
 933              	nav_approaching_from:
 934              	.LFB127:
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 935              		.loc 2 237 0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 939              	.LVL102:
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 940              		.loc 2 241 0
 941 0000 0C23     		movs	r3, #12
 942 0002 4343     		muls	r3, r0, r3
 943 0004 2A4A     		ldr	r2, .L91
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 944              		.loc 2 237 0
 945 0006 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 946              	.LCFI6:
 947              		.cfi_def_cfa_offset 24
 948              		.cfi_offset 4, -24
 949              		.cfi_offset 5, -20
 950              		.cfi_offset 6, -16
 951              		.cfi_offset 7, -12
 952              		.cfi_offset 8, -8
 953              		.cfi_offset 14, -4
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 954              		.loc 2 241 0
 955 000a D418     		adds	r4, r2, r3
 956 000c D558     		ldr	r5, [r2, r3]
 237:firmwares/rotorcraft/navigation.c **** bool_t nav_approaching_from(uint8_t wp_idx, uint8_t from_idx) {
 957              		.loc 2 237 0
 958 000e 8846     		mov	r8, r1
 959 0010 0746     		mov	r7, r0
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 960              		.loc 2 241 0
 961 0012 FFF7FEFF 		bl	stateGetPositionEnu_i
 962              	.LVL103:
 963 0016 0068     		ldr	r0, [r0, #0]
 964 0018 6668     		ldr	r6, [r4, #4]
 965 001a 2D1A     		subs	r5, r5, r0
 966              	.LVL104:
 967 001c FFF7FEFF 		bl	stateGetPositionEnu_i
 968              	.LVL105:
 969 0020 4168     		ldr	r1, [r0, #4]
 242:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(diff,diff,INT32_POS_FRAC);
 970              		.loc 2 242 0
 971 0022 2A12     		asrs	r2, r5, #8
 972              	.LVL106:
 241:firmwares/rotorcraft/navigation.c ****   VECT2_DIFF(diff, waypoints[wp_idx], *stateGetPositionEnu_i());
 973              		.loc 2 241 0
 974 0024 731A     		subs	r3, r6, r1
 975              	.LVL107:
 242:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_RSHIFT(diff,diff,INT32_POS_FRAC);
 976              		.loc 2 242 0
 977 0026 1C12     		asrs	r4, r3, #8
 978              	.LVL108:
 979              	.LBB26:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 980              		.loc 2 243 0
 981 0028 04FB04F0 		mul	r0, r4, r4
 982 002c 02FB0206 		mla	r6, r2, r2, r0
 983              	.LVL109:
 984 0030 8EB1     		cbz	r6, .L76
 985              	.LVL110:
 986              	.LBB27:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 987              		.loc 2 243 0 is_stmt 0 discriminator 2
 988 0032 3346     		mov	r3, r6
 989 0034 2821     		movs	r1, #40
 990              	.LVL111:
 991              	.L79:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 992              		.loc 2 243 0 discriminator 3
 993 0036 B6FBF3F5 		udiv	r5, r6, r3
 994              	.LVL112:
 995 003a E818     		adds	r0, r5, r3
 996              	.LVL113:
 997 003c 4508     		lsrs	r5, r0, #1
 998              	.LVL114:
 999 003e 5B1B     		subs	r3, r3, r5
 1000              	.LVL115:
 1001 0040 012B     		cmp	r3, #1
 1002 0042 02D8     		bhi	.L77
 1003              	.L80:
 1004              	.LVL116:
 1005              	.LBE27:
 1006              	.LBE26:
 247:firmwares/rotorcraft/navigation.c ****   if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) time_at_wp++;
 1007              		.loc 2 247 0 is_stmt 1
 1008 0044 022D     		cmp	r5, #2
 1009 0046 0ADC     		bgt	.L89
 1010 0048 05E0     		b	.L76
 1011              	.LVL117:
 1012              	.L77:
 1013 004a 0139     		subs	r1, r1, #1
 1014              	.LBB30:
 1015              	.LBB28:
 243:firmwares/rotorcraft/navigation.c ****   INT32_VECT2_NORM(dist_to_point, diff);
 1016              		.loc 2 243 0 discriminator 4
 1017 004c 11F0FF01 		ands	r1, r1, #255
 1018              	.LBE28:
 1019              	.LBE30:
 1020 0050 2B46     		mov	r3, r5
 1021              	.LBB31:
 1022              	.LBB29:
 1023 0052 F0D1     		bne	.L79
 1024              	.LVL118:
 1025 0054 F6E7     		b	.L80
 1026              	.LVL119:
 1027              	.L76:
 1028              	.LBE29:
 1029              	.LBE31:
 247:firmwares/rotorcraft/navigation.c ****   if (dist_to_point < (ARRIVED_AT_WAYPOINT >> INT32_POS_FRAC)) time_at_wp++;
 1030              		.loc 2 247 0 discriminator 1
 1031 0056 174B     		ldr	r3, .L91+4
 1032 0058 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 1033 005a 481C     		adds	r0, r1, #1
 1034 005c 01E0     		b	.L90
 1035              	.LVL120:
 1036              	.L89:
 248:firmwares/rotorcraft/navigation.c ****   else time_at_wp = 0;
 1037              		.loc 2 248 0
 1038 005e 154B     		ldr	r3, .L91+4
 1039 0060 0020     		movs	r0, #0
 1040              	.LVL121:
 1041              	.L90:
 1042 0062 1870     		strb	r0, [r3, #0]
 249:firmwares/rotorcraft/navigation.c ****   if (time_at_wp > 20) return TRUE;
 1043              		.loc 2 249 0
 1044 0064 1348     		ldr	r0, .L91+4
 1045 0066 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1046 0068 142B     		cmp	r3, #20
 1047 006a 1AD8     		bhi	.L83
 250:firmwares/rotorcraft/navigation.c ****   if (from_idx > 0 && from_idx < NB_WAYPOINT) {
 1048              		.loc 2 250 0
 1049 006c 08F1FF31 		add	r1, r8, #-1
 1050 0070 0429     		cmp	r1, #4
 1051 0072 19D8     		bhi	.L84
 1052              	.LVL122:
 1053              	.LBB32:
 252:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(from_diff, waypoints[wp_idx],waypoints[from_idx]);
 1054              		.loc 2 252 0
 1055 0074 0C25     		movs	r5, #12
 1056 0076 6F43     		muls	r7, r5, r7
 1057              	.LVL123:
 1058 0078 05FB08F8 		mul	r8, r5, r8
 1059 007c 0C4B     		ldr	r3, .L91
 1060 007e D859     		ldr	r0, [r3, r7]
 1061 0080 53F80810 		ldr	r1, [r3, r8]
 1062 0084 DE19     		adds	r6, r3, r7
 1063              	.LVL124:
 1064 0086 03EB0805 		add	r5, r3, r8
 1065 008a 431A     		subs	r3, r0, r1
 253:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(from_diff,from_diff,INT32_POS_FRAC);
 1066              		.loc 2 253 0
 1067 008c 1812     		asrs	r0, r3, #8
 252:firmwares/rotorcraft/navigation.c ****     VECT2_DIFF(from_diff, waypoints[wp_idx],waypoints[from_idx]);
 1068              		.loc 2 252 0
 1069 008e 7168     		ldr	r1, [r6, #4]
 1070 0090 6B68     		ldr	r3, [r5, #4]
 1071 0092 C91A     		subs	r1, r1, r3
 253:firmwares/rotorcraft/navigation.c ****     INT32_VECT2_RSHIFT(from_diff,from_diff,INT32_POS_FRAC);
 1072              		.loc 2 253 0
 1073 0094 0B12     		asrs	r3, r1, #8
 254:firmwares/rotorcraft/navigation.c ****     return (diff.x * from_diff.x + diff.y * from_diff.y < 0);
 1074              		.loc 2 254 0
 1075 0096 5C43     		muls	r4, r3, r4
 1076              	.LVL125:
 1077 0098 00FB0242 		mla	r2, r0, r2, r4
 1078              	.LVL126:
 1079 009c D00F     		lsrs	r0, r2, #31
 1080 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1081              	.LVL127:
 1082              	.L83:
 1083              	.LBE32:
 249:firmwares/rotorcraft/navigation.c ****   if (time_at_wp > 20) return TRUE;
 1084              		.loc 2 249 0
 1085 00a2 0120     		movs	r0, #1
 1086 00a4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1087              	.L84:
 256:firmwares/rotorcraft/navigation.c ****   else return FALSE;
 1088              		.loc 2 256 0
 1089 00a8 0020     		movs	r0, #0
 257:firmwares/rotorcraft/navigation.c **** }
 1090              		.loc 2 257 0
 1091 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1092              	.L92:
 1093 00ae 00BF     		.align	2
 1094              	.L91:
 1095 00b0 00000000 		.word	.LANCHOR1
 1096 00b4 00000000 		.word	.LANCHOR26
 1097              		.cfi_endproc
 1098              	.LFE127:
 1100              		.section	.text.nav_reset_reference,"ax",%progbits
 1101              		.align	1
 1102              		.global	nav_reset_reference
 1103              		.thumb
 1104              		.thumb_func
 1106              	nav_reset_reference:
 1107              	.LFB129:
 264:firmwares/rotorcraft/navigation.c ****   }
 265:firmwares/rotorcraft/navigation.c **** }
 266:firmwares/rotorcraft/navigation.c **** 
 267:firmwares/rotorcraft/navigation.c **** 
 268:firmwares/rotorcraft/navigation.c **** /** Reset the geographic reference to the current GPS fix */
 269:firmwares/rotorcraft/navigation.c **** unit_t nav_reset_reference( void ) {
 1108              		.loc 2 269 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
 1112              		@ link register save eliminated.
 270:firmwares/rotorcraft/navigation.c ****   ins_ltp_initialised = FALSE;
 271:firmwares/rotorcraft/navigation.c ****   ins.hf_realign = TRUE;
 1113              		.loc 2 271 0
 1114 0000 0349     		ldr	r1, .L94
 270:firmwares/rotorcraft/navigation.c ****   ins_ltp_initialised = FALSE;
 1115              		.loc 2 270 0
 1116 0002 044B     		ldr	r3, .L94+4
 1117              		.loc 2 271 0
 1118 0004 0122     		movs	r2, #1
 270:firmwares/rotorcraft/navigation.c ****   ins_ltp_initialised = FALSE;
 1119              		.loc 2 270 0
 1120 0006 0020     		movs	r0, #0
 1121 0008 1870     		strb	r0, [r3, #0]
 1122              		.loc 2 271 0
 1123 000a 4A70     		strb	r2, [r1, #1]
 272:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 1124              		.loc 2 272 0
 1125 000c 8A70     		strb	r2, [r1, #2]
 273:firmwares/rotorcraft/navigation.c ****   return 0;
 274:firmwares/rotorcraft/navigation.c **** }
 1126              		.loc 2 274 0
 1127 000e 7047     		bx	lr
 1128              	.L95:
 1129              		.align	2
 1130              	.L94:
 1131 0010 00000000 		.word	ins
 1132 0014 00000000 		.word	ins_ltp_initialised
 1133              		.cfi_endproc
 1134              	.LFE129:
 1136              		.global	__aeabi_ddiv
 1137              		.global	__aeabi_d2f
 1138              		.global	__aeabi_i2f
 1139              		.section	.text.nav_reset_alt,"ax",%progbits
 1140              		.align	1
 1141              		.global	nav_reset_alt
 1142              		.thumb
 1143              		.thumb_func
 1145              	nav_reset_alt:
 1146              	.LFB130:
 275:firmwares/rotorcraft/navigation.c **** 
 276:firmwares/rotorcraft/navigation.c **** unit_t nav_reset_alt( void ) {
 1147              		.loc 2 276 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 277:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 278:firmwares/rotorcraft/navigation.c **** 
 279:firmwares/rotorcraft/navigation.c **** #if USE_GPS
 280:firmwares/rotorcraft/navigation.c ****   ins_ltp_def.lla.alt = gps.lla_pos.alt;
 1151              		.loc 2 280 0
 1152 0000 6948     		ldr	r0, .L97+8
 276:firmwares/rotorcraft/navigation.c **** unit_t nav_reset_alt( void ) {
 1153              		.loc 2 276 0
 1154 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1155              	.LCFI7:
 1156              		.cfi_def_cfa_offset 24
 1157              		.cfi_offset 3, -24
 1158              		.cfi_offset 4, -20
 1159              		.cfi_offset 5, -16
 1160              		.cfi_offset 6, -12
 1161              		.cfi_offset 7, -8
 1162              		.cfi_offset 14, -4
 1163              	.LBB35:
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 1164              		.loc 1 441 0
 1165 0004 694C     		ldr	r4, .L97+12
 1166              	.LBE35:
 1167              		.loc 2 280 0
 1168 0006 6A4E     		ldr	r6, .L97+16
 1169 0008 4269     		ldr	r2, [r0, #20]
 281:firmwares/rotorcraft/navigation.c ****   ins_ltp_def.hmsl = gps.hmsl;
 1170              		.loc 2 281 0
 1171 000a 816A     		ldr	r1, [r0, #40]
 277:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 1172              		.loc 2 277 0
 1173 000c 694B     		ldr	r3, .L97+20
 1174 000e 0127     		movs	r7, #1
 1175              	.LBB37:
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 1176              		.loc 1 441 0
 1177 0010 04F11C05 		add	r5, r4, #28
 1178              	.LBE37:
 277:firmwares/rotorcraft/navigation.c ****   ins.vf_realign = TRUE;
 1179              		.loc 2 277 0
 1180 0014 9F70     		strb	r7, [r3, #2]
 280:firmwares/rotorcraft/navigation.c ****   ins_ltp_def.lla.alt = gps.lla_pos.alt;
 1181              		.loc 2 280 0
 1182 0016 7261     		str	r2, [r6, #20]
 1183              		.loc 2 281 0
 1184 0018 F163     		str	r1, [r6, #60]
 1185              	.LVL128:
 1186              	.LBB38:
 441:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 1187              		.loc 1 441 0
 1188 001a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1189 001c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1190 001e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1191 0020 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1192 0022 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1193 0024 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1194 0026 96E80F00 		ldmia	r6, {r0, r1, r2, r3}
 1195 002a 85E80F00 		stmia	r5, {r0, r1, r2, r3}
 1196              	.LBB36:
 443:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 1197              		.loc 1 443 0
 1198 002e E069     		ldr	r0, [r4, #28]
 1199 0030 FFF7FEFF 		bl	__aeabi_i2d
 1200              	.LVL129:
 1201 0034 0022     		movs	r2, #0
 1202 0036 604B     		ldr	r3, .L97+24
 1203 0038 FFF7FEFF 		bl	__aeabi_ddiv
 1204              	.LVL130:
 1205 003c FFF7FEFF 		bl	__aeabi_d2f
 1206              	.LVL131:
 1207 0040 C4F8A400 		str	r0, [r4, #164]	@ float
 1208 0044 206A     		ldr	r0, [r4, #32]
 1209 0046 FFF7FEFF 		bl	__aeabi_i2d
 1210              	.LVL132:
 1211 004a 0022     		movs	r2, #0
 1212 004c 5A4B     		ldr	r3, .L97+24
 1213 004e FFF7FEFF 		bl	__aeabi_ddiv
 1214              	.LVL133:
 1215 0052 FFF7FEFF 		bl	__aeabi_d2f
 1216              	.LVL134:
 1217 0056 C4F8A800 		str	r0, [r4, #168]	@ float
 1218 005a 606A     		ldr	r0, [r4, #36]
 1219 005c FFF7FEFF 		bl	__aeabi_i2d
 1220              	.LVL135:
 1221 0060 0022     		movs	r2, #0
 1222 0062 554B     		ldr	r3, .L97+24
 1223 0064 FFF7FEFF 		bl	__aeabi_ddiv
 1224              	.LVL136:
 1225 0068 FFF7FEFF 		bl	__aeabi_d2f
 1226              	.LVL137:
 1227 006c C4F8AC00 		str	r0, [r4, #172]	@ float
 444:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 1228              		.loc 1 444 0
 1229 0070 E06A     		ldr	r0, [r4, #44]
 1230 0072 FFF7FEFF 		bl	__aeabi_i2d
 1231              	.LVL138:
 1232 0076 4AA3     		adr	r3, .L97
 1233 0078 D3E90023 		ldrd	r2, [r3]
 1234 007c FFF7FEFF 		bl	__aeabi_ddiv
 1235              	.LVL139:
 1236 0080 FFF7FEFF 		bl	__aeabi_d2f
 1237              	.LVL140:
 1238 0084 C4F8B400 		str	r0, [r4, #180]	@ float
 1239 0088 A06A     		ldr	r0, [r4, #40]
 1240 008a FFF7FEFF 		bl	__aeabi_i2d
 1241              	.LVL141:
 1242 008e 44A3     		adr	r3, .L97
 1243 0090 D3E90023 		ldrd	r2, [r3]
 1244 0094 FFF7FEFF 		bl	__aeabi_ddiv
 1245              	.LVL142:
 1246 0098 FFF7FEFF 		bl	__aeabi_d2f
 1247              	.LVL143:
 1248 009c C4F8B000 		str	r0, [r4, #176]	@ float
 1249 00a0 206B     		ldr	r0, [r4, #48]
 1250 00a2 FFF7FEFF 		bl	__aeabi_i2d
 1251              	.LVL144:
 1252 00a6 0022     		movs	r2, #0
 1253 00a8 444B     		ldr	r3, .L97+28
 1254 00aa FFF7FEFF 		bl	__aeabi_ddiv
 1255              	.LVL145:
 1256 00ae FFF7FEFF 		bl	__aeabi_d2f
 1257              	.LVL146:
 1258 00b2 C4F8B800 		str	r0, [r4, #184]	@ float
 445:./state.h     ****   RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 1259              		.loc 1 445 0
 1260 00b6 606B     		ldr	r0, [r4, #52]
 1261 00b8 FFF7FEFF 		bl	__aeabi_i2f
 1262              	.LVL147:
 1263 00bc 4FF06251 		mov	r1, #947912704
 1264 00c0 FFF7FEFF 		bl	__aeabi_fmul
 1265              	.LVL148:
 1266 00c4 C4F8BC00 		str	r0, [r4, #188]	@ float
 1267 00c8 A06B     		ldr	r0, [r4, #56]
 1268 00ca FFF7FEFF 		bl	__aeabi_i2f
 1269              	.LVL149:
 1270 00ce 4FF06251 		mov	r1, #947912704
 1271 00d2 FFF7FEFF 		bl	__aeabi_fmul
 1272              	.LVL150:
 1273 00d6 C4F8C000 		str	r0, [r4, #192]	@ float
 1274 00da E06B     		ldr	r0, [r4, #60]
 1275 00dc FFF7FEFF 		bl	__aeabi_i2f
 1276              	.LVL151:
 1277 00e0 4FF06251 		mov	r1, #947912704
 1278 00e4 FFF7FEFF 		bl	__aeabi_fmul
 1279              	.LVL152:
 1280 00e8 C4F8C400 		str	r0, [r4, #196]	@ float
 1281 00ec 206C     		ldr	r0, [r4, #64]
 1282 00ee FFF7FEFF 		bl	__aeabi_i2f
 1283              	.LVL153:
 1284 00f2 4FF06251 		mov	r1, #947912704
 1285 00f6 FFF7FEFF 		bl	__aeabi_fmul
 1286              	.LVL154:
 1287 00fa C4F8C800 		str	r0, [r4, #200]	@ float
 1288 00fe 606C     		ldr	r0, [r4, #68]
 1289 0100 FFF7FEFF 		bl	__aeabi_i2f
 1290              	.LVL155:
 1291 0104 4FF06251 		mov	r1, #947912704
 1292 0108 FFF7FEFF 		bl	__aeabi_fmul
 1293              	.LVL156:
 1294 010c C4F8CC00 		str	r0, [r4, #204]	@ float
 1295 0110 A06C     		ldr	r0, [r4, #72]
 1296 0112 FFF7FEFF 		bl	__aeabi_i2f
 1297              	.LVL157:
 1298 0116 4FF06251 		mov	r1, #947912704
 1299 011a FFF7FEFF 		bl	__aeabi_fmul
 1300              	.LVL158:
 1301 011e C4F8D000 		str	r0, [r4, #208]	@ float
 1302 0122 E06C     		ldr	r0, [r4, #76]
 1303 0124 FFF7FEFF 		bl	__aeabi_i2f
 1304              	.LVL159:
 1305 0128 4FF06251 		mov	r1, #947912704
 1306 012c FFF7FEFF 		bl	__aeabi_fmul
 1307              	.LVL160:
 1308 0130 C4F8D400 		str	r0, [r4, #212]	@ float
 1309 0134 206D     		ldr	r0, [r4, #80]
 1310 0136 FFF7FEFF 		bl	__aeabi_i2f
 1311              	.LVL161:
 1312 013a 4FF06251 		mov	r1, #947912704
 1313 013e FFF7FEFF 		bl	__aeabi_fmul
 1314              	.LVL162:
 1315 0142 C4F8D800 		str	r0, [r4, #216]	@ float
 1316 0146 606D     		ldr	r0, [r4, #84]
 1317 0148 FFF7FEFF 		bl	__aeabi_i2f
 1318              	.LVL163:
 1319 014c 4FF06251 		mov	r1, #947912704
 1320 0150 FFF7FEFF 		bl	__aeabi_fmul
 1321              	.LVL164:
 1322 0154 C4F8DC00 		str	r0, [r4, #220]	@ float
 446:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 1323              		.loc 1 446 0
 1324 0158 A06D     		ldr	r0, [r4, #88]
 1325 015a FFF7FEFF 		bl	__aeabi_i2d
 1326              	.LVL165:
 1327 015e 0022     		movs	r2, #0
 1328 0160 164B     		ldr	r3, .L97+28
 1329 0162 FFF7FEFF 		bl	__aeabi_ddiv
 1330              	.LVL166:
 1331 0166 FFF7FEFF 		bl	__aeabi_d2f
 1332              	.LVL167:
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 1333              		.loc 1 449 0
 1334 016a 2388     		ldrh	r3, [r4, #0]
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 1335              		.loc 1 450 0
 1336 016c B4F81421 		ldrh	r2, [r4, #276]
 446:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 1337              		.loc 1 446 0
 1338 0170 C4F8E000 		str	r0, [r4, #224]	@ float
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 1339              		.loc 1 449 0
 1340 0174 23F0C600 		bic	r0, r3, #198
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 1341              		.loc 1 452 0
 1342 0178 94F87031 		ldrb	r3, [r4, #368]	@ zero_extendqisi2
 449:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 1343              		.loc 1 449 0
 1344 017c 2080     		strh	r0, [r4, #0]	@ movhi
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 1345              		.loc 1 450 0
 1346 017e 22F0C601 		bic	r1, r2, #198
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 1347              		.loc 1 452 0
 1348 0182 23F00A00 		bic	r0, r3, #10
 1349 0186 84F87001 		strb	r0, [r4, #368]
 450:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 1350              		.loc 1 450 0
 1351 018a A4F81411 		strh	r1, [r4, #276]	@ movhi
 454:./state.h     ****   state.ned_initialized_i = TRUE;
 1352              		.loc 1 454 0
 1353 018e 84F85C70 		strb	r7, [r4, #92]
 455:./state.h     ****   state.ned_initialized_f = TRUE;
 1354              		.loc 1 455 0
 1355 0192 84F8E470 		strb	r7, [r4, #228]
 1356              	.LBE36:
 1357              	.LBE38:
 282:firmwares/rotorcraft/navigation.c ****   stateSetLocalOrigin_i(&ins_ltp_def);
 283:firmwares/rotorcraft/navigation.c **** #endif
 284:firmwares/rotorcraft/navigation.c **** 
 285:firmwares/rotorcraft/navigation.c ****   return 0;
 286:firmwares/rotorcraft/navigation.c **** }
 1358              		.loc 2 286 0
 1359 0196 0020     		movs	r0, #0
 1360 0198 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1361              	.L98:
 1362 019a 00BFAFF3 		.align	3
 1362      0080
 1363              	.L97:
 1364 01a0 00000000 		.word	0
 1365 01a4 D0126341 		.word	1097011920
 1366 01a8 00000000 		.word	gps
 1367 01ac 00000000 		.word	state
 1368 01b0 00000000 		.word	ins_ltp_def
 1369 01b4 00000000 		.word	ins
 1370 01b8 00005940 		.word	1079574528
 1371 01bc 00408F40 		.word	1083129856
 1372              		.cfi_endproc
 1373              	.LFE130:
 1375              		.section	.text.nav_init_stage,"ax",%progbits
 1376              		.align	1
 1377              		.global	nav_init_stage
 1378              		.thumb
 1379              		.thumb_func
 1381              	nav_init_stage:
 1382              	.LFB131:
 287:firmwares/rotorcraft/navigation.c **** 
 288:firmwares/rotorcraft/navigation.c **** void nav_init_stage( void ) {
 1383              		.loc 2 288 0
 1384              		.cfi_startproc
 1385              		@ args = 0, pretend = 0, frame = 0
 1386              		@ frame_needed = 0, uses_anonymous_args = 0
 1387 0000 10B5     		push	{r4, lr}
 1388              	.LCFI8:
 1389              		.cfi_def_cfa_offset 8
 1390              		.cfi_offset 4, -8
 1391              		.cfi_offset 14, -4
 289:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY(nav_last_point, *stateGetPositionEnu_i());
 1392              		.loc 2 289 0
 1393 0002 FFF7FEFF 		bl	stateGetPositionEnu_i
 1394              	.LVL168:
 1395 0006 0A4C     		ldr	r4, .L100
 1396 0008 0368     		ldr	r3, [r0, #0]
 1397 000a 2360     		str	r3, [r4, #0]
 1398 000c FFF7FEFF 		bl	stateGetPositionEnu_i
 1399              	.LVL169:
 1400 0010 4068     		ldr	r0, [r0, #4]
 1401 0012 6060     		str	r0, [r4, #4]
 1402 0014 FFF7FEFF 		bl	stateGetPositionEnu_i
 1403              	.LVL170:
 1404 0018 8168     		ldr	r1, [r0, #8]
 290:firmwares/rotorcraft/navigation.c ****   stage_time = 0;
 1405              		.loc 2 290 0
 1406 001a 0648     		ldr	r0, .L100+4
 289:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_COPY(nav_last_point, *stateGetPositionEnu_i());
 1407              		.loc 2 289 0
 1408 001c A160     		str	r1, [r4, #8]
 291:firmwares/rotorcraft/navigation.c ****   nav_circle_radians = 0;
 1409              		.loc 2 291 0
 1410 001e 0649     		ldr	r1, .L100+8
 290:firmwares/rotorcraft/navigation.c ****   stage_time = 0;
 1411              		.loc 2 290 0
 1412 0020 0023     		movs	r3, #0
 1413 0022 1A46     		mov	r2, r3	@ movhi
 1414 0024 0380     		strh	r3, [r0, #0]	@ movhi
 1415              		.loc 2 291 0
 1416 0026 0B60     		str	r3, [r1, #0]
 292:firmwares/rotorcraft/navigation.c ****   horizontal_mode = HORIZONTAL_MODE_WAYPOINT;
 1417              		.loc 2 292 0
 1418 0028 044B     		ldr	r3, .L100+12
 1419 002a 1A70     		strb	r2, [r3, #0]
 1420 002c 10BD     		pop	{r4, pc}
 1421              	.L101:
 1422 002e 00BF     		.align	2
 1423              	.L100:
 1424 0030 00000000 		.word	.LANCHOR27
 1425 0034 00000000 		.word	stage_time
 1426 0038 00000000 		.word	.LANCHOR21
 1427 003c 00000000 		.word	.LANCHOR8
 1428              		.cfi_endproc
 1429              	.LFE131:
 1431              		.section	.text.nav_move_waypoint,"ax",%progbits
 1432              		.align	1
 1433              		.global	nav_move_waypoint
 1434              		.thumb
 1435              		.thumb_func
 1437              	nav_move_waypoint:
 1438              	.LFB140:
 293:firmwares/rotorcraft/navigation.c **** }
 294:firmwares/rotorcraft/navigation.c **** 
 295:firmwares/rotorcraft/navigation.c **** #include <stdio.h>
 296:firmwares/rotorcraft/navigation.c **** void nav_periodic_task() {
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 298:firmwares/rotorcraft/navigation.c **** 
 299:firmwares/rotorcraft/navigation.c ****   /* from flight_plan.h */
 300:firmwares/rotorcraft/navigation.c ****   auto_nav();
 301:firmwares/rotorcraft/navigation.c **** 
 302:firmwares/rotorcraft/navigation.c ****   /* run carrot loop */
 303:firmwares/rotorcraft/navigation.c ****   nav_run();
 304:firmwares/rotorcraft/navigation.c **** 
 305:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL((float)ins_ltp_def.hmsl / 1000.);
 306:firmwares/rotorcraft/navigation.c **** }
 307:firmwares/rotorcraft/navigation.c **** 
 308:firmwares/rotorcraft/navigation.c **** #include "subsystems/datalink/downlink.h"
 309:firmwares/rotorcraft/navigation.c **** #include "messages.h"
 310:firmwares/rotorcraft/navigation.c **** #include "mcu_periph/uart.h"
 311:firmwares/rotorcraft/navigation.c **** void nav_move_waypoint(uint8_t wp_id, struct EnuCoor_i * new_pos) {
 1439              		.loc 2 311 0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              	.LVL171:
 312:firmwares/rotorcraft/navigation.c ****   if (wp_id < nb_waypoint) {
 1444              		.loc 2 312 0
 1445 0000 0528     		cmp	r0, #5
 311:firmwares/rotorcraft/navigation.c **** void nav_move_waypoint(uint8_t wp_id, struct EnuCoor_i * new_pos) {
 1446              		.loc 2 311 0
 1447 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1448              	.LCFI9:
 1449              		.cfi_def_cfa_offset 24
 1450              		.cfi_offset 3, -24
 1451              		.cfi_offset 4, -20
 1452              		.cfi_offset 5, -16
 1453              		.cfi_offset 6, -12
 1454              		.cfi_offset 7, -8
 1455              		.cfi_offset 14, -4
 311:firmwares/rotorcraft/navigation.c **** void nav_move_waypoint(uint8_t wp_id, struct EnuCoor_i * new_pos) {
 1456              		.loc 2 311 0
 1457 0004 0746     		mov	r7, r0
 1458 0006 0E46     		mov	r6, r1
 1459              		.loc 2 312 0
 1460 0008 00F2D380 		bhi	.L102
 313:firmwares/rotorcraft/navigation.c ****     INT32_VECT3_COPY(waypoints[wp_id],(*new_pos));
 1461              		.loc 2 313 0
 1462 000c 0C22     		movs	r2, #12
 1463 000e 7A43     		muls	r2, r7, r2
 1464 0010 0868     		ldr	r0, [r1, #0]
 1465              	.LVL172:
 1466 0012 6849     		ldr	r1, .L105
 1467              	.LVL173:
 1468 0014 8B18     		adds	r3, r1, r2
 1469 0016 8850     		str	r0, [r1, r2]
 1470 0018 7068     		ldr	r0, [r6, #4]
 1471 001a B168     		ldr	r1, [r6, #8]
 1472 001c 5860     		str	r0, [r3, #4]
 1473 001e 9960     		str	r1, [r3, #8]
 314:firmwares/rotorcraft/navigation.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x), &(new_pos->y),
 1474              		.loc 2 314 0
 1475 0020 6548     		ldr	r0, .L105+4
 1476 0022 1321     		movs	r1, #19
 1477 0024 FFF7FEFF 		bl	uart_check_free_space
 1478              	.LVL174:
 1479 0028 0028     		cmp	r0, #0
 1480 002a 00F0BE80 		beq	.L104
 1481              		.loc 2 314 0 is_stmt 0 discriminator 1
 1482 002e 6349     		ldr	r1, .L105+8
 1483 0030 634C     		ldr	r4, .L105+12
 1484 0032 0B88     		ldrh	r3, [r1, #0]
 1485 0034 2588     		ldrh	r5, [r4, #0]
 1486 0036 5A1C     		adds	r2, r3, #1
 1487 0038 0A80     		strh	r2, [r1, #0]	@ movhi
 1488 003a 1335     		adds	r5, r5, #19
 1489              	.LBB39:
 1490 003c 9921     		movs	r1, #153
 1491 003e 5E48     		ldr	r0, .L105+4
 1492              	.LBE39:
 1493 0040 2580     		strh	r5, [r4, #0]	@ movhi
 1494 0042 604D     		ldr	r5, .L105+16
 1495 0044 604C     		ldr	r4, .L105+20
 1496              	.LBB40:
 1497 0046 FFF7FEFF 		bl	uart_transmit
 1498              	.LVL175:
 1499 004a 1321     		movs	r1, #19
 1500 004c 5A48     		ldr	r0, .L105+4
 1501 004e FFF7FEFF 		bl	uart_transmit
 1502              	.LVL176:
 1503              	.LBE40:
 1504 0052 1420     		movs	r0, #20
 1505 0054 2721     		movs	r1, #39
 1506 0056 2870     		strb	r0, [r5, #0]
 1507 0058 2170     		strb	r1, [r4, #0]
 1508 005a 5748     		ldr	r0, .L105+4
 1509 005c 0121     		movs	r1, #1
 1510 005e FFF7FEFF 		bl	uart_transmit
 1511              	.LVL177:
 1512 0062 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1513 0064 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1514 0066 3133     		adds	r3, r3, #49
 1515 0068 D8B2     		uxtb	r0, r3
 1516              	.LVL178:
 1517 006a 8118     		adds	r1, r0, r2
 1518              	.LVL179:
 1519 006c 2870     		strb	r0, [r5, #0]
 1520 006e 2170     		strb	r1, [r4, #0]
 1521 0070 5148     		ldr	r0, .L105+4
 1522              	.LVL180:
 1523 0072 3121     		movs	r1, #49
 1524 0074 FFF7FEFF 		bl	uart_transmit
 1525              	.LVL181:
 1526              	.LBB41:
 1527 0078 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1528 007a 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1529 007c F818     		adds	r0, r7, r3
 1530 007e C1B2     		uxtb	r1, r0
 1531 0080 8B18     		adds	r3, r1, r2
 1532              	.LVL182:
 1533 0082 2970     		strb	r1, [r5, #0]
 1534 0084 4C48     		ldr	r0, .L105+4
 1535 0086 3946     		mov	r1, r7
 1536              	.LVL183:
 1537 0088 2370     		strb	r3, [r4, #0]
 1538 008a FFF7FEFF 		bl	uart_transmit
 1539              	.LVL184:
 1540              	.LBE41:
 1541              	.LBB42:
 1542 008e 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 1543              	.LVL185:
 1544 0090 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1545 0092 0A18     		adds	r2, r1, r0
 1546 0094 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1547 0096 D3B2     		uxtb	r3, r2
 1548 0098 1A18     		adds	r2, r3, r0
 1549              	.LVL186:
 1550 009a 4748     		ldr	r0, .L105+4
 1551 009c 2B70     		strb	r3, [r5, #0]
 1552 009e 2270     		strb	r2, [r4, #0]
 1553 00a0 FFF7FEFF 		bl	uart_transmit
 1554              	.LVL187:
 1555              	.LBE42:
 1556              	.LBB43:
 1557 00a4 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1558 00a6 7178     		ldrb	r1, [r6, #1]	@ zero_extendqisi2
 1559              	.LVL188:
 1560 00a8 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1561 00aa C818     		adds	r0, r1, r3
 1562 00ac C3B2     		uxtb	r3, r0
 1563 00ae 9818     		adds	r0, r3, r2
 1564              	.LVL189:
 1565 00b0 2070     		strb	r0, [r4, #0]
 1566 00b2 4148     		ldr	r0, .L105+4
 1567 00b4 2B70     		strb	r3, [r5, #0]
 1568 00b6 FFF7FEFF 		bl	uart_transmit
 1569              	.LVL190:
 1570              	.LBE43:
 1571              	.LBB44:
 1572 00ba 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1573 00bc B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 1574              	.LVL191:
 1575 00be CA18     		adds	r2, r1, r3
 1576 00c0 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1577 00c2 D0B2     		uxtb	r0, r2
 1578 00c4 C218     		adds	r2, r0, r3
 1579              	.LVL192:
 1580 00c6 2870     		strb	r0, [r5, #0]
 1581 00c8 3B48     		ldr	r0, .L105+4
 1582              	.LVL193:
 1583 00ca 2270     		strb	r2, [r4, #0]
 1584 00cc FFF7FEFF 		bl	uart_transmit
 1585              	.LVL194:
 1586              	.LBE44:
 1587              	.LBB45:
 1588 00d0 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1589 00d2 F178     		ldrb	r1, [r6, #3]	@ zero_extendqisi2
 1590              	.LVL195:
 1591 00d4 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1592 00d6 0B18     		adds	r3, r1, r0
 1593 00d8 D8B2     		uxtb	r0, r3
 1594 00da 8318     		adds	r3, r0, r2
 1595              	.LVL196:
 1596 00dc 2870     		strb	r0, [r5, #0]
 1597 00de 3648     		ldr	r0, .L105+4
 1598              	.LVL197:
 1599 00e0 2370     		strb	r3, [r4, #0]
 1600 00e2 FFF7FEFF 		bl	uart_transmit
 1601              	.LVL198:
 1602              	.LBE45:
 1603              	.LBB46:
 1604 00e6 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1605 00e8 3179     		ldrb	r1, [r6, #4]	@ zero_extendqisi2
 1606              	.LVL199:
 1607 00ea 0A18     		adds	r2, r1, r0
 1608 00ec 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1609 00ee D3B2     		uxtb	r3, r2
 1610 00f0 1A18     		adds	r2, r3, r0
 1611              	.LVL200:
 1612 00f2 3148     		ldr	r0, .L105+4
 1613 00f4 2B70     		strb	r3, [r5, #0]
 1614 00f6 2270     		strb	r2, [r4, #0]
 1615 00f8 FFF7FEFF 		bl	uart_transmit
 1616              	.LVL201:
 1617              	.LBE46:
 1618              	.LBB47:
 1619 00fc 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1620 00fe 7179     		ldrb	r1, [r6, #5]	@ zero_extendqisi2
 1621              	.LVL202:
 1622 0100 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1623 0102 C818     		adds	r0, r1, r3
 1624 0104 C3B2     		uxtb	r3, r0
 1625 0106 9818     		adds	r0, r3, r2
 1626              	.LVL203:
 1627 0108 2070     		strb	r0, [r4, #0]
 1628 010a 2B48     		ldr	r0, .L105+4
 1629 010c 2B70     		strb	r3, [r5, #0]
 1630 010e FFF7FEFF 		bl	uart_transmit
 1631              	.LVL204:
 1632              	.LBE47:
 1633              	.LBB48:
 1634 0112 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1635 0114 B179     		ldrb	r1, [r6, #6]	@ zero_extendqisi2
 1636              	.LVL205:
 1637 0116 CA18     		adds	r2, r1, r3
 1638 0118 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1639 011a D0B2     		uxtb	r0, r2
 1640 011c C218     		adds	r2, r0, r3
 1641              	.LVL206:
 1642 011e 2870     		strb	r0, [r5, #0]
 1643 0120 2548     		ldr	r0, .L105+4
 1644              	.LVL207:
 1645 0122 2270     		strb	r2, [r4, #0]
 1646 0124 FFF7FEFF 		bl	uart_transmit
 1647              	.LVL208:
 1648              	.LBE48:
 1649              	.LBB49:
 1650 0128 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1651 012a F179     		ldrb	r1, [r6, #7]	@ zero_extendqisi2
 1652              	.LVL209:
 1653 012c 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1654 012e 0B18     		adds	r3, r1, r0
 1655 0130 D8B2     		uxtb	r0, r3
 1656 0132 8318     		adds	r3, r0, r2
 1657              	.LVL210:
 1658 0134 2870     		strb	r0, [r5, #0]
 1659 0136 2048     		ldr	r0, .L105+4
 1660              	.LVL211:
 1661 0138 2370     		strb	r3, [r4, #0]
 1662 013a FFF7FEFF 		bl	uart_transmit
 1663              	.LVL212:
 1664              	.LBE49:
 1665              	.LBB50:
 1666 013e 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1667 0140 317A     		ldrb	r1, [r6, #8]	@ zero_extendqisi2
 1668              	.LVL213:
 1669 0142 0A18     		adds	r2, r1, r0
 1670 0144 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 1671 0146 D3B2     		uxtb	r3, r2
 1672 0148 1A18     		adds	r2, r3, r0
 1673              	.LVL214:
 1674 014a 1B48     		ldr	r0, .L105+4
 1675 014c 2B70     		strb	r3, [r5, #0]
 1676 014e 2270     		strb	r2, [r4, #0]
 1677 0150 FFF7FEFF 		bl	uart_transmit
 1678              	.LVL215:
 1679              	.LBE50:
 1680              	.LBB51:
 1681 0154 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1682 0156 717A     		ldrb	r1, [r6, #9]	@ zero_extendqisi2
 1683              	.LVL216:
 1684 0158 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1685 015a C818     		adds	r0, r1, r3
 1686 015c C3B2     		uxtb	r3, r0
 1687 015e 9818     		adds	r0, r3, r2
 1688              	.LVL217:
 1689 0160 2070     		strb	r0, [r4, #0]
 1690 0162 1548     		ldr	r0, .L105+4
 1691 0164 2B70     		strb	r3, [r5, #0]
 1692 0166 FFF7FEFF 		bl	uart_transmit
 1693              	.LVL218:
 1694              	.LBE51:
 1695              	.LBB52:
 1696 016a 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 1697 016c B17A     		ldrb	r1, [r6, #10]	@ zero_extendqisi2
 1698              	.LVL219:
 1699 016e CA18     		adds	r2, r1, r3
 1700 0170 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 1701 0172 D0B2     		uxtb	r0, r2
 1702 0174 C218     		adds	r2, r0, r3
 1703              	.LVL220:
 1704 0176 2870     		strb	r0, [r5, #0]
 1705 0178 0F48     		ldr	r0, .L105+4
 1706              	.LVL221:
 1707 017a 2270     		strb	r2, [r4, #0]
 1708 017c FFF7FEFF 		bl	uart_transmit
 1709              	.LVL222:
 1710              	.LBE52:
 1711              	.LBB53:
 1712 0180 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 1713 0182 F17A     		ldrb	r1, [r6, #11]	@ zero_extendqisi2
 1714              	.LVL223:
 1715 0184 2278     		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 1716 0186 0B18     		adds	r3, r1, r0
 1717 0188 D8B2     		uxtb	r0, r3
 1718 018a 8318     		adds	r3, r0, r2
 1719              	.LVL224:
 1720 018c 2870     		strb	r0, [r5, #0]
 1721 018e 0A48     		ldr	r0, .L105+4
 1722              	.LVL225:
 1723 0190 2370     		strb	r3, [r4, #0]
 1724 0192 FFF7FEFF 		bl	uart_transmit
 1725              	.LVL226:
 1726              	.LBE53:
 1727 0196 2978     		ldrb	r1, [r5, #0]	@ zero_extendqisi2
 1728 0198 0748     		ldr	r0, .L105+4
 1729 019a FFF7FEFF 		bl	uart_transmit
 1730              	.LVL227:
 1731 019e 0648     		ldr	r0, .L105+4
 1732 01a0 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 315:firmwares/rotorcraft/navigation.c ****   }
 316:firmwares/rotorcraft/navigation.c **** }
 1733              		.loc 2 316 0 is_stmt 1 discriminator 1
 1734 01a2 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 314:firmwares/rotorcraft/navigation.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x), &(new_pos->y),
 1735              		.loc 2 314 0 discriminator 1
 1736 01a6 FFF7FEBF 		b	uart_transmit
 1737              	.LVL228:
 1738              	.L104:
 314:firmwares/rotorcraft/navigation.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x), &(new_pos->y),
 1739              		.loc 2 314 0 is_stmt 0 discriminator 2
 1740 01aa 084B     		ldr	r3, .L105+24
 1741 01ac 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1742 01ae 501C     		adds	r0, r2, #1
 1743 01b0 1870     		strb	r0, [r3, #0]
 1744              	.L102:
 1745 01b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1746              	.L106:
 1747              		.align	2
 1748              	.L105:
 1749 01b4 00000000 		.word	.LANCHOR1
 1750 01b8 00000000 		.word	uart2
 1751 01bc 00000000 		.word	downlink_nb_msgs
 1752 01c0 00000000 		.word	downlink_nb_bytes
 1753 01c4 00000000 		.word	ck_a
 1754 01c8 00000000 		.word	ck_b
 1755 01cc 00000000 		.word	downlink_nb_ovrn
 1756              		.cfi_endproc
 1757              	.LFE140:
 1759              		.section	.text.navigation_update_wp_from_speed,"ax",%progbits
 1760              		.align	1
 1761              		.global	navigation_update_wp_from_speed
 1762              		.thumb
 1763              		.thumb_func
 1765              	navigation_update_wp_from_speed:
 1766              	.LFB141:
 317:firmwares/rotorcraft/navigation.c **** 
 318:firmwares/rotorcraft/navigation.c **** void navigation_update_wp_from_speed(uint8_t wp, struct Int16Vect3 speed_sp, int16_t heading_rate_s
 1767              		.loc 2 318 0 is_stmt 1
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 16
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              	.LVL229:
 1772 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1773              	.LCFI10:
 1774              		.cfi_def_cfa_offset 36
 1775              		.cfi_offset 4, -36
 1776              		.cfi_offset 5, -32
 1777              		.cfi_offset 6, -28
 1778              		.cfi_offset 7, -24
 1779              		.cfi_offset 8, -20
 1780              		.cfi_offset 9, -16
 1781              		.cfi_offset 10, -12
 1782              		.cfi_offset 11, -8
 1783              		.cfi_offset 14, -4
 1784 0004 85B0     		sub	sp, sp, #20
 1785              	.LCFI11:
 1786              		.cfi_def_cfa_offset 56
 1787              		.loc 2 318 0
 1788 0006 0446     		mov	r4, r0
 1789 0008 04A8     		add	r0, sp, #16
 1790              	.LVL230:
 1791 000a 00E90600 		stmdb	r0, {r1, r2}
 1792              	.LBB54:
 319:firmwares/rotorcraft/navigation.c ****   //  MY_ASSERT(wp < nb_waypoint); FIXME
 320:firmwares/rotorcraft/navigation.c ****   int32_t s_heading, c_heading;
 321:firmwares/rotorcraft/navigation.c ****   PPRZ_ITRIG_SIN(s_heading, nav_heading);
 1793              		.loc 2 321 0
 1794 000e 544A     		ldr	r2, .L139
 1795              	.LBE54:
 318:firmwares/rotorcraft/navigation.c **** void navigation_update_wp_from_speed(uint8_t wp, struct Int16Vect3 speed_sp, int16_t heading_rate_s
 1796              		.loc 2 318 0
 1797 0010 0193     		str	r3, [sp, #4]
 1798              	.LBB55:
 1799              		.loc 2 321 0
 1800 0012 1068     		ldr	r0, [r2, #0]
 1801              	.LVL231:
 1802 0014 0246     		mov	r2, r0
 1803              	.LVL232:
 1804              	.L108:
 1805              		.loc 2 321 0 is_stmt 0 discriminator 1
 1806 0016 43F24321 		movw	r1, #12867
 1807 001a 8A42     		cmp	r2, r1
 1808 001c 03DD     		ble	.L133
 1809              	.L109:
 1810              		.loc 2 321 0 discriminator 2
 1811 001e A2F5C941 		sub	r1, r2, #25728
 1812 0022 CA1F     		subs	r2, r1, #7
 1813              	.LVL233:
 1814 0024 F7E7     		b	.L108
 1815              	.LVL234:
 1816              	.L133:
 1817              		.loc 2 321 0 discriminator 4
 1818 0026 4F4B     		ldr	r3, .L139+4
 1819 0028 9A42     		cmp	r2, r3
 1820 002a 03DA     		bge	.L136
 1821              	.L111:
 1822              		.loc 2 321 0 discriminator 5
 1823 002c 02F5C942 		add	r2, r2, #25728
 1824              	.LVL235:
 1825 0030 0732     		adds	r2, r2, #7
 1826              	.LVL236:
 1827 0032 F8E7     		b	.L133
 1828              	.LVL237:
 1829              	.L136:
 1830              		.loc 2 321 0 discriminator 6
 1831 0034 41F62115 		movw	r5, #6433
 1832 0038 AA42     		cmp	r2, r5
 1833 003a 4B4E     		ldr	r6, .L139+8
 1834 003c 03DD     		ble	.L112
 1835              		.loc 2 321 0 discriminator 7
 1836 003e C2F54957 		rsb	r7, r2, #12864
 1837 0042 FA1C     		adds	r2, r7, #3
 1838              	.LVL238:
 1839 0044 0CE0     		b	.L113
 1840              	.L112:
 1841              		.loc 2 321 0 discriminator 8
 1842 0046 6FF4C957 		mvn	r7, #6432
 1843 004a BA42     		cmp	r2, r7
 1844 004c 06DA     		bge	.L114
 1845              		.loc 2 321 0 discriminator 9
 1846 004e C2F17F42 		rsb	r2, r2, #-16777216
 1847              	.LVL239:
 1848 0052 02F57F01 		add	r1, r2, #16711680
 1849 0056 01F54D42 		add	r2, r1, #52480
 1850 005a BD32     		adds	r2, r2, #189
 1851              	.LVL240:
 1852              	.L114:
 1853              		.loc 2 321 0 discriminator 10
 1854 005c 002A     		cmp	r2, #0
 1855 005e 02DB     		blt	.L115
 1856              	.L113:
 1857              		.loc 2 321 0 discriminator 11
 1858 0060 36F91250 		ldrsh	r5, [r6, r2, lsl #1]
 1859              	.LVL241:
 1860 0064 03E0     		b	.L116
 1861              	.LVL242:
 1862              	.L115:
 1863              		.loc 2 321 0 discriminator 12
 1864 0066 5342     		negs	r3, r2
 1865 0068 36F91350 		ldrsh	r5, [r6, r3, lsl #1]
 1866 006c 6D42     		negs	r5, r5
 1867              	.LVL243:
 1868              	.L116:
 1869              	.LBE55:
 1870              	.LBB56:
 322:firmwares/rotorcraft/navigation.c ****   PPRZ_ITRIG_COS(c_heading, nav_heading);
 1871              		.loc 2 322 0 is_stmt 1
 1872 006e 00F5C956 		add	r6, r0, #6432
 1873 0072 721C     		adds	r2, r6, #1
 1874              	.LVL244:
 1875              	.L117:
 1876              		.loc 2 322 0 is_stmt 0 discriminator 1
 1877 0074 43F24321 		movw	r1, #12867
 1878 0078 8A42     		cmp	r2, r1
 1879 007a 03DD     		ble	.L134
 1880              	.L118:
 1881              		.loc 2 322 0 discriminator 2
 1882 007c A2F5C947 		sub	r7, r2, #25728
 1883 0080 FA1F     		subs	r2, r7, #7
 1884              	.LVL245:
 1885 0082 F7E7     		b	.L117
 1886              	.LVL246:
 1887              	.L134:
 1888              		.loc 2 322 0 discriminator 4
 1889 0084 374B     		ldr	r3, .L139+4
 1890 0086 9A42     		cmp	r2, r3
 1891 0088 03DA     		bge	.L137
 1892              	.L120:
 1893              		.loc 2 322 0 discriminator 5
 1894 008a 02F5C946 		add	r6, r2, #25728
 1895 008e F21D     		adds	r2, r6, #7
 1896              	.LVL247:
 1897 0090 F8E7     		b	.L134
 1898              	.LVL248:
 1899              	.L137:
 1900              		.loc 2 322 0 discriminator 6
 1901 0092 41F62117 		movw	r7, #6433
 1902 0096 BA42     		cmp	r2, r7
 1903 0098 3349     		ldr	r1, .L139+8
 1904 009a 03DD     		ble	.L121
 1905              		.loc 2 322 0 discriminator 7
 1906 009c C2F54953 		rsb	r3, r2, #12864
 1907 00a0 DA1C     		adds	r2, r3, #3
 1908              	.LVL249:
 1909 00a2 0CE0     		b	.L122
 1910              	.L121:
 1911              		.loc 2 322 0 discriminator 8
 1912 00a4 6FF4C956 		mvn	r6, #6432
 1913 00a8 B242     		cmp	r2, r6
 1914 00aa 06DA     		bge	.L123
 1915              		.loc 2 322 0 discriminator 9
 1916 00ac C2F17F42 		rsb	r2, r2, #-16777216
 1917              	.LVL250:
 1918 00b0 02F57F03 		add	r3, r2, #16711680
 1919 00b4 03F54D42 		add	r2, r3, #52480
 1920 00b8 BD32     		adds	r2, r2, #189
 1921              	.LVL251:
 1922              	.L123:
 1923              		.loc 2 322 0 discriminator 10
 1924 00ba 002A     		cmp	r2, #0
 1925 00bc 02DB     		blt	.L124
 1926              	.L122:
 1927              		.loc 2 322 0 discriminator 11
 1928 00be 31F91260 		ldrsh	r6, [r1, r2, lsl #1]
 1929              	.LVL252:
 1930 00c2 03E0     		b	.L125
 1931              	.LVL253:
 1932              	.L124:
 1933              		.loc 2 322 0 discriminator 12
 1934 00c4 5742     		negs	r7, r2
 1935 00c6 31F91710 		ldrsh	r1, [r1, r7, lsl #1]
 1936 00ca 4E42     		negs	r6, r1
 1937              	.LVL254:
 1938              	.L125:
 1939              	.LBE56:
 323:firmwares/rotorcraft/navigation.c ****   // FIXME : scale POS to SPEED
 324:firmwares/rotorcraft/navigation.c ****   struct Int32Vect3 delta_pos;
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1940              		.loc 2 325 0 is_stmt 1
 1941 00cc BDF90A80 		ldrsh	r8, [sp, #10]
 1942 00d0 1022     		movs	r2, #16
 1943              	.LVL255:
 1944 00d2 98FBF2F1 		sdiv	r1, r8, r2
 1945 00d6 BDF90890 		ldrsh	r9, [sp, #8]
 326:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_RSHIFT(delta_pos, delta_pos, (INT32_SPEED_FRAC-INT32_POS_FRAC));
 1946              		.loc 2 326 0
 1947 00da 4FEAE128 		asr	r8, r1, #11
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1948              		.loc 2 325 0
 1949 00de 99FBF2F7 		sdiv	r7, r9, r2
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1950              		.loc 2 327 0
 1951 00e2 08FB06FA 		mul	sl, r8, r6
 326:firmwares/rotorcraft/navigation.c ****   INT32_VECT3_RSHIFT(delta_pos, delta_pos, (INT32_SPEED_FRAC-INT32_POS_FRAC));
 1952              		.loc 2 326 0
 1953 00e6 4FEAE729 		asr	r9, r7, #11
 1954              	.LVL256:
 1955              		.loc 2 327 0
 1956 00ea 0C27     		movs	r7, #12
 1957 00ec 6743     		muls	r7, r4, r7
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1958              		.loc 2 328 0
 1959 00ee 09FB06F6 		mul	r6, r9, r6
 1960              	.LVL257:
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1961              		.loc 2 327 0
 1962 00f2 DFF87CC0 		ldr	ip, .L139+16
 1963 00f6 09FB05AA 		mla	sl, r9, r5, sl
 1964 00fa 5CF80730 		ldr	r3, [ip, r7]
 1965              		.loc 2 328 0
 1966 00fe 08FB1565 		mls	r5, r8, r5, r6
 1967              	.LVL258:
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1968              		.loc 2 327 0
 1969 0102 0CEB0701 		add	r1, ip, r7
 1970 0106 03EBAA3A 		add	sl, r3, sl, asr #14
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1971              		.loc 2 325 0
 1972 010a BDF90CB0 		ldrsh	fp, [sp, #12]
 329:firmwares/rotorcraft/navigation.c ****   waypoints[wp].z += delta_pos.z;
 1973              		.loc 2 329 0
 1974 010e 8B68     		ldr	r3, [r1, #8]
 327:firmwares/rotorcraft/navigation.c ****   waypoints[wp].x += (s_heading * delta_pos.x + c_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1975              		.loc 2 327 0
 1976 0110 4CF807A0 		str	sl, [ip, r7]
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1977              		.loc 2 328 0
 1978 0114 4F68     		ldr	r7, [r1, #4]
 325:firmwares/rotorcraft/navigation.c ****   VECT3_SDIV(delta_pos, speed_sp,NAV_FREQ); /* fixme :make sure the division is really a >> */
 1979              		.loc 2 325 0
 1980 0116 9BFBF2FB 		sdiv	fp, fp, r2
 1981              	.LVL259:
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1982              		.loc 2 328 0
 1983 011a 07EBA537 		add	r7, r7, r5, asr #14
 1984              		.loc 2 329 0
 1985 011e 03EBEB25 		add	r5, r3, fp, asr #11
 328:firmwares/rotorcraft/navigation.c ****   waypoints[wp].y += (c_heading * delta_pos.x - s_heading * delta_pos.y) >> INT32_TRIG_FRAC;
 1986              		.loc 2 328 0
 1987 0122 4F60     		str	r7, [r1, #4]
 1988              		.loc 2 329 0
 1989 0124 8D60     		str	r5, [r1, #8]
 330:firmwares/rotorcraft/navigation.c ****   int32_t delta_heading = heading_rate_sp / NAV_FREQ;
 1990              		.loc 2 330 0
 1991 0126 0199     		ldr	r1, [sp, #4]
 1992 0128 91FBF2F2 		sdiv	r2, r1, r2
 1993              	.LVL260:
 331:firmwares/rotorcraft/navigation.c ****   delta_heading = delta_heading >> (INT32_SPEED_FRAC-INT32_POS_FRAC);
 332:firmwares/rotorcraft/navigation.c ****   nav_heading += delta_heading;
 1994              		.loc 2 332 0
 1995 012c 00EBE220 		add	r0, r0, r2, asr #11
 1996              	.L126:
 333:firmwares/rotorcraft/navigation.c **** 
 334:firmwares/rotorcraft/navigation.c ****   INT32_COURSE_NORMALIZE(nav_heading);
 1997              		.loc 2 334 0 discriminator 1
 1998 0130 0028     		cmp	r0, #0
 1999 0132 03DA     		bge	.L135
 2000              	.L127:
 2001              		.loc 2 334 0 is_stmt 0 discriminator 2
 2002 0134 00F5C943 		add	r3, r0, #25728
 2003 0138 D81D     		adds	r0, r3, #7
 2004 013a F9E7     		b	.L126
 2005              	.L135:
 2006              		.loc 2 334 0 discriminator 4
 2007 013c 46F28643 		movw	r3, #25734
 2008 0140 9842     		cmp	r0, r3
 2009 0142 03DD     		ble	.L138
 2010              	.L129:
 2011              		.loc 2 334 0 discriminator 5
 2012 0144 A0F5C941 		sub	r1, r0, #25728
 2013 0148 C81F     		subs	r0, r1, #7
 2014 014a F7E7     		b	.L135
 2015              	.L138:
 2016 014c 0449     		ldr	r1, .L139
 2017 014e 0860     		str	r0, [r1, #0]
 2018              	.LBB57:
 335:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(10,DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp, &(waypoints[wp].x)
 2019              		.loc 2 335 0 is_stmt 1
 2020 0150 0648     		ldr	r0, .L139+12
 2021 0152 0288     		ldrh	r2, [r0, #0]
 2022              	.LVL261:
 2023 0154 531C     		adds	r3, r2, #1
 2024 0156 99B2     		uxth	r1, r3
 2025 0158 0929     		cmp	r1, #9
 2026 015a 0BD8     		bhi	.L130
 2027 015c 0180     		strh	r1, [r0, #0]	@ movhi
 2028 015e E4E0     		b	.L107
 2029              	.L140:
 2030              		.align	2
 2031              	.L139:
 2032 0160 00000000 		.word	.LANCHOR12
 2033 0164 BDCDFFFF 		.word	-12867
 2034 0168 00000000 		.word	pprz_trig_int
 2035 016c 00000000 		.word	.LANCHOR28
 2036 0170 00000000 		.word	.LANCHOR1
 2037              	.L130:
 2038              		.loc 2 335 0 is_stmt 0 discriminator 1
 2039 0174 0022     		movs	r2, #0
 2040 0176 0280     		strh	r2, [r0, #0]	@ movhi
 2041 0178 1321     		movs	r1, #19
 2042 017a 6D48     		ldr	r0, .L141
 2043 017c FFF7FEFF 		bl	uart_check_free_space
 2044              	.LVL262:
 2045 0180 0028     		cmp	r0, #0
 2046 0182 00F0CE80 		beq	.L132
 2047              		.loc 2 335 0 discriminator 2
 2048 0186 6B4F     		ldr	r7, .L141+4
 2049 0188 6B4E     		ldr	r6, .L141+8
 2050 018a 3A88     		ldrh	r2, [r7, #0]
 2051 018c 3588     		ldrh	r5, [r6, #0]
 2052 018e 501C     		adds	r0, r2, #1
 2053 0190 1335     		adds	r5, r5, #19
 2054 0192 3880     		strh	r0, [r7, #0]	@ movhi
 2055              	.LBB58:
 2056 0194 9921     		movs	r1, #153
 2057 0196 6648     		ldr	r0, .L141
 2058              	.LBE58:
 2059 0198 3580     		strh	r5, [r6, #0]	@ movhi
 2060 019a 684D     		ldr	r5, .L141+12
 2061              	.LBB59:
 2062 019c FFF7FEFF 		bl	uart_transmit
 2063              	.LVL263:
 2064 01a0 1321     		movs	r1, #19
 2065 01a2 6348     		ldr	r0, .L141
 2066              	.LBE59:
 2067 01a4 664E     		ldr	r6, .L141+16
 2068              	.LBB60:
 2069 01a6 FFF7FEFF 		bl	uart_transmit
 2070              	.LVL264:
 2071              	.LBE60:
 2072 01aa 2721     		movs	r1, #39
 2073 01ac 1423     		movs	r3, #20
 2074 01ae 2970     		strb	r1, [r5, #0]
 2075 01b0 5F48     		ldr	r0, .L141
 2076 01b2 0121     		movs	r1, #1
 2077 01b4 3370     		strb	r3, [r6, #0]
 2078 01b6 FFF7FEFF 		bl	uart_transmit
 2079              	.LVL265:
 2080 01ba 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 2081 01bc 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2082 01be 3137     		adds	r7, r7, #49
 2083 01c0 F8B2     		uxtb	r0, r7
 2084              	.LVL266:
 2085 01c2 8318     		adds	r3, r0, r2
 2086              	.LVL267:
 2087 01c4 3070     		strb	r0, [r6, #0]
 2088 01c6 3121     		movs	r1, #49
 2089 01c8 5948     		ldr	r0, .L141
 2090              	.LVL268:
 2091 01ca 2B70     		strb	r3, [r5, #0]
 2092              	.LBB61:
 2093 01cc 4FF00C09 		mov	r9, #12
 2094              	.LVL269:
 2095              	.LBE61:
 2096 01d0 FFF7FEFF 		bl	uart_transmit
 2097              	.LVL270:
 2098              	.LBB62:
 2099 01d4 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 2100              	.LBE62:
 2101              	.LBB63:
 2102 01d6 09FB04F9 		mul	r9, r9, r4
 2103              	.LBE63:
 2104              	.LBB64:
 2105 01da 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2106 01dc 6718     		adds	r7, r4, r1
 2107              	.LBE64:
 2108              	.LBB65:
 2109 01de DFF86881 		ldr	r8, .L141+24
 2110              	.LVL271:
 2111              	.LBE65:
 2112              	.LBB66:
 2113 01e2 F8B2     		uxtb	r0, r7
 2114 01e4 8318     		adds	r3, r0, r2
 2115              	.LVL272:
 2116 01e6 3070     		strb	r0, [r6, #0]
 2117 01e8 2146     		mov	r1, r4
 2118 01ea 5148     		ldr	r0, .L141
 2119              	.LVL273:
 2120 01ec 2B70     		strb	r3, [r5, #0]
 2121 01ee FFF7FEFF 		bl	uart_transmit
 2122              	.LVL274:
 2123              	.LBE66:
 2124              	.LBB67:
 2125 01f2 18F80910 		ldrb	r1, [r8, r9]	@ zero_extendqisi2
 2126              	.LVL275:
 2127 01f6 3478     		ldrb	r4, [r6, #0]	@ zero_extendqisi2
 2128              	.LVL276:
 2129 01f8 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2130 01fa 0819     		adds	r0, r1, r4
 2131 01fc C3B2     		uxtb	r3, r0
 2132 01fe 08EB0907 		add	r7, r8, r9
 2133              	.LVL277:
 2134 0202 9C18     		adds	r4, r3, r2
 2135              	.LVL278:
 2136 0204 4A48     		ldr	r0, .L141
 2137 0206 3370     		strb	r3, [r6, #0]
 2138 0208 2C70     		strb	r4, [r5, #0]
 2139 020a FFF7FEFF 		bl	uart_transmit
 2140              	.LVL279:
 2141              	.LBE67:
 2142              	.LBB68:
 2143 020e 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2144 0210 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 2145              	.LVL280:
 2146 0212 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2147 0214 0B18     		adds	r3, r1, r0
 2148 0216 DCB2     		uxtb	r4, r3
 2149 0218 A018     		adds	r0, r4, r2
 2150              	.LVL281:
 2151 021a 2870     		strb	r0, [r5, #0]
 2152 021c 4448     		ldr	r0, .L141
 2153 021e 3470     		strb	r4, [r6, #0]
 2154 0220 FFF7FEFF 		bl	uart_transmit
 2155              	.LVL282:
 2156              	.LBE68:
 2157              	.LBB69:
 2158 0224 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2159 0226 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 2160              	.LVL283:
 2161 0228 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2162 022a CC18     		adds	r4, r1, r3
 2163              	.LVL284:
 2164 022c E0B2     		uxtb	r0, r4
 2165 022e 8318     		adds	r3, r0, r2
 2166              	.LVL285:
 2167 0230 3070     		strb	r0, [r6, #0]
 2168 0232 3F48     		ldr	r0, .L141
 2169              	.LVL286:
 2170 0234 2B70     		strb	r3, [r5, #0]
 2171 0236 FFF7FEFF 		bl	uart_transmit
 2172              	.LVL287:
 2173              	.LBE69:
 2174              	.LBB70:
 2175 023a 3478     		ldrb	r4, [r6, #0]	@ zero_extendqisi2
 2176 023c F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2177              	.LVL288:
 2178 023e 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2179 0240 0819     		adds	r0, r1, r4
 2180 0242 C3B2     		uxtb	r3, r0
 2181 0244 9C18     		adds	r4, r3, r2
 2182              	.LVL289:
 2183 0246 3A48     		ldr	r0, .L141
 2184 0248 3370     		strb	r3, [r6, #0]
 2185 024a 2C70     		strb	r4, [r5, #0]
 2186 024c FFF7FEFF 		bl	uart_transmit
 2187              	.LVL290:
 2188              	.LBE70:
 2189              	.LBB71:
 2190 0250 3C1D     		adds	r4, r7, #4
 2191 0252 3979     		ldrb	r1, [r7, #4]	@ zero_extendqisi2
 2192              	.LVL291:
 2193 0254 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 2194 0256 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2195 0258 C819     		adds	r0, r1, r7
 2196 025a C3B2     		uxtb	r3, r0
 2197 025c 9F18     		adds	r7, r3, r2
 2198              	.LVL292:
 2199 025e 3448     		ldr	r0, .L141
 2200 0260 3370     		strb	r3, [r6, #0]
 2201 0262 2F70     		strb	r7, [r5, #0]
 2202 0264 FFF7FEFF 		bl	uart_transmit
 2203              	.LVL293:
 2204              	.LBE71:
 2205              	.LBB72:
 2206 0268 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2207 026a 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 2208              	.LVL294:
 2209 026c 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2210 026e 0B18     		adds	r3, r1, r0
 2211 0270 DFB2     		uxtb	r7, r3
 2212 0272 B818     		adds	r0, r7, r2
 2213              	.LVL295:
 2214 0274 2870     		strb	r0, [r5, #0]
 2215 0276 2E48     		ldr	r0, .L141
 2216 0278 3770     		strb	r7, [r6, #0]
 2217 027a FFF7FEFF 		bl	uart_transmit
 2218              	.LVL296:
 2219              	.LBE72:
 2220              	.LBB73:
 2221 027e 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2222 0280 A178     		ldrb	r1, [r4, #2]	@ zero_extendqisi2
 2223              	.LVL297:
 2224 0282 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2225 0284 CF18     		adds	r7, r1, r3
 2226              	.LVL298:
 2227 0286 F8B2     		uxtb	r0, r7
 2228 0288 8318     		adds	r3, r0, r2
 2229              	.LVL299:
 2230 028a 3070     		strb	r0, [r6, #0]
 2231 028c 2848     		ldr	r0, .L141
 2232              	.LVL300:
 2233 028e 2B70     		strb	r3, [r5, #0]
 2234 0290 FFF7FEFF 		bl	uart_transmit
 2235              	.LVL301:
 2236              	.LBE73:
 2237              	.LBB74:
 2238 0294 3778     		ldrb	r7, [r6, #0]	@ zero_extendqisi2
 2239 0296 E178     		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 2240              	.LVL302:
 2241 0298 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2242 029a C819     		adds	r0, r1, r7
 2243 029c C3B2     		uxtb	r3, r0
 2244 029e 9F18     		adds	r7, r3, r2
 2245              	.LVL303:
 2246              	.LBE74:
 2247              	.LBB75:
 2248 02a0 09F10809 		add	r9, r9, #8
 2249              	.LBE75:
 2250              	.LBB76:
 2251 02a4 2248     		ldr	r0, .L141
 2252 02a6 3370     		strb	r3, [r6, #0]
 2253 02a8 2F70     		strb	r7, [r5, #0]
 2254 02aa FFF7FEFF 		bl	uart_transmit
 2255              	.LVL304:
 2256              	.LBE76:
 2257              	.LBB77:
 2258 02ae 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2259 02b0 18F80910 		ldrb	r1, [r8, r9]	@ zero_extendqisi2
 2260              	.LVL305:
 2261 02b4 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2262 02b6 0B18     		adds	r3, r1, r0
 2263 02b8 D8B2     		uxtb	r0, r3
 2264 02ba 8318     		adds	r3, r0, r2
 2265              	.LVL306:
 2266 02bc 08EB0907 		add	r7, r8, r9
 2267              	.LVL307:
 2268 02c0 3070     		strb	r0, [r6, #0]
 2269 02c2 1B48     		ldr	r0, .L141
 2270              	.LVL308:
 2271 02c4 2B70     		strb	r3, [r5, #0]
 2272 02c6 FFF7FEFF 		bl	uart_transmit
 2273              	.LVL309:
 2274              	.LBE77:
 2275              	.LBB78:
 2276 02ca 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2277 02cc 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 2278              	.LVL310:
 2279 02ce 0A18     		adds	r2, r1, r0
 2280 02d0 2878     		ldrb	r0, [r5, #0]	@ zero_extendqisi2
 2281 02d2 D3B2     		uxtb	r3, r2
 2282 02d4 1A18     		adds	r2, r3, r0
 2283              	.LVL311:
 2284 02d6 1648     		ldr	r0, .L141
 2285 02d8 3370     		strb	r3, [r6, #0]
 2286 02da 2A70     		strb	r2, [r5, #0]
 2287 02dc FFF7FEFF 		bl	uart_transmit
 2288              	.LVL312:
 2289              	.LBE78:
 2290              	.LBB79:
 2291 02e0 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2292 02e2 B978     		ldrb	r1, [r7, #2]	@ zero_extendqisi2
 2293              	.LVL313:
 2294 02e4 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2295 02e6 C818     		adds	r0, r1, r3
 2296 02e8 C3B2     		uxtb	r3, r0
 2297 02ea 9818     		adds	r0, r3, r2
 2298              	.LVL314:
 2299 02ec 2870     		strb	r0, [r5, #0]
 2300 02ee 1048     		ldr	r0, .L141
 2301 02f0 3370     		strb	r3, [r6, #0]
 2302 02f2 FFF7FEFF 		bl	uart_transmit
 2303              	.LVL315:
 2304              	.LBE79:
 2305              	.LBB80:
 2306 02f6 3378     		ldrb	r3, [r6, #0]	@ zero_extendqisi2
 2307 02f8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 2308              	.LVL316:
 2309 02fa CA18     		adds	r2, r1, r3
 2310 02fc 2B78     		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 2311 02fe D0B2     		uxtb	r0, r2
 2312 0300 C218     		adds	r2, r0, r3
 2313              	.LVL317:
 2314 0302 3070     		strb	r0, [r6, #0]
 2315 0304 0A48     		ldr	r0, .L141
 2316              	.LVL318:
 2317 0306 2A70     		strb	r2, [r5, #0]
 2318 0308 FFF7FEFF 		bl	uart_transmit
 2319              	.LVL319:
 2320              	.LBE80:
 2321 030c 3178     		ldrb	r1, [r6, #0]	@ zero_extendqisi2
 2322 030e 0848     		ldr	r0, .L141
 2323 0310 FFF7FEFF 		bl	uart_transmit
 2324              	.LVL320:
 2325 0314 0648     		ldr	r0, .L141
 2326 0316 2978     		ldrb	r1, [r5, #0]	@ zero_extendqisi2
 2327              	.LBE57:
 336:firmwares/rotorcraft/navigation.c **** }
 2328              		.loc 2 336 0 is_stmt 1 discriminator 2
 2329 0318 05B0     		add	sp, sp, #20
 2330 031a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 2331              	.LBB81:
 335:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(10,DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp, &(waypoints[wp].x)
 2332              		.loc 2 335 0 discriminator 2
 2333 031e FFF7FEBF 		b	uart_transmit
 2334              	.LVL321:
 2335              	.L132:
 335:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(10,DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp, &(waypoints[wp].x)
 2336              		.loc 2 335 0 is_stmt 0 discriminator 3
 2337 0322 0848     		ldr	r0, .L141+20
 2338 0324 0378     		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2339 0326 591C     		adds	r1, r3, #1
 2340 0328 0170     		strb	r1, [r0, #0]
 2341              	.L107:
 2342              	.LBE81:
 2343              		.loc 2 336 0 is_stmt 1
 2344 032a 05B0     		add	sp, sp, #20
 2345 032c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 2346              	.L142:
 2347              		.align	2
 2348              	.L141:
 2349 0330 00000000 		.word	uart2
 2350 0334 00000000 		.word	downlink_nb_msgs
 2351 0338 00000000 		.word	downlink_nb_bytes
 2352 033c 00000000 		.word	ck_b
 2353 0340 00000000 		.word	ck_a
 2354 0344 00000000 		.word	downlink_nb_ovrn
 2355 0348 00000000 		.word	.LANCHOR1
 2356              		.cfi_endproc
 2357              	.LFE141:
 2359              		.section	.text.nav_detect_ground,"ax",%progbits
 2360              		.align	1
 2361              		.global	nav_detect_ground
 2362              		.thumb
 2363              		.thumb_func
 2365              	nav_detect_ground:
 2366              	.LFB142:
 337:firmwares/rotorcraft/navigation.c **** 
 338:firmwares/rotorcraft/navigation.c **** bool_t nav_detect_ground(void) {
 2367              		.loc 2 338 0
 2368              		.cfi_startproc
 2369              		@ args = 0, pretend = 0, frame = 0
 2370              		@ frame_needed = 0, uses_anonymous_args = 0
 2371              		@ link register save eliminated.
 339:firmwares/rotorcraft/navigation.c ****   if (!autopilot_detect_ground) return FALSE;
 2372              		.loc 2 339 0
 2373 0000 034B     		ldr	r3, .L146
 2374 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2375 0004 10B1     		cbz	r0, .L144
 340:firmwares/rotorcraft/navigation.c ****   autopilot_detect_ground = FALSE;
 2376              		.loc 2 340 0
 2377 0006 0022     		movs	r2, #0
 2378 0008 1A70     		strb	r2, [r3, #0]
 341:firmwares/rotorcraft/navigation.c ****   return TRUE;
 2379              		.loc 2 341 0
 2380 000a 0120     		movs	r0, #1
 2381              	.L144:
 342:firmwares/rotorcraft/navigation.c **** }
 2382              		.loc 2 342 0
 2383 000c 7047     		bx	lr
 2384              	.L147:
 2385 000e 00BF     		.align	2
 2386              	.L146:
 2387 0010 00000000 		.word	autopilot_detect_ground
 2388              		.cfi_endproc
 2389              	.LFE142:
 2391              		.global	__aeabi_fcmpgt
 2392              		.section	.text.nav_periodic_task,"ax",%progbits
 2393              		.align	1
 2394              		.global	nav_periodic_task
 2395              		.thumb
 2396              		.thumb_func
 2398              	nav_periodic_task:
 2399              	.LFB132:
 296:firmwares/rotorcraft/navigation.c **** void nav_periodic_task() {
 2400              		.loc 2 296 0
 2401              		.cfi_startproc
 2402              		@ args = 0, pretend = 0, frame = 0
 2403              		@ frame_needed = 0, uses_anonymous_args = 0
 2404              	.LBB94:
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 2405              		.loc 2 297 0
 2406 0000 964B     		ldr	r3, .L256
 2407              	.LBE94:
 296:firmwares/rotorcraft/navigation.c **** void nav_periodic_task() {
 2408              		.loc 2 296 0
 2409 0002 70B5     		push	{r4, r5, r6, lr}
 2410              	.LCFI12:
 2411              		.cfi_def_cfa_offset 16
 2412              		.cfi_offset 4, -16
 2413              		.cfi_offset 5, -12
 2414              		.cfi_offset 6, -8
 2415              		.cfi_offset 14, -4
 2416              	.LBB95:
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 2417              		.loc 2 297 0
 2418 0004 1A88     		ldrh	r2, [r3, #0]
 2419 0006 501C     		adds	r0, r2, #1
 2420 0008 82B2     		uxth	r2, r0
 2421 000a 0F2A     		cmp	r2, #15
 2422 000c 08D9     		bls	.L238
 2423              	.L149:
 297:firmwares/rotorcraft/navigation.c ****   RunOnceEvery(16, { stage_time++;  block_time++; });
 2424              		.loc 2 297 0 is_stmt 0 discriminator 1
 2425 000e 0021     		movs	r1, #0
 2426 0010 1980     		strh	r1, [r3, #0]	@ movhi
 2427 0012 934B     		ldr	r3, .L256+4
 2428 0014 1A88     		ldrh	r2, [r3, #0]
 2429 0016 501C     		adds	r0, r2, #1
 2430 0018 1880     		strh	r0, [r3, #0]	@ movhi
 2431 001a 924B     		ldr	r3, .L256+8
 2432 001c 1988     		ldrh	r1, [r3, #0]
 2433 001e 4A1C     		adds	r2, r1, #1
 2434              	.L238:
 2435 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 2436              	.LBE95:
 2437              	.LBB96:
 2438              	.LBB97:
 2439              		.file 3 "/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h"
   1:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** /* This file has been generated from /Users/tony-yi/git/paparazzi_local/conf/flight_plans/rotorcraf
   2:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** /* Please DO NOT EDIT */
   3:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
   4:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #ifndef FLIGHT_PLAN_H
   5:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define FLIGHT_PLAN_H
   6:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
   7:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #include "std.h"
   8:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #include "generated/modules.h"
   9:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #include "autopilot.h"
  10:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define FLIGHT_PLAN_NAME "MYAC-TEST"
  11:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_UTM_EAST0 377349
  12:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_UTM_NORTH0 4824583
  13:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_UTM_ZONE0 31
  14:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_LAT0 435641194 /* 1e7deg */
  15:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_LON0 14812805 /* 1e7deg */
  16:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_ALT0 147000 /* mm above msl */
  17:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NAV_MSL0 51850 /* mm, EGM96 geoid-height (msl) over ellipsoid */
  18:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define QFU 0.0
  19:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_dummy 0
  20:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_HOME 1
  21:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_STDBY 2
  22:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_p1 3
  23:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_p2 4
  24:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WP_LZ 5
  25:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WAYPOINTS { \
  26:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {42.0, 42.0, 150},\
  27:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {0.0, 0.0, 150},\
  28:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {3.0, 0.0, 150},\
  29:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {3.0, 3.0, 150},\
  30:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {3.0, -3.0, 150},\
  31:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {1.0, 0.0, 150},\
  32:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** };
  33:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define WAYPOINTS_LLA { \
  34:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435645043, 14817909, 15000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  35:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641194, 14812805, 15000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  36:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641199, 14813176, 15000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  37:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641469, 14813170, 15000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  38:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435640929, 14813183, 15000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  39:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****  {435641196, 14812929, 15000}, /* 1e7deg, 1e7deg, cm (hmsl=51.85m) */ \
  40:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** };
  41:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NB_WAYPOINT 6
  42:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define NB_BLOCK 14
  43:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define GROUND_ALT 147.
  44:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define GROUND_ALT_CM 14700
  45:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define SECURITY_HEIGHT 2.
  46:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define SECURITY_ALT 149.
  47:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define HOME_MODE_HEIGHT 2.
  48:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #define MAX_DIST_FROM_HOME 60.
  49:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** #ifdef NAV_C
  50:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
  51:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** static inline void auto_nav(void) {
  52:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****   switch (nav_block) {
 2440              		.loc 3 52 0 is_stmt 1 discriminator 1
 2441 0022 914B     		ldr	r3, .L256+12
 2442 0024 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2443 0026 0D29     		cmp	r1, #13
 2444 0028 00F23E82 		bhi	.L151
 2445 002c DFE811F0 		tbh	[pc, r1, lsl #1]
 2446              	.L166:
 2447 0030 0E00     		.2byte	(.L152-.L166)/2
 2448 0032 2200     		.2byte	(.L153-.L166)/2
 2449 0034 3D00     		.2byte	(.L154-.L166)/2
 2450 0036 5300     		.2byte	(.L155-.L166)/2
 2451 0038 7600     		.2byte	(.L156-.L166)/2
 2452 003a B100     		.2byte	(.L157-.L166)/2
 2453 003c C500     		.2byte	(.L158-.L166)/2
 2454 003e D900     		.2byte	(.L159-.L166)/2
 2455 0040 F900     		.2byte	(.L160-.L166)/2
 2456 0042 9401     		.2byte	(.L161-.L166)/2
 2457 0044 BB01     		.2byte	(.L162-.L166)/2
 2458 0046 CF01     		.2byte	(.L163-.L166)/2
 2459 0048 0002     		.2byte	(.L164-.L166)/2
 2460 004a 2E02     		.2byte	(.L165-.L166)/2
 2461              	.L152:
  53:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(0) // Wait GPS
 2462              		.loc 3 53 0
 2463 004c 0024     		movs	r4, #0
 2464 004e 1C70     		strb	r4, [r3, #0]
  54:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
  55:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2465              		.loc 3 55 0
 2466 0050 864B     		ldr	r3, .L256+16
 2467 0052 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2468 0054 1C46     		mov	r4, r3
 2469 0056 0028     		cmp	r0, #0
 2470 0058 35D0     		beq	.L175
 2471 005a 0228     		cmp	r0, #2
 2472 005c 06D8     		bhi	.L167
 2473              	.L169:
  56:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
  57:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
  58:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
  59:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  60:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Label(while_1)
  61:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
  62:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (!(GpsFixValid()))) Goto(endwhile_2) else NextStageAndBreak();
 2474              		.loc 3 62 0
 2475 005e 8448     		ldr	r0, .L256+20
 2476 0060 90F85B20 		ldrb	r2, [r0, #91]	@ zero_extendqisi2
 2477 0064 032A     		cmp	r2, #3
 2478 0066 01D0     		beq	.L167
 2479 0068 0220     		movs	r0, #2
 2480 006a 02E2     		b	.L241
 2481              	.L167:
  63:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Stage(2)
  64:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           Goto(while_1)
  65:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Label(endwhile_2)
  66:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
  67:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(3)
 2482              		.loc 3 67 0
 2483 006c 0321     		movs	r1, #3
 2484 006e 2170     		strb	r1, [r4, #0]
  68:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2485              		.loc 3 68 0
 2486 0070 0122     		movs	r2, #1
 2487 0072 15E2     		b	.L242
 2488              	.L153:
  69:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  70:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
  71:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
  72:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
  73:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
  74:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(1) // Geo init
 2489              		.loc 3 74 0
 2490 0074 0120     		movs	r0, #1
 2491 0076 1870     		strb	r0, [r3, #0]
  75:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
  76:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2492              		.loc 3 76 0
 2493 0078 7C4B     		ldr	r3, .L256+16
 2494 007a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2495 007c 1C46     		mov	r4, r3
 2496 007e 8142     		cmp	r1, r0
 2497 0080 02D9     		bls	.L172
 2498 0082 0229     		cmp	r1, #2
 2499 0084 0DD1     		bne	.L225
 2500 0086 04E0     		b	.L173
 2501              	.L172:
  77:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Label(while_3)
  78:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
  79:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (LessThan(NavBlockTime(),10))) Goto(endwhile_4) else NextStageAndBreak();
 2502              		.loc 3 79 0
 2503 0088 764A     		ldr	r2, .L256+8
 2504 008a 1188     		ldrh	r1, [r2, #0]
 2505 008c 0929     		cmp	r1, #9
 2506 008e 40F2F081 		bls	.L241
 2507              	.L173:
  80:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Stage(1)
  81:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           Goto(while_3)
  82:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         Label(endwhile_4)
  83:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2508              		.loc 3 83 0
 2509 0092 0223     		movs	r3, #2
 2510 0094 2370     		strb	r3, [r4, #0]
 2511              	.LBB98:
  84:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavSetGroundReferenceHere()))
 2512              		.loc 3 84 0
 2513 0096 FFF7FEFF 		bl	nav_reset_reference
 2514              	.LVL322:
 2515              	.L248:
 2516              	.LBE98:
  85:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 2517              		.loc 3 85 0
 2518 009a 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2519 009c 431C     		adds	r3, r0, #1
 2520 009e 2370     		strb	r3, [r4, #0]
 2521 00a0 E8E1     		b	.L239
 2522              	.L225:
  86:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  87:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
  88:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(3)
 2523              		.loc 3 88 0
 2524 00a2 0320     		movs	r0, #3
 2525 00a4 1870     		strb	r0, [r3, #0]
  89:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2526              		.loc 3 89 0
 2527 00a6 0222     		movs	r2, #2
 2528 00a8 FAE1     		b	.L242
 2529              	.L154:
  90:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
  91:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
  92:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
  93:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
  94:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
  95:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(2) // Holding point
 2530              		.loc 3 95 0
 2531 00aa 0221     		movs	r1, #2
 2532 00ac 1970     		strb	r1, [r3, #0]
  96:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
  97:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2533              		.loc 3 97 0
 2534 00ae 6F4B     		ldr	r3, .L256+16
 2535 00b0 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2536 00b2 1C46     		mov	r4, r3
 2537 00b4 38B1     		cbz	r0, .L175
 2538 00b6 0128     		cmp	r0, #1
 2539 00b8 4FF00302 		mov	r2, #3
 2540 00bc 09D1     		bne	.L226
  98:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
  99:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
 100:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 101:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 102:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2541              		.loc 3 102 0
 2542 00be 1870     		strb	r0, [r3, #0]
 103:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (FALSE) NextStageAndBreak() else {
 104:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavAttitude(RadOfDeg(0));
 2543              		.loc 3 104 0
 2544 00c0 6C48     		ldr	r0, .L256+24
 2545 00c2 0270     		strb	r2, [r0, #0]
 2546 00c4 1CE0     		b	.L243
 2547              	.L175:
 2548              	.LBB99:
  99:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
 2549              		.loc 3 99 0
 2550 00c6 6C4A     		ldr	r2, .L256+28
 2551              	.LBE99:
  98:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2552              		.loc 3 98 0
 2553 00c8 2070     		strb	r0, [r4, #0]
 2554              	.LBB100:
  99:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavKillThrottle()))
 2555              		.loc 3 99 0
 2556 00ca 1178     		ldrb	r1, [r2, #0]	@ zero_extendqisi2
 2557 00cc 0C29     		cmp	r1, #12
 2558 00ce E4D1     		bne	.L248
 2559 00d0 13E0     		b	.L255
 2560              	.L226:
 2561              	.LBE100:
 105:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0));
 106:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0));
 107:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 108:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 109:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 110:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2562              		.loc 3 110 0
 2563 00d2 1970     		strb	r1, [r3, #0]
 2564 00d4 E4E1     		b	.L242
 2565              	.L155:
 111:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 112:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 113:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 114:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 115:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 116:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 117:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(3) // Start Engine
 2566              		.loc 3 117 0
 2567 00d6 0320     		movs	r0, #3
 2568 00d8 1870     		strb	r0, [r3, #0]
 118:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 119:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2569              		.loc 3 119 0
 2570 00da 644B     		ldr	r3, .L256+16
 2571 00dc 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2572 00de 1C46     		mov	r4, r3
 2573 00e0 29B1     		cbz	r1, .L179
 2574 00e2 0129     		cmp	r1, #1
 2575 00e4 16D1     		bne	.L227
 120:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 121:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavResurrect()))
 122:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 123:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 124:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2576              		.loc 3 124 0
 2577 00e6 1970     		strb	r1, [r3, #0]
 125:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (FALSE) NextStageAndBreak() else {
 126:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavAttitude(RadOfDeg(0));
 2578              		.loc 3 126 0
 2579 00e8 624B     		ldr	r3, .L256+24
 2580 00ea 1870     		strb	r0, [r3, #0]
 2581 00ec 08E0     		b	.L243
 2582              	.L179:
 2583              	.LBB101:
 121:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavResurrect()))
 2584              		.loc 3 121 0
 2585 00ee 6248     		ldr	r0, .L256+28
 2586              	.LBE101:
 120:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2587              		.loc 3 120 0
 2588 00f0 1970     		strb	r1, [r3, #0]
 2589              	.LBB102:
 121:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavResurrect()))
 2590              		.loc 3 121 0
 2591 00f2 0178     		ldrb	r1, [r0, #0]	@ zero_extendqisi2
 2592 00f4 0C29     		cmp	r1, #12
 2593 00f6 D0D1     		bne	.L248
 2594 00f8 0120     		movs	r0, #1
 2595              	.L255:
 2596 00fa FFF7FEFF 		bl	autopilot_set_motors_on
 2597              	.LVL323:
 2598 00fe CCE7     		b	.L248
 2599              	.L243:
 2600              	.LBE102:
 2601              		.loc 3 126 0
 2602 0100 5E4A     		ldr	r2, .L256+32
 2603 0102 0021     		movs	r1, #0
 2604 0104 1160     		str	r1, [r2, #0]
 127:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0));
 2605              		.loc 3 127 0
 2606 0106 5E4B     		ldr	r3, .L256+36
 128:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0));
 2607              		.loc 3 128 0
 2608 0108 5E48     		ldr	r0, .L256+40
 2609 010a 5F4A     		ldr	r2, .L256+44
 127:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0));
 2610              		.loc 3 127 0
 2611 010c 1960     		str	r1, [r3, #0]
 2612              		.loc 3 128 0
 2613 010e 0170     		strb	r1, [r0, #0]
 2614 0110 1160     		str	r1, [r2, #0]
 2615 0112 C9E1     		b	.L151
 2616              	.L227:
 129:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 130:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 131:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 132:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2617              		.loc 3 132 0
 2618 0114 0222     		movs	r2, #2
 2619 0116 1A70     		strb	r2, [r3, #0]
 133:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2620              		.loc 3 133 0
 2621 0118 0422     		movs	r2, #4
 2622 011a C1E1     		b	.L242
 2623              	.L156:
 2624              	.LBB103:
 2625              	.LBB104:
 642:./state.h     **** 
 643:./state.h     **** /// Get position in LLA coordinates (int).
 644:./state.h     **** static inline struct LlaCoor_i* stateGetPositionLla_i(void) {
 645:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I))
 646:./state.h     ****     stateCalcPositionLla_i();
 647:./state.h     ****   return &state.lla_pos_i;
 648:./state.h     **** }
 649:./state.h     **** 
 650:./state.h     **** /// Get position in UTM coordinates (float).
 651:./state.h     **** static inline struct UtmCoor_f* stateGetPositionUtm_f(void) {
 652:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F))
 653:./state.h     ****     stateCalcPositionUtm_f();
 654:./state.h     ****   return &state.utm_pos_f;
 655:./state.h     **** }
 656:./state.h     **** 
 657:./state.h     **** /// Get position in ECEF coordinates (float).
 658:./state.h     **** static inline struct EcefCoor_f* stateGetPositionEcef_f(void) {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F))
 660:./state.h     ****     stateCalcPositionEcef_f();
 661:./state.h     ****   return &state.ecef_pos_f;
 662:./state.h     **** }
 663:./state.h     **** 
 664:./state.h     **** /// Get position in local NED coordinates (float).
 665:./state.h     **** static inline struct NedCoor_f* stateGetPositionNed_f(void) {
 666:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F))
 667:./state.h     ****     stateCalcPositionNed_f();
 668:./state.h     ****   return &state.ned_pos_f;
 669:./state.h     **** }
 670:./state.h     **** 
 671:./state.h     **** /// Get position in local ENU coordinates (float).
 672:./state.h     **** static inline struct EnuCoor_f* stateGetPositionEnu_f(void) {
 673:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F))
 2626              		.loc 1 673 0
 2627 011c 5B48     		ldr	r0, .L256+48
 2628              	.LBE104:
 2629              	.LBE103:
 134:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 135:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 136:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 137:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 138:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 139:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(4) // Takeoff
 2630              		.loc 3 139 0
 2631 011e 0424     		movs	r4, #4
 2632              	.LBB107:
 2633              	.LBB105:
 2634              		.loc 1 673 0
 2635 0120 0188     		ldrh	r1, [r0, #0]
 2636              	.LBE105:
 2637              	.LBE107:
 2638              		.loc 3 139 0
 2639 0122 1C70     		strb	r4, [r3, #0]
 2640              	.LBB108:
 2641              	.LBB106:
 2642              		.loc 1 673 0
 2643 0124 11F0800F 		tst	r1, #128
 2644 0128 0446     		mov	r4, r0
 2645 012a 01D1     		bne	.L182
 674:./state.h     ****     stateCalcPositionEnu_f();
 2646              		.loc 1 674 0
 2647 012c FFF7FEFF 		bl	stateCalcPositionEnu_f
 2648              	.LVL324:
 2649              	.L182:
 2650              	.LBE106:
 2651              	.LBE108:
 140:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 141:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     if ((nav_block != 5) && ((stateGetPositionEnu_f())->z>2.000000)) { GotoBlock(5); return; }
 2652              		.loc 3 141 0
 2653 0130 D4F81001 		ldr	r0, [r4, #272]	@ float
 2654 0134 4FF08041 		mov	r1, #1073741824
 2655 0138 FFF7FEFF 		bl	__aeabi_fcmpgt
 2656              	.LVL325:
 2657 013c 08B1     		cbz	r0, .L228
 2658 013e 0522     		movs	r2, #5
 2659 0140 AEE1     		b	.L242
 2660              	.L228:
 142:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2661              		.loc 3 142 0
 2662 0142 4A4C     		ldr	r4, .L256+16
 2663 0144 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 2664 0146 9BB1     		cbz	r3, .L186
 2665 0148 012B     		cmp	r3, #1
 2666 014a 1CD1     		bne	.L229
 143:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 144:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavSetWaypointHere(WP_STDBY)))
 145:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 146:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 147:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 148:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(2);
 2667              		.loc 3 148 0
 2668 014c 5049     		ldr	r1, .L256+52
 147:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2669              		.loc 3 147 0
 2670 014e 2370     		strb	r3, [r4, #0]
 2671              		.loc 3 148 0
 2672 0150 484C     		ldr	r4, .L256+24
 2673 0152 504A     		ldr	r2, .L256+56
 2674 0154 2070     		strb	r0, [r4, #0]
 2675 0156 8C69     		ldr	r4, [r1, #24]
 2676 0158 1460     		str	r4, [r2, #0]
 2677 015a CC69     		ldr	r4, [r1, #28]
 2678 015c 096A     		ldr	r1, [r1, #32]
 2679 015e 5460     		str	r4, [r2, #4]
 2680 0160 9160     		str	r1, [r2, #8]
 149:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2681              		.loc 3 149 0
 2682 0162 474A     		ldr	r2, .L256+36
 2683 0164 1060     		str	r0, [r2, #0]
 150:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalClimbMode(0.500000);
 2684              		.loc 3 150 0
 2685 0166 4748     		ldr	r0, .L256+40
 2686 0168 4FF48022 		mov	r2, #262144
 2687 016c 0370     		strb	r3, [r0, #0]
 2688 016e 84E1     		b	.L244
 2689              	.L186:
 143:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2690              		.loc 3 143 0
 2691 0170 2370     		strb	r3, [r4, #0]
 2692              	.LBB109:
 144:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavSetWaypointHere(WP_STDBY)))
 2693              		.loc 3 144 0
 2694 0172 FFF7FEFF 		bl	stateGetPositionEnu_i
 2695              	.LVL326:
 2696 0176 464D     		ldr	r5, .L256+52
 2697 0178 0168     		ldr	r1, [r0, #0]
 2698 017a A961     		str	r1, [r5, #24]
 2699 017c FFF7FEFF 		bl	stateGetPositionEnu_i
 2700              	.LVL327:
 2701 0180 4268     		ldr	r2, [r0, #4]
 2702 0182 EA61     		str	r2, [r5, #28]
 2703 0184 89E7     		b	.L248
 2704              	.L229:
 2705              	.LBE109:
 151:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 152:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 153:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 154:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2706              		.loc 3 154 0
 2707 0186 384B     		ldr	r3, .L256+12
 153:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2708              		.loc 3 153 0
 2709 0188 0222     		movs	r2, #2
 2710              		.loc 3 154 0
 2711 018a 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 153:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2712              		.loc 3 153 0
 2713 018c 2270     		strb	r2, [r4, #0]
 2714              		.loc 3 154 0
 2715 018e 421C     		adds	r2, r0, #1
 2716 0190 87E1     		b	.L245
 2717              	.L157:
 155:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 156:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 157:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 158:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 159:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 160:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(5) // Standby
 161:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 162:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2718              		.loc 3 162 0
 2719 0192 3649     		ldr	r1, .L256+16
 160:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(5) // Standby
 2720              		.loc 3 160 0
 2721 0194 0522     		movs	r2, #5
 2722 0196 1A70     		strb	r2, [r3, #0]
 2723              		.loc 3 162 0
 2724 0198 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 2725 019a 53B9     		cbnz	r3, .L230
 163:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 164:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(2);
 2726              		.loc 3 164 0
 2727 019c 3548     		ldr	r0, .L256+24
 163:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2728              		.loc 3 163 0
 2729 019e 0B70     		strb	r3, [r1, #0]
 2730              		.loc 3 164 0
 2731 01a0 3B49     		ldr	r1, .L256+52
 2732 01a2 3C4A     		ldr	r2, .L256+56
 2733 01a4 0370     		strb	r3, [r0, #0]
 2734 01a6 8869     		ldr	r0, [r1, #24]
 2735 01a8 1060     		str	r0, [r2, #0]
 2736 01aa C869     		ldr	r0, [r1, #28]
 2737 01ac 5060     		str	r0, [r2, #4]
 2738 01ae 086A     		ldr	r0, [r1, #32]
 2739 01b0 25E1     		b	.L246
 2740              	.L230:
 165:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 166:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(2), 0.);
 167:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 168:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 169:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2741              		.loc 3 169 0
 2742 01b2 0123     		movs	r3, #1
 2743 01b4 0B70     		strb	r3, [r1, #0]
 170:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2744              		.loc 3 170 0
 2745 01b6 0622     		movs	r2, #6
 2746 01b8 72E1     		b	.L242
 2747              	.L158:
 171:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 172:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 173:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 174:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 175:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 176:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(6) // stay_p1
 177:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 178:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2748              		.loc 3 178 0
 2749 01ba 2C49     		ldr	r1, .L256+16
 176:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(6) // stay_p1
 2750              		.loc 3 176 0
 2751 01bc 0622     		movs	r2, #6
 2752 01be 1A70     		strb	r2, [r3, #0]
 2753              		.loc 3 178 0
 2754 01c0 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
 2755 01c2 53B9     		cbnz	r3, .L231
 179:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 180:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(3);
 2756              		.loc 3 180 0
 2757 01c4 2B4A     		ldr	r2, .L256+24
 179:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2758              		.loc 3 179 0
 2759 01c6 0B70     		strb	r3, [r1, #0]
 2760              		.loc 3 180 0
 2761 01c8 3149     		ldr	r1, .L256+52
 2762 01ca 1370     		strb	r3, [r2, #0]
 2763 01cc 486A     		ldr	r0, [r1, #36]
 2764 01ce 314A     		ldr	r2, .L256+56
 2765 01d0 1060     		str	r0, [r2, #0]
 2766 01d2 886A     		ldr	r0, [r1, #40]
 2767 01d4 5060     		str	r0, [r2, #4]
 2768 01d6 C86A     		ldr	r0, [r1, #44]
 2769 01d8 11E1     		b	.L246
 2770              	.L231:
 181:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 182:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 183:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 184:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 185:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2771              		.loc 3 185 0
 2772 01da 0120     		movs	r0, #1
 2773 01dc 0870     		strb	r0, [r1, #0]
 186:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2774              		.loc 3 186 0
 2775 01de 0722     		movs	r2, #7
 2776 01e0 5EE1     		b	.L242
 2777              	.L159:
 187:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 188:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 189:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 190:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 191:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 192:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(7) // go_p2
 2778              		.loc 3 192 0
 2779 01e2 0724     		movs	r4, #7
 2780 01e4 1C70     		strb	r4, [r3, #0]
 193:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 194:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2781              		.loc 3 194 0
 2782 01e6 214C     		ldr	r4, .L256+16
 192:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(7) // go_p2
 2783              		.loc 3 192 0
 2784 01e8 1F4A     		ldr	r2, .L256+12
 2785              		.loc 3 194 0
 2786 01ea 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 2787 01ec 19B1     		cbz	r1, .L193
 2788 01ee 0129     		cmp	r1, #1
 2789 01f0 13D1     		bne	.L232
 195:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 196:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(4,CARROT)) NextStageAndBreakFrom(4) else {
 197:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavGotoWaypoint(4);
 198:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 199:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 200:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 201:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 202:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2790              		.loc 3 202 0
 2791 01f2 2170     		strb	r1, [r4, #0]
 2792 01f4 A9E0     		b	.L254
 2793              	.L193:
 196:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(4,CARROT)) NextStageAndBreakFrom(4) else {
 2794              		.loc 3 196 0
 2795 01f6 0420     		movs	r0, #4
 195:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2796              		.loc 3 195 0
 2797 01f8 2170     		strb	r1, [r4, #0]
 196:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(4,CARROT)) NextStageAndBreakFrom(4) else {
 2798              		.loc 3 196 0
 2799 01fa FFF7FEFF 		bl	nav_approaching_from
 2800              	.LVL328:
 2801 01fe 0346     		mov	r3, r0
 2802 0200 08B1     		cbz	r0, .L195
 2803 0202 0422     		movs	r2, #4
 2804 0204 EFE0     		b	.L252
 2805              	.L195:
 197:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavGotoWaypoint(4);
 2806              		.loc 3 197 0
 2807 0206 2249     		ldr	r1, .L256+52
 2808 0208 1A4A     		ldr	r2, .L256+24
 2809 020a 1070     		strb	r0, [r2, #0]
 2810 020c 214A     		ldr	r2, .L256+56
 2811 020e 086B     		ldr	r0, [r1, #48]
 2812 0210 1060     		str	r0, [r2, #0]
 2813 0212 486B     		ldr	r0, [r1, #52]
 2814 0214 5060     		str	r0, [r2, #4]
 2815 0216 886B     		ldr	r0, [r1, #56]
 2816 0218 F1E0     		b	.L246
 2817              	.L232:
 203:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         GotoBlock(6);
 204:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 205:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 206:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2818              		.loc 3 206 0
 2819 021a 0220     		movs	r0, #2
 2820 021c 2070     		strb	r0, [r4, #0]
 207:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 2821              		.loc 3 207 0
 2822 021e 0823     		movs	r3, #8
 2823 0220 98E0     		b	.L250
 2824              	.L160:
 208:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 209:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 210:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 211:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 212:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 213:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(8) // line_p1_p2
 2825              		.loc 3 213 0
 2826 0222 0821     		movs	r1, #8
 2827 0224 1970     		strb	r1, [r3, #0]
 214:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 215:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 2828              		.loc 3 215 0
 2829 0226 114B     		ldr	r3, .L256+16
 2830 0228 0F4A     		ldr	r2, .L256+12
 2831 022a 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2832 022c 0329     		cmp	r1, #3
 2833 022e 00F28E80 		bhi	.L196
 2834 0232 DFE801F0 		tbb	[pc, r1]
 2835              	.L201:
 2836 0236 02       		.byte	(.L197-.L201)/2
 2837 0237 42       		.byte	(.L198-.L201)/2
 2838 0238 6A       		.byte	(.L199-.L201)/2
 2839 0239 88       		.byte	(.L200-.L201)/2
 2840              		.align	1
 2841              	.L197:
 216:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2842              		.loc 3 216 0
 2843 023a 0024     		movs	r4, #0
 217:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproachingFrom(4,3,CARROT)) NextStageAndBreakFrom(4) else {
 2844              		.loc 3 217 0
 2845 023c 0420     		movs	r0, #4
 2846 023e 0321     		movs	r1, #3
 216:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2847              		.loc 3 216 0
 2848 0240 1C70     		strb	r4, [r3, #0]
 2849              		.loc 3 217 0
 2850 0242 FFF7FEFF 		bl	nav_approaching_from
 2851              	.LVL329:
 216:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 2852              		.loc 3 216 0
 2853 0246 094D     		ldr	r5, .L256+16
 2854              		.loc 3 217 0
 2855 0248 0446     		mov	r4, r0
 2856 024a 38B3     		cbz	r0, .L202
 2857 024c 2A78     		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 2858 024e 124B     		ldr	r3, .L256+60
 2859 0250 0421     		movs	r1, #4
 2860 0252 501C     		adds	r0, r2, #1
 2861 0254 1970     		strb	r1, [r3, #0]
 2862 0256 2870     		strb	r0, [r5, #0]
 2863 0258 0CE1     		b	.L239
 2864              	.L257:
 2865 025a 00BF     		.align	2
 2866              	.L256:
 2867 025c 00000000 		.word	.LANCHOR29
 2868 0260 00000000 		.word	stage_time
 2869 0264 00000000 		.word	block_time
 2870 0268 00000000 		.word	nav_block
 2871 026c 00000000 		.word	nav_stage
 2872 0270 00000000 		.word	gps
 2873 0274 00000000 		.word	.LANCHOR8
 2874 0278 00000000 		.word	autopilot_mode
 2875 027c 00000000 		.word	.LANCHOR10
 2876 0280 00000000 		.word	.LANCHOR11
 2877 0284 00000000 		.word	.LANCHOR9
 2878 0288 00000000 		.word	.LANCHOR15
 2879 028c 00000000 		.word	state
 2880 0290 00000000 		.word	.LANCHOR1
 2881 0294 00000000 		.word	.LANCHOR6
 2882 0298 00000000 		.word	.LANCHOR30
 2883              	.L202:
 218:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavSegment(3, 4);
 2884              		.loc 3 218 0
 2885 029c 8D48     		ldr	r0, .L258
 2886 029e 0122     		movs	r2, #1
 2887 02a0 0270     		strb	r2, [r0, #0]
 2888 02a2 0421     		movs	r1, #4
 2889 02a4 0320     		movs	r0, #3
 2890 02a6 FFF7FEFF 		bl	nav_route
 2891              	.LVL330:
 219:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2892              		.loc 3 219 0
 2893 02aa 8B4B     		ldr	r3, .L258+4
 220:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 2894              		.loc 3 220 0
 2895 02ac 8B4A     		ldr	r2, .L258+8
 2896 02ae 8C48     		ldr	r0, .L258+12
 2897 02b0 0221     		movs	r1, #2
 219:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2898              		.loc 3 219 0
 2899 02b2 1C60     		str	r4, [r3, #0]
 2900              		.loc 3 220 0
 2901 02b4 1170     		strb	r1, [r2, #0]
 2902 02b6 806B     		ldr	r0, [r0, #56]
 2903 02b8 A7E0     		b	.L247
 2904              	.L198:
 221:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 222:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 223:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 2905              		.loc 3 223 0
 2906 02ba 0124     		movs	r4, #1
 2907 02bc 1C70     		strb	r4, [r3, #0]
 224:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(4);
 2908              		.loc 3 224 0
 2909 02be 884C     		ldr	r4, .L258+12
 2910 02c0 884B     		ldr	r3, .L258+16
 2911 02c2 206B     		ldr	r0, [r4, #48]
 2912 02c4 834A     		ldr	r2, .L258
 2913 02c6 0021     		movs	r1, #0
 2914 02c8 1860     		str	r0, [r3, #0]
 2915 02ca 1170     		strb	r1, [r2, #0]
 2916 02cc A06B     		ldr	r0, [r4, #56]
 2917 02ce 626B     		ldr	r2, [r4, #52]
 2918 02d0 9860     		str	r0, [r3, #8]
 2919 02d2 5A60     		str	r2, [r3, #4]
 225:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2920              		.loc 3 225 0
 2921 02d4 804B     		ldr	r3, .L258+4
 226:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 2922              		.loc 3 226 0
 2923 02d6 0224     		movs	r4, #2
 225:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2924              		.loc 3 225 0
 2925 02d8 1960     		str	r1, [r3, #0]
 2926              		.loc 3 226 0
 2927 02da 8049     		ldr	r1, .L258+8
 2928 02dc 0C70     		strb	r4, [r1, #0]
 2929 02de FFF7FEFF 		bl	__aeabi_i2f
 2930              	.LVL331:
 2931 02e2 4FF06E51 		mov	r1, #998244352
 2932 02e6 FFF7FEFF 		bl	__aeabi_fmul
 2933              	.LVL332:
 2934 02ea 4FF08741 		mov	r1, #1132462080
 2935 02ee FFF7FEFF 		bl	__aeabi_fmul
 2936              	.LVL333:
 2937 02f2 FFF7FEFF 		bl	__aeabi_f2iz
 2938              	.LVL334:
 2939 02f6 7C4A     		ldr	r2, .L258+20
 2940 02f8 1060     		str	r0, [r2, #0]
 227:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if ((stage_time>20)) NextStageAndBreak();
 2941              		.loc 3 227 0
 2942 02fa 7C48     		ldr	r0, .L258+24
 2943 02fc 0388     		ldrh	r3, [r0, #0]
 2944 02fe 142B     		cmp	r3, #20
 2945 0300 40F2D280 		bls	.L151
 2946 0304 7A49     		ldr	r1, .L258+28
 2947 0306 0C70     		strb	r4, [r1, #0]
 2948 0308 B4E0     		b	.L239
 2949              	.L199:
 228:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 229:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2950              		.loc 3 229 0
 2951 030a 0224     		movs	r4, #2
 230:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproachingFrom(3,4,CARROT)) NextStageAndBreakFrom(3) else {
 2952              		.loc 3 230 0
 2953 030c 0320     		movs	r0, #3
 2954 030e 0421     		movs	r1, #4
 229:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2955              		.loc 3 229 0
 2956 0310 1C70     		strb	r4, [r3, #0]
 2957              		.loc 3 230 0
 2958 0312 FFF7FEFF 		bl	nav_approaching_from
 2959              	.LVL335:
 229:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 2960              		.loc 3 229 0
 2961 0316 764E     		ldr	r6, .L258+28
 2962              		.loc 3 230 0
 2963 0318 0546     		mov	r5, r0
 2964 031a 30B1     		cbz	r0, .L203
 2965 031c 3078     		ldrb	r0, [r6, #0]	@ zero_extendqisi2
 2966 031e 754B     		ldr	r3, .L258+32
 2967 0320 0322     		movs	r2, #3
 2968 0322 411C     		adds	r1, r0, #1
 2969 0324 1A70     		strb	r2, [r3, #0]
 2970 0326 3170     		strb	r1, [r6, #0]
 2971 0328 A4E0     		b	.L239
 2972              	.L203:
 231:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavSegment(4, 3);
 2973              		.loc 3 231 0
 2974 032a 6A4B     		ldr	r3, .L258
 2975 032c 0121     		movs	r1, #1
 2976 032e 1970     		strb	r1, [r3, #0]
 2977 0330 0420     		movs	r0, #4
 2978 0332 0321     		movs	r1, #3
 2979 0334 FFF7FEFF 		bl	nav_route
 2980              	.LVL336:
 232:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 233:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 2981              		.loc 3 233 0
 2982 0338 6848     		ldr	r0, .L258+8
 232:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2983              		.loc 3 232 0
 2984 033a 674A     		ldr	r2, .L258+4
 2985              		.loc 3 233 0
 2986 033c 6849     		ldr	r1, .L258+12
 2987 033e 0470     		strb	r4, [r0, #0]
 232:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 2988              		.loc 3 232 0
 2989 0340 1560     		str	r5, [r2, #0]
 2990              		.loc 3 233 0
 2991 0342 C86A     		ldr	r0, [r1, #44]
 2992 0344 61E0     		b	.L247
 2993              	.L200:
 234:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 235:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 236:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(3)
 2994              		.loc 3 236 0
 2995 0346 0320     		movs	r0, #3
 2996 0348 1870     		strb	r0, [r3, #0]
 2997              	.L254:
 237:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         GotoBlock(6);
 2998              		.loc 3 237 0
 2999 034a 0623     		movs	r3, #6
 3000 034c 02E0     		b	.L250
 3001              	.L196:
 238:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 239:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 240:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(4)
 3002              		.loc 3 240 0
 3003 034e 0421     		movs	r1, #4
 3004 0350 1970     		strb	r1, [r3, #0]
 241:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3005              		.loc 3 241 0
 3006 0352 0923     		movs	r3, #9
 3007              	.L250:
 3008 0354 1370     		strb	r3, [r2, #0]
 3009 0356 A5E0     		b	.L240
 3010              	.L161:
 242:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 243:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 244:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 245:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 246:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 247:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(9) // circle
 3011              		.loc 3 247 0
 3012 0358 0921     		movs	r1, #9
 3013 035a 1970     		strb	r1, [r3, #0]
 248:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 249:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3014              		.loc 3 249 0
 3015 035c 644B     		ldr	r3, .L258+28
 3016 035e 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 3017 0360 E8B9     		cbnz	r0, .L233
 250:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 251:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3018              		.loc 3 251 0
 3019 0362 5D4C     		ldr	r4, .L258+4
 250:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3020              		.loc 3 250 0
 3021 0364 1870     		strb	r0, [r3, #0]
 252:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 3022              		.loc 3 252 0
 3023 0366 5D49     		ldr	r1, .L258+8
 3024 0368 5D4B     		ldr	r3, .L258+12
 251:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3025              		.loc 3 251 0
 3026 036a 2060     		str	r0, [r4, #0]
 3027              		.loc 3 252 0
 3028 036c 0224     		movs	r4, #2
 3029 036e D86A     		ldr	r0, [r3, #44]
 3030 0370 0C70     		strb	r4, [r1, #0]
 3031 0372 FFF7FEFF 		bl	__aeabi_i2f
 3032              	.LVL337:
 3033 0376 4FF06E51 		mov	r1, #998244352
 3034 037a FFF7FEFF 		bl	__aeabi_fmul
 3035              	.LVL338:
 3036 037e 4FF08741 		mov	r1, #1132462080
 3037 0382 FFF7FEFF 		bl	__aeabi_fmul
 3038              	.LVL339:
 3039 0386 FFF7FEFF 		bl	__aeabi_f2iz
 3040              	.LVL340:
 3041 038a 574A     		ldr	r2, .L258+20
 253:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavCircleWaypoint(3, 2);
 3042              		.loc 3 253 0
 3043 038c 4FF40071 		mov	r1, #512
 252:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 3044              		.loc 3 252 0
 3045 0390 1060     		str	r0, [r2, #0]
 3046              		.loc 3 253 0
 3047 0392 5048     		ldr	r0, .L258
 3048 0394 0470     		strb	r4, [r0, #0]
 3049 0396 0320     		movs	r0, #3
 3050 0398 FFF7FEFF 		bl	nav_circle
 3051              	.LVL341:
 3052 039c 84E0     		b	.L151
 3053              	.L233:
 254:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 255:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 256:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3054              		.loc 3 256 0
 3055 039e 0122     		movs	r2, #1
 3056 03a0 1A70     		strb	r2, [r3, #0]
 257:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3057              		.loc 3 257 0
 3058 03a2 0A22     		movs	r2, #10
 3059 03a4 7CE0     		b	.L242
 3060              	.L162:
 258:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 259:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 260:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 261:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 262:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 263:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(10) // land here
 3061              		.loc 3 263 0
 3062 03a6 0A24     		movs	r4, #10
 3063 03a8 1C70     		strb	r4, [r3, #0]
 264:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 265:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3064              		.loc 3 265 0
 3065 03aa 514C     		ldr	r4, .L258+28
 3066 03ac 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 3067 03ae 53B9     		cbnz	r3, .L234
 266:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3068              		.loc 3 266 0
 3069 03b0 2370     		strb	r3, [r4, #0]
 3070              	.LBB110:
 267:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavSetWaypointHere(WP_LZ)))
 3071              		.loc 3 267 0
 3072 03b2 FFF7FEFF 		bl	stateGetPositionEnu_i
 3073              	.LVL342:
 3074 03b6 4A4D     		ldr	r5, .L258+12
 3075 03b8 0068     		ldr	r0, [r0, #0]
 3076 03ba E863     		str	r0, [r5, #60]
 3077 03bc FFF7FEFF 		bl	stateGetPositionEnu_i
 3078              	.LVL343:
 3079 03c0 4268     		ldr	r2, [r0, #4]
 3080 03c2 2A64     		str	r2, [r5, #64]
 3081 03c4 69E6     		b	.L248
 3082              	.L234:
 3083              	.LBE110:
 268:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 269:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 270:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 271:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3084              		.loc 3 271 0
 3085 03c6 0121     		movs	r1, #1
 3086 03c8 2170     		strb	r1, [r4, #0]
 272:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3087              		.loc 3 272 0
 3088 03ca 0B22     		movs	r2, #11
 3089 03cc 68E0     		b	.L242
 3090              	.L163:
 273:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 274:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 275:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 276:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 277:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 278:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(11) // land
 3091              		.loc 3 278 0
 3092 03ce 0B24     		movs	r4, #11
 3093 03d0 1C70     		strb	r4, [r3, #0]
 279:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 280:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3094              		.loc 3 280 0
 3095 03d2 474C     		ldr	r4, .L258+28
 3096 03d4 2178     		ldrb	r1, [r4, #0]	@ zero_extendqisi2
 3097 03d6 39BB     		cbnz	r1, .L235
 281:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 282:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (NavApproaching(5,CARROT)) NextStageAndBreakFrom(5) else {
 3098              		.loc 3 282 0
 3099 03d8 0520     		movs	r0, #5
 281:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3100              		.loc 3 281 0
 3101 03da 2170     		strb	r1, [r4, #0]
 3102              		.loc 3 282 0
 3103 03dc FFF7FEFF 		bl	nav_approaching_from
 3104              	.LVL344:
 3105 03e0 0346     		mov	r3, r0
 3106 03e2 18B1     		cbz	r0, .L210
 3107 03e4 0522     		movs	r2, #5
 3108              	.L252:
 3109 03e6 434B     		ldr	r3, .L258+32
 3110 03e8 1A70     		strb	r2, [r3, #0]
 3111 03ea 56E6     		b	.L248
 3112              	.L210:
 283:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavGotoWaypoint(5);
 3113              		.loc 3 283 0
 3114 03ec 3C49     		ldr	r1, .L258+12
 3115 03ee 394A     		ldr	r2, .L258
 3116 03f0 1070     		strb	r0, [r2, #0]
 3117 03f2 3C4A     		ldr	r2, .L258+16
 3118 03f4 C86B     		ldr	r0, [r1, #60]
 3119 03f6 1060     		str	r0, [r2, #0]
 3120 03f8 086C     		ldr	r0, [r1, #64]
 3121 03fa 5060     		str	r0, [r2, #4]
 3122 03fc 486C     		ldr	r0, [r1, #68]
 3123              	.L246:
 3124 03fe 9060     		str	r0, [r2, #8]
 284:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3125              		.loc 3 284 0
 3126 0400 354A     		ldr	r2, .L258+4
 285:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(5), 0.);
 3127              		.loc 3 285 0
 3128 0402 0221     		movs	r1, #2
 284:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3129              		.loc 3 284 0
 3130 0404 1360     		str	r3, [r2, #0]
 3131              		.loc 3 285 0
 3132 0406 354B     		ldr	r3, .L258+8
 3133 0408 1970     		strb	r1, [r3, #0]
 3134              	.L247:
 3135 040a FFF7FEFF 		bl	__aeabi_i2f
 3136              	.LVL345:
 3137 040e 4FF06E51 		mov	r1, #998244352
 3138 0412 FFF7FEFF 		bl	__aeabi_fmul
 3139              	.LVL346:
 3140 0416 4FF08741 		mov	r1, #1132462080
 3141 041a FFF7FEFF 		bl	__aeabi_fmul
 3142              	.LVL347:
 3143 041e FFF7FEFF 		bl	__aeabi_f2iz
 3144              	.LVL348:
 3145 0422 314A     		ldr	r2, .L258+20
 3146 0424 1060     		str	r0, [r2, #0]
 3147 0426 3FE0     		b	.L151
 3148              	.L235:
 286:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         }
 287:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 288:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 289:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3149              		.loc 3 289 0
 3150 0428 0123     		movs	r3, #1
 3151 042a 2370     		strb	r3, [r4, #0]
 290:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3152              		.loc 3 290 0
 3153 042c 0C22     		movs	r2, #12
 3154 042e 37E0     		b	.L242
 3155              	.L164:
 291:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 292:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 293:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 294:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 295:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 296:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(12) // flare
 3156              		.loc 3 296 0
 3157 0430 0C20     		movs	r0, #12
 3158 0432 314C     		ldr	r4, .L258+36
 3159 0434 1870     		strb	r0, [r3, #0]
 297:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 298:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     if ((nav_block != 2) && NavDetectGround()) { GotoBlock(2); return; }
 3160              		.loc 3 298 0
 3161 0436 FFF7FEFF 		bl	nav_detect_ground
 3162              	.LVL349:
 3163 043a 08B1     		cbz	r0, .L211
 3164 043c 0223     		movs	r3, #2
 3165 043e 23E0     		b	.L249
 3166              	.L211:
 299:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3167              		.loc 3 299 0
 3168 0440 2B4B     		ldr	r3, .L258+28
 3169 0442 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3170 0444 92B1     		cbz	r2, .L213
 3171 0446 012A     		cmp	r2, #1
 3172 0448 1AD1     		bne	.L236
 300:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 301:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavStartDetectGround()))
 302:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 303:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 304:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 305:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavGotoWaypoint(5);
 3173              		.loc 3 305 0
 3174 044a 2549     		ldr	r1, .L258+12
 3175 044c 214C     		ldr	r4, .L258
 304:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3176              		.loc 3 304 0
 3177 044e 1A70     		strb	r2, [r3, #0]
 3178              		.loc 3 305 0
 3179 0450 2070     		strb	r0, [r4, #0]
 3180 0452 244B     		ldr	r3, .L258+16
 3181 0454 CC6B     		ldr	r4, [r1, #60]
 3182 0456 1C60     		str	r4, [r3, #0]
 3183 0458 0C6C     		ldr	r4, [r1, #64]
 3184 045a 496C     		ldr	r1, [r1, #68]
 3185 045c 5C60     		str	r4, [r3, #4]
 3186 045e 9960     		str	r1, [r3, #8]
 306:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 3187              		.loc 3 306 0
 3188 0460 1D4B     		ldr	r3, .L258+4
 3189 0462 1860     		str	r0, [r3, #0]
 307:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NavVerticalClimbMode(-(0.300000));
 3190              		.loc 3 307 0
 3191 0464 1D48     		ldr	r0, .L258+8
 3192 0466 0270     		strb	r2, [r0, #0]
 3193 0468 244A     		ldr	r2, .L258+40
 3194 046a 06E0     		b	.L244
 3195              	.L213:
 3196              	.LBB111:
 301:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         if (! (NavStartDetectGround()))
 3197              		.loc 3 301 0
 3198 046c 2449     		ldr	r1, .L258+44
 3199 046e 0120     		movs	r0, #1
 3200 0470 0870     		strb	r0, [r1, #0]
 3201              	.L241:
 3202              	.LBE111:
 302:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****           NextStageAndBreak();
 3203              		.loc 3 302 0
 3204 0472 1870     		strb	r0, [r3, #0]
 3205              	.L239:
 3206 0474 FFF7FEFF 		bl	nav_init_stage
 3207              	.LVL350:
 3208 0478 16E0     		b	.L151
 3209              	.L244:
 3210              		.loc 3 307 0
 3211 047a 224B     		ldr	r3, .L258+48
 3212 047c 1A60     		str	r2, [r3, #0]
 3213 047e 13E0     		b	.L151
 3214              	.L236:
 308:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 309:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 310:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 311:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3215              		.loc 3 311 0
 3216 0480 2078     		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 310:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(2)
 3217              		.loc 3 310 0
 3218 0482 0221     		movs	r1, #2
 3219 0484 1970     		strb	r1, [r3, #0]
 3220              		.loc 3 311 0
 3221 0486 431C     		adds	r3, r0, #1
 3222              	.L249:
 3223 0488 2370     		strb	r3, [r4, #0]
 3224 048a 0BE0     		b	.L240
 3225              	.L165:
 312:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 313:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     }
 314:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // post_call
 315:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     break;
 316:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h **** 
 317:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     Block(13) // HOME
 3226              		.loc 3 317 0
 3227 048c 0D20     		movs	r0, #13
 3228 048e 1870     		strb	r0, [r3, #0]
 318:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     ; // pre_call
 319:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****     switch(nav_stage) {
 3229              		.loc 3 319 0
 3230 0490 174B     		ldr	r3, .L258+28
 3231 0492 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3232 0494 0AB9     		cbnz	r2, .L237
 320:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(0)
 3233              		.loc 3 320 0
 3234 0496 1A70     		strb	r2, [r3, #0]
 3235 0498 06E0     		b	.L151
 3236              	.L237:
 321:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         nav_home();
 322:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         break;
 323:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       default:
 324:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****       Stage(1)
 3237              		.loc 3 324 0
 3238 049a 0121     		movs	r1, #1
 3239 049c 1970     		strb	r1, [r3, #0]
 325:/Users/tony-yi/git/paparazzi_local/var/MYAC/generated/flight_plan.h ****         NextBlock();
 3240              		.loc 3 325 0
 3241 049e 0E22     		movs	r2, #14
 3242              	.L242:
 3243 04a0 154B     		ldr	r3, .L258+36
 3244              	.L245:
 3245 04a2 1A70     		strb	r2, [r3, #0]
 3246              	.L240:
 3247 04a4 FFF7FEFF 		bl	nav_init_block
 3248              	.LVL351:
 3249              	.L151:
 3250              	.LBE97:
 3251              	.LBE96:
 303:firmwares/rotorcraft/navigation.c ****   nav_run();
 3252              		.loc 2 303 0
 3253 04a8 FFF7FEFF 		bl	nav_run
 3254              	.LVL352:
 305:firmwares/rotorcraft/navigation.c ****   ground_alt = POS_BFP_OF_REAL((float)ins_ltp_def.hmsl / 1000.);
 3255              		.loc 2 305 0
 3256 04ac 164A     		ldr	r2, .L258+52
 3257 04ae D06B     		ldr	r0, [r2, #60]
 3258 04b0 FFF7FEFF 		bl	__aeabi_i2f
 3259              	.LVL353:
 3260 04b4 FFF7FEFF 		bl	__aeabi_f2d
 3261              	.LVL354:
 3262 04b8 0022     		movs	r2, #0
 3263 04ba 144B     		ldr	r3, .L258+56
 3264 04bc FFF7FEFF 		bl	__aeabi_ddiv
 3265              	.LVL355:
 3266 04c0 0022     		movs	r2, #0
 3267 04c2 134B     		ldr	r3, .L258+60
 3268 04c4 FFF7FEFF 		bl	__aeabi_dmul
 3269              	.LVL356:
 3270 04c8 FFF7FEFF 		bl	__aeabi_d2iz
 3271              	.LVL357:
 3272 04cc 1149     		ldr	r1, .L258+64
 3273 04ce 0860     		str	r0, [r1, #0]
 3274 04d0 70BD     		pop	{r4, r5, r6, pc}
 3275              	.L259:
 3276 04d2 00BF     		.align	2
 3277              	.L258:
 3278 04d4 00000000 		.word	.LANCHOR8
 3279 04d8 00000000 		.word	.LANCHOR11
 3280 04dc 00000000 		.word	.LANCHOR9
 3281 04e0 00000000 		.word	.LANCHOR1
 3282 04e4 00000000 		.word	.LANCHOR6
 3283 04e8 00000000 		.word	.LANCHOR3
 3284 04ec 00000000 		.word	stage_time
 3285 04f0 00000000 		.word	nav_stage
 3286 04f4 00000000 		.word	.LANCHOR30
 3287 04f8 00000000 		.word	nav_block
 3288 04fc 9A99FDFF 		.word	-157286
 3289 0500 00000000 		.word	autopilot_detect_ground_once
 3290 0504 00000000 		.word	.LANCHOR16
 3291 0508 00000000 		.word	ins_ltp_def
 3292 050c 00408F40 		.word	1083129856
 3293 0510 00007040 		.word	1081081856
 3294 0514 00000000 		.word	.LANCHOR2
 3295              		.cfi_endproc
 3296              	.LFE132:
 3298              		.section	.text.nav_home,"ax",%progbits
 3299              		.align	1
 3300              		.global	nav_home
 3301              		.thumb
 3302              		.thumb_func
 3304              	nav_home:
 3305              	.LFB143:
 343:firmwares/rotorcraft/navigation.c **** 
 344:firmwares/rotorcraft/navigation.c **** void nav_home(void) {}
 3306              		.loc 2 344 0
 3307              		.cfi_startproc
 3308              		@ args = 0, pretend = 0, frame = 0
 3309              		@ frame_needed = 0, uses_anonymous_args = 0
 3310              		@ link register save eliminated.
 3311 0000 7047     		bx	lr
 3312              		.cfi_endproc
 3313              	.LFE143:
 3315              		.global	flight_altitude
 3316              		.global	nav_flight_altitude
 3317              		.global	nav_altitude
 3318              		.global	nav_climb
 3319              		.global	nav_throttle
 3320              		.global	vertical_mode
 3321              		.global	nav_radius
 3322              		.global	nav_course
 3323              		.global	nav_heading
 3324              		.global	nav_pitch
 3325              		.global	nav_roll
 3326              		.global	nav_leg_length
 3327              		.global	nav_leg_progress
 3328              		.global	nav_circle_radians
 3329              		.global	nav_circle_qdr
 3330              		.global	nav_circle_radius
 3331              		.global	nav_circle_centre
 3332              		.global	nav_segment_end
 3333              		.global	nav_segment_start
 3334              		.global	horizontal_mode
 3335              		.global	ground_alt
 3336              		.global	last_wp
 3337              		.global	nav_last_point
 3338              		.global	navigation_carrot
 3339              		.global	navigation_target
 3340              		.global	waypoints
 3341              		.global	nb_waypoint
 3342              		.section	.rodata
 3343              		.align	2
 3344              		.set	.LANCHOR0,. + 0
 3345              	.LC0:
 3346 0000 00002842 		.word	1109917696
 3347 0004 00002842 		.word	1109917696
 3348 0008 00001643 		.word	1125515264
 3349 000c 00000000 		.word	0
 3350 0010 00000000 		.word	0
 3351 0014 00001643 		.word	1125515264
 3352 0018 00004040 		.word	1077936128
 3353 001c 00000000 		.word	0
 3354 0020 00001643 		.word	1125515264
 3355 0024 00004040 		.word	1077936128
 3356 0028 00004040 		.word	1077936128
 3357 002c 00001643 		.word	1125515264
 3358 0030 00004040 		.word	1077936128
 3359 0034 000040C0 		.word	3225419776
 3360 0038 00001643 		.word	1125515264
 3361 003c 0000803F 		.word	1065353216
 3362 0040 00000000 		.word	0
 3363 0044 00001643 		.word	1125515264
 3364              		.section	.bss.nav_heading,"aw",%nobits
 3365              		.align	2
 3366              		.set	.LANCHOR12,. + 0
 3369              	nav_heading:
 3370 0000 00000000 		.space	4
 3371              		.section	.bss.last_nav_alt.6839,"aw",%nobits
 3372              		.align	2
 3373              		.set	.LANCHOR19,. + 0
 3376              	last_nav_alt.6839:
 3377 0000 00000000 		.space	4
 3378              		.section	.bss.prescaler.7575,"aw",%nobits
 3379              		.align	1
 3380              		.set	.LANCHOR29,. + 0
 3383              	prescaler.7575:
 3384 0000 0000     		.space	2
 3385              		.section	.bss.nav_radius,"aw",%nobits
 3386              		.align	2
 3387              		.set	.LANCHOR14,. + 0
 3390              	nav_radius:
 3391 0000 00000000 		.space	4
 3392              		.section	.bss.ground_alt,"aw",%nobits
 3393              		.align	2
 3394              		.set	.LANCHOR2,. + 0
 3397              	ground_alt:
 3398 0000 00000000 		.space	4
 3399              		.section	.bss.nav_course,"aw",%nobits
 3400              		.align	2
 3401              		.set	.LANCHOR13,. + 0
 3404              	nav_course:
 3405 0000 00000000 		.space	4
 3406              		.section	.bss.nav_leg_progress,"aw",%nobits
 3407              		.align	2
 3408              		.set	.LANCHOR17,. + 0
 3411              	nav_leg_progress:
 3412 0000 00000000 		.space	4
 3413              		.section	.bss.prescaler.7775,"aw",%nobits
 3414              		.align	1
 3415              		.set	.LANCHOR28,. + 0
 3418              	prescaler.7775:
 3419 0000 0000     		.space	2
 3420              		.section	.bss.waypoints,"aw",%nobits
 3421              		.align	2
 3422              		.set	.LANCHOR1,. + 0
 3425              	waypoints:
 3426 0000 00000000 		.space	72
 3426      00000000 
 3426      00000000 
 3426      00000000 
 3426      00000000 
 3427              		.section	.bss.nav_last_point,"aw",%nobits
 3428              		.align	2
 3429              		.set	.LANCHOR27,. + 0
 3432              	nav_last_point:
 3433 0000 00000000 		.space	12
 3433      00000000 
 3433      00000000 
 3434              		.section	.bss.nav_segment_start,"aw",%nobits
 3435              		.set	.LANCHOR24,. + 0
 3438              	nav_segment_start:
 3439 0000 00       		.space	1
 3440              		.section	.bss.horizontal_mode,"aw",%nobits
 3441              		.set	.LANCHOR8,. + 0
 3444              	horizontal_mode:
 3445 0000 00       		.space	1
 3446              		.section	.bss.nav_circle_qdr,"aw",%nobits
 3447              		.align	2
 3448              		.set	.LANCHOR20,. + 0
 3451              	nav_circle_qdr:
 3452 0000 00000000 		.space	4
 3453              		.section	.bss.nav_leg_length,"aw",%nobits
 3454              		.align	2
 3455              		.set	.LANCHOR18,. + 0
 3458              	nav_leg_length:
 3459 0000 00000000 		.space	4
 3460              		.section	.bss.last_wp,"aw",%nobits
 3461              		.set	.LANCHOR30,. + 0
 3464              	last_wp:
 3465 0000 00       		.space	1
 3466              		.section	.rodata.nb_waypoint,"a",%progbits
 3469              	nb_waypoint:
 3470 0000 06       		.byte	6
 3471              		.section	.bss.flight_altitude,"aw",%nobits
 3472              		.align	2
 3473              		.set	.LANCHOR5,. + 0
 3476              	flight_altitude:
 3477 0000 00000000 		.space	4
 3478              		.section	.bss.nav_climb,"aw",%nobits
 3479              		.align	2
 3480              		.set	.LANCHOR16,. + 0
 3483              	nav_climb:
 3484 0000 00000000 		.space	4
 3485              		.section	.bss.nav_flight_altitude,"aw",%nobits
 3486              		.align	2
 3487              		.set	.LANCHOR4,. + 0
 3490              	nav_flight_altitude:
 3491 0000 00000000 		.space	4
 3492              		.section	.bss.nav_segment_end,"aw",%nobits
 3493              		.set	.LANCHOR25,. + 0
 3496              	nav_segment_end:
 3497 0000 00       		.space	1
 3498              		.section	.bss.navigation_carrot,"aw",%nobits
 3499              		.align	2
 3500              		.set	.LANCHOR7,. + 0
 3503              	navigation_carrot:
 3504 0000 00000000 		.space	12
 3504      00000000 
 3504      00000000 
 3505              		.section	.bss.nav_circle_centre,"aw",%nobits
 3506              		.set	.LANCHOR22,. + 0
 3509              	nav_circle_centre:
 3510 0000 00       		.space	1
 3511              		.section	.bss.vertical_mode,"aw",%nobits
 3512              		.set	.LANCHOR9,. + 0
 3515              	vertical_mode:
 3516 0000 00       		.space	1
 3517              		.section	.bss.time_at_wp.6828,"aw",%nobits
 3518              		.set	.LANCHOR26,. + 0
 3521              	time_at_wp.6828:
 3522 0000 00       		.space	1
 3523              		.section	.bss.nav_roll,"aw",%nobits
 3524              		.align	2
 3525              		.set	.LANCHOR10,. + 0
 3528              	nav_roll:
 3529 0000 00000000 		.space	4
 3530              		.section	.bss.nav_pitch,"aw",%nobits
 3531              		.align	2
 3532              		.set	.LANCHOR11,. + 0
 3535              	nav_pitch:
 3536 0000 00000000 		.space	4
 3537              		.section	.bss.nav_circle_radius,"aw",%nobits
 3538              		.align	2
 3539              		.set	.LANCHOR23,. + 0
 3542              	nav_circle_radius:
 3543 0000 00000000 		.space	4
 3544              		.section	.bss.navigation_target,"aw",%nobits
 3545              		.align	2
 3546              		.set	.LANCHOR6,. + 0
 3549              	navigation_target:
 3550 0000 00000000 		.space	12
 3550      00000000 
 3550      00000000 
 3551              		.section	.bss.nav_circle_radians,"aw",%nobits
 3552              		.align	2
 3553              		.set	.LANCHOR21,. + 0
 3556              	nav_circle_radians:
 3557 0000 00000000 		.space	4
 3558              		.section	.bss.nav_altitude,"aw",%nobits
 3559              		.align	2
 3560              		.set	.LANCHOR3,. + 0
 3563              	nav_altitude:
 3564 0000 00000000 		.space	4
 3565              		.section	.bss.nav_throttle,"aw",%nobits
 3566              		.align	2
 3567              		.set	.LANCHOR15,. + 0
 3570              	nav_throttle:
 3571 0000 00000000 		.space	4
 3572              		.text
 3573              	.Letext0:
 3574              		.file 4 "/opt/local/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eabi/include/stdint.h"
 3575              		.file 5 "/Users/tony-yi/git/paparazzi_local/sw/include/std.h"
 3576              		.file 6 "./math/pprz_algebra_int.h"
 3577              		.file 7 "./math/pprz_geodetic_int.h"
 3578              		.file 8 "./math/pprz_algebra_float.h"
 3579              		.file 9 "./math/pprz_geodetic_float.h"
 3580              		.file 10 "./mcu_periph/sys_time.h"
 3581              		.file 11 "./mcu_periph/uart.h"
 3582              		.file 12 "./subsystems/gps.h"
 3583              		.file 13 "./math/pprz_orientation_conversion.h"
 3584              		.file 14 "./subsystems/ins.h"
 3585              		.file 15 "./math/pprz_trig_int.h"
 3586              		.file 16 "./subsystems/navigation/common_flight_plan.h"
 3587              		.file 17 "./subsystems/ins/ins_int.h"
 3588              		.file 18 "./firmwares/rotorcraft/autopilot.h"
 3589              		.file 19 "./subsystems/datalink/datalink.h"
 3590              		.file 20 "./subsystems/datalink/pprz_transport.h"
 3591              		.file 21 "./subsystems/datalink/xbee.h"
 3592              		.file 22 "./subsystems/datalink/w5100.h"
 3593              		.file 23 "./subsystems/datalink/downlink.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 navigation.c
/var/tmp//cc2wmRMn.s:19     .text.stateGetPositionEnu_i:0000000000000000 $t
/var/tmp//cc2wmRMn.s:23     .text.stateGetPositionEnu_i:0000000000000000 stateGetPositionEnu_i
/var/tmp//cc2wmRMn.s:50     .text.stateGetPositionEnu_i:0000000000000014 $d
/var/tmp//cc2wmRMn.s:62     .text.nav_init:0000000000000000 $t
/var/tmp//cc2wmRMn.s:67     .text.nav_init:0000000000000000 nav_init
/var/tmp//cc2wmRMn.s:235    .text.nav_init:00000000000000d0 $d
/var/tmp//cc2wmRMn.s:266    .text.nav_run:0000000000000000 $t
/var/tmp//cc2wmRMn.s:271    .text.nav_run:0000000000000000 nav_run
/var/tmp//cc2wmRMn.s:322    .text.nav_run:0000000000000038 $d
/var/tmp//cc2wmRMn.s:335    .text.nav_circle:0000000000000000 $t
/var/tmp//cc2wmRMn.s:340    .text.nav_circle:0000000000000000 nav_circle
/var/tmp//cc2wmRMn.s:713    .text.nav_circle:00000000000001e4 $d
/var/tmp//cc2wmRMn.s:726    .text.nav_route:0000000000000000 $t
/var/tmp//cc2wmRMn.s:731    .text.nav_route:0000000000000000 nav_route
/var/tmp//cc2wmRMn.s:917    .text.nav_route:00000000000000e4 $d
/var/tmp//cc2wmRMn.s:928    .text.nav_approaching_from:0000000000000000 $t
/var/tmp//cc2wmRMn.s:933    .text.nav_approaching_from:0000000000000000 nav_approaching_from
/var/tmp//cc2wmRMn.s:1095   .text.nav_approaching_from:00000000000000b0 $d
/var/tmp//cc2wmRMn.s:1101   .text.nav_reset_reference:0000000000000000 $t
/var/tmp//cc2wmRMn.s:1106   .text.nav_reset_reference:0000000000000000 nav_reset_reference
/var/tmp//cc2wmRMn.s:1131   .text.nav_reset_reference:0000000000000010 $d
/var/tmp//cc2wmRMn.s:1140   .text.nav_reset_alt:0000000000000000 $t
/var/tmp//cc2wmRMn.s:1145   .text.nav_reset_alt:0000000000000000 nav_reset_alt
/var/tmp//cc2wmRMn.s:1364   .text.nav_reset_alt:00000000000001a0 $d
/var/tmp//cc2wmRMn.s:1376   .text.nav_init_stage:0000000000000000 $t
/var/tmp//cc2wmRMn.s:1381   .text.nav_init_stage:0000000000000000 nav_init_stage
/var/tmp//cc2wmRMn.s:1424   .text.nav_init_stage:0000000000000030 $d
/var/tmp//cc2wmRMn.s:1432   .text.nav_move_waypoint:0000000000000000 $t
/var/tmp//cc2wmRMn.s:1437   .text.nav_move_waypoint:0000000000000000 nav_move_waypoint
/var/tmp//cc2wmRMn.s:1749   .text.nav_move_waypoint:00000000000001b4 $d
/var/tmp//cc2wmRMn.s:1760   .text.navigation_update_wp_from_speed:0000000000000000 $t
/var/tmp//cc2wmRMn.s:1765   .text.navigation_update_wp_from_speed:0000000000000000 navigation_update_wp_from_speed
/var/tmp//cc2wmRMn.s:2032   .text.navigation_update_wp_from_speed:0000000000000160 $d
/var/tmp//cc2wmRMn.s:2039   .text.navigation_update_wp_from_speed:0000000000000174 $t
/var/tmp//cc2wmRMn.s:2349   .text.navigation_update_wp_from_speed:0000000000000330 $d
/var/tmp//cc2wmRMn.s:2360   .text.nav_detect_ground:0000000000000000 $t
/var/tmp//cc2wmRMn.s:2365   .text.nav_detect_ground:0000000000000000 nav_detect_ground
/var/tmp//cc2wmRMn.s:2387   .text.nav_detect_ground:0000000000000010 $d
/var/tmp//cc2wmRMn.s:2393   .text.nav_periodic_task:0000000000000000 $t
/var/tmp//cc2wmRMn.s:2398   .text.nav_periodic_task:0000000000000000 nav_periodic_task
/var/tmp//cc2wmRMn.s:2447   .text.nav_periodic_task:0000000000000030 $d
/var/tmp//cc2wmRMn.s:2463   .text.nav_periodic_task:000000000000004c $t
/var/tmp//cc2wmRMn.s:2836   .text.nav_periodic_task:0000000000000236 $d
/var/tmp//cc2wmRMn.s:2840   .text.nav_periodic_task:000000000000023a $t
/var/tmp//cc2wmRMn.s:2867   .text.nav_periodic_task:000000000000025c $d
/var/tmp//cc2wmRMn.s:2885   .text.nav_periodic_task:000000000000029c $t
/var/tmp//cc2wmRMn.s:3278   .text.nav_periodic_task:00000000000004d4 $d
/var/tmp//cc2wmRMn.s:3299   .text.nav_home:0000000000000000 $t
/var/tmp//cc2wmRMn.s:3304   .text.nav_home:0000000000000000 nav_home
/var/tmp//cc2wmRMn.s:3476   .bss.flight_altitude:0000000000000000 flight_altitude
/var/tmp//cc2wmRMn.s:3490   .bss.nav_flight_altitude:0000000000000000 nav_flight_altitude
/var/tmp//cc2wmRMn.s:3563   .bss.nav_altitude:0000000000000000 nav_altitude
/var/tmp//cc2wmRMn.s:3483   .bss.nav_climb:0000000000000000 nav_climb
/var/tmp//cc2wmRMn.s:3570   .bss.nav_throttle:0000000000000000 nav_throttle
/var/tmp//cc2wmRMn.s:3515   .bss.vertical_mode:0000000000000000 vertical_mode
/var/tmp//cc2wmRMn.s:3390   .bss.nav_radius:0000000000000000 nav_radius
/var/tmp//cc2wmRMn.s:3404   .bss.nav_course:0000000000000000 nav_course
/var/tmp//cc2wmRMn.s:3369   .bss.nav_heading:0000000000000000 nav_heading
/var/tmp//cc2wmRMn.s:3535   .bss.nav_pitch:0000000000000000 nav_pitch
/var/tmp//cc2wmRMn.s:3528   .bss.nav_roll:0000000000000000 nav_roll
/var/tmp//cc2wmRMn.s:3458   .bss.nav_leg_length:0000000000000000 nav_leg_length
/var/tmp//cc2wmRMn.s:3411   .bss.nav_leg_progress:0000000000000000 nav_leg_progress
/var/tmp//cc2wmRMn.s:3556   .bss.nav_circle_radians:0000000000000000 nav_circle_radians
/var/tmp//cc2wmRMn.s:3451   .bss.nav_circle_qdr:0000000000000000 nav_circle_qdr
/var/tmp//cc2wmRMn.s:3542   .bss.nav_circle_radius:0000000000000000 nav_circle_radius
/var/tmp//cc2wmRMn.s:3509   .bss.nav_circle_centre:0000000000000000 nav_circle_centre
/var/tmp//cc2wmRMn.s:3496   .bss.nav_segment_end:0000000000000000 nav_segment_end
/var/tmp//cc2wmRMn.s:3438   .bss.nav_segment_start:0000000000000000 nav_segment_start
/var/tmp//cc2wmRMn.s:3444   .bss.horizontal_mode:0000000000000000 horizontal_mode
/var/tmp//cc2wmRMn.s:3397   .bss.ground_alt:0000000000000000 ground_alt
/var/tmp//cc2wmRMn.s:3464   .bss.last_wp:0000000000000000 last_wp
/var/tmp//cc2wmRMn.s:3432   .bss.nav_last_point:0000000000000000 nav_last_point
/var/tmp//cc2wmRMn.s:3503   .bss.navigation_carrot:0000000000000000 navigation_carrot
/var/tmp//cc2wmRMn.s:3549   .bss.navigation_target:0000000000000000 navigation_target
/var/tmp//cc2wmRMn.s:3425   .bss.waypoints:0000000000000000 waypoints
/var/tmp//cc2wmRMn.s:3469   .rodata.nb_waypoint:0000000000000000 nb_waypoint
/var/tmp//cc2wmRMn.s:3343   .rodata:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3365   .bss.nav_heading:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3372   .bss.last_nav_alt.6839:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3376   .bss.last_nav_alt.6839:0000000000000000 last_nav_alt.6839
/var/tmp//cc2wmRMn.s:3379   .bss.prescaler.7575:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3383   .bss.prescaler.7575:0000000000000000 prescaler.7575
/var/tmp//cc2wmRMn.s:3386   .bss.nav_radius:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3393   .bss.ground_alt:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3400   .bss.nav_course:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3407   .bss.nav_leg_progress:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3414   .bss.prescaler.7775:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3418   .bss.prescaler.7775:0000000000000000 prescaler.7775
/var/tmp//cc2wmRMn.s:3421   .bss.waypoints:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3428   .bss.nav_last_point:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3439   .bss.nav_segment_start:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3445   .bss.horizontal_mode:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3447   .bss.nav_circle_qdr:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3454   .bss.nav_leg_length:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3465   .bss.last_wp:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3472   .bss.flight_altitude:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3479   .bss.nav_climb:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3486   .bss.nav_flight_altitude:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3497   .bss.nav_segment_end:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3499   .bss.navigation_carrot:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3510   .bss.nav_circle_centre:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3516   .bss.vertical_mode:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3521   .bss.time_at_wp.6828:0000000000000000 time_at_wp.6828
/var/tmp//cc2wmRMn.s:3522   .bss.time_at_wp.6828:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3524   .bss.nav_roll:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3531   .bss.nav_pitch:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3538   .bss.nav_circle_radius:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3545   .bss.navigation_target:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3552   .bss.nav_circle_radians:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3559   .bss.nav_altitude:0000000000000000 $d
/var/tmp//cc2wmRMn.s:3566   .bss.nav_throttle:0000000000000000 $d
                     .debug_frame:0000000000000010 $d
/var/tmp//cc2wmRMn.s:265    .text.nav_init:0000000000000134 $t
/var/tmp//cc2wmRMn.s:334    .text.nav_run:0000000000000054 $t

UNDEFINED SYMBOLS
stateCalcPositionEnu_i
state
__aeabi_fmul
__aeabi_f2iz
__aeabi_f2d
__aeabi_dsub
__aeabi_dmul
__aeabi_d2iz
memcpy
nav_stage
nav_block
__aeabi_i2d
__aeabi_dcmpgt
pprz_trig_int
ins
ins_ltp_initialised
__aeabi_ddiv
__aeabi_d2f
__aeabi_i2f
gps
ins_ltp_def
stage_time
uart_check_free_space
uart_transmit
uart2
downlink_nb_msgs
downlink_nb_bytes
ck_a
ck_b
downlink_nb_ovrn
autopilot_detect_ground
__aeabi_fcmpgt
autopilot_set_motors_on
stateCalcPositionEnu_f
block_time
autopilot_mode
nav_init_block
autopilot_detect_ground_once
